{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialComptroller", "type": "address", "internalType": "address" },
        { "name": "initialNFTDescriptor", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "aggregateAmount",
      "inputs": [{ "name": "token", "type": "address", "internalType": "contract IERC20" }],
      "outputs": [{ "name": "amount", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batch",
      "inputs": [{ "name": "calls", "type": "bytes[]", "internalType": "bytes[]" }],
      "outputs": [{ "name": "results", "type": "bytes[]", "internalType": "bytes[]" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "calculateMinFeeWei",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "minFeeWei", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancel",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "cancelMultiple",
      "inputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "outputs": [{ "name": "refundedAmounts", "type": "uint128[]", "internalType": "uint128[]" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "comptroller",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ISablierComptroller" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "createWithDurationsLD",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "segmentsWithDuration",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.SegmentWithDuration[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLL",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        },
        {
          "name": "durations",
          "type": "tuple",
          "internalType": "struct LockupLinear.Durations",
          "components": [
            { "name": "cliff", "type": "uint40", "internalType": "uint40" },
            { "name": "total", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLT",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "tranchesWithDuration",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.TrancheWithDuration[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLD",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "segments",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLL",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        },
        { "name": "cliffTime", "type": "uint40", "internalType": "uint40" }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLT",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCliffTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "cliffTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDepositedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "depositedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEndTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "endTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLockupModel",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "lockupModel", "type": "uint8", "internalType": "enum Lockup.Model" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipient",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRefundedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSegments",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "segments",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSender",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "sender", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStartTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "startTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTranches",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUnderlyingToken",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "token", "type": "address", "internalType": "contract IERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUnlockAmounts",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawnAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAllowedToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCold",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransferable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWarm",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nativeToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextStreamId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nftDescriptor",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ILockupNFTDescriptor" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "recover",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refundableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounce",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setComptroller",
      "inputs": [{ "name": "newComptroller", "type": "address", "internalType": "contract ISablierComptroller" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNFTDescriptor",
      "inputs": [{ "name": "newNFTDescriptor", "type": "address", "internalType": "contract ILockupNFTDescriptor" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNativeToken",
      "inputs": [{ "name": "newNativeToken", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "statusOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "status", "type": "uint8", "internalType": "enum Lockup.Status" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "streamedAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "streamedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "uri", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFeesToComptroller",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "wasCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMax",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMaxAndTransfer",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "newRecipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMultiple",
      "inputs": [
        { "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "amounts", "type": "uint128[]", "internalType": "uint128[]" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AllowToHook",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchMetadataUpdate",
      "inputs": [
        { "name": "_fromTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "_toTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CancelLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "senderAmount", "type": "uint128", "indexed": false, "internalType": "uint128" },
        { "name": "recipientAmount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupDynamicStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "segments",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupLinearStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        { "name": "cliffTime", "type": "uint40", "indexed": false, "internalType": "uint40" },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupTranchedStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" }
          ]
        },
        {
          "name": "tranches",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InvalidStreamInCancelMultiple",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "revertData", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InvalidWithdrawalInWithdrawMultiple",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "revertData", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MetadataUpdate",
      "inputs": [{ "name": "_tokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RenounceLockupStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetComptroller",
      "inputs": [
        {
          "name": "oldComptroller",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierComptroller"
        },
        {
          "name": "newComptroller",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierComptroller"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNFTDescriptor",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        {
          "name": "oldNFTDescriptor",
          "type": "address",
          "indexed": true,
          "internalType": "contract ILockupNFTDescriptor"
        },
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "indexed": true,
          "internalType": "contract ILockupNFTDescriptor"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferFeesToComptroller",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        { "name": "feeAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawFromLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "Comptrollerable_CallerNotComptroller",
      "inputs": [
        { "name": "comptroller", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "Comptrollerable_UnsupportedInterfaceId",
      "inputs": [
        { "name": "previousComptroller", "type": "address", "internalType": "address" },
        { "name": "newComptroller", "type": "address", "internalType": "address" },
        { "name": "minimalInterfaceId", "type": "bytes4", "internalType": "bytes4" }
      ]
    },
    { "type": "error", "name": "DelegateCall", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [{ "name": "operator", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupState_NotExpectedModel",
      "inputs": [
        { "name": "actualLockupModel", "type": "uint8", "internalType": "enum Lockup.Model" },
        { "name": "expectedLockupModel", "type": "uint8", "internalType": "enum Lockup.Model" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockupState_Null",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_AllowToHookUnsupportedInterface",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_InsufficientFeePayment",
      "inputs": [
        { "name": "feePaid", "type": "uint256", "internalType": "uint256" },
        { "name": "minFeeWei", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockup_InvalidHookSelector",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_NativeTokenAlreadySet",
      "inputs": [{ "name": "nativeToken", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_NotTransferable",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_Overdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockup_StreamCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_StreamDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_StreamNotCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_StreamNotDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_StreamSettled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockup_WithdrawAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_WithdrawArrayCountsNotEqual",
      "inputs": [
        { "name": "streamIdsCount", "type": "uint256", "internalType": "uint256" },
        { "name": "amountsCount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockup_WithdrawToZeroAddress",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockup_WithdrawalAddressNotRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523461044a57604081615f0e803803809161001f8285610461565b83398101031261044a5761003e602061003783610484565b9201610484565b906040519161004e604084610461565b601283527114d8589b1a595c88131bd8dadd5c0813919560721b60208401526040519161007c604084610461565b600a83526905341422d4c4f434b55560b41b602084015260018060a01b03166040516301ffc9a760e01b8152630654439160e41b6004820152602081602481855afa908115610456575f91610417575b50156103f6575f80546001600160a01b031916821781556040805191825260208201929092527ff45d882a72fce9d8d7a7e2e196a338d4d9d4057510b4b9ddf91a7066104d2eaf9190a182516001600160401b03811161030757600154600181811c911680156103ec575b60208210146102e957601f8111610389575b506020601f821160011461032657819293945f9261031b575b50508160011b915f199060031b1c1916176001555b81516001600160401b03811161030757600254600181811c911680156102fd575b60208210146102e957601f8111610286575b50602092601f821160011461022557928192935f9261021a575b50508160011b915f199060031b1c1916176002555b306080526001600955600a80546001600160a01b0319166001600160a01b0392909216919091179055604051615a7590816104998239608051816142820152f35b015190505f806101c4565b601f1982169360025f52805f20915f5b86811061026e5750836001959610610256575b505050811b016002556101d9565b01515f1960f88460031b161c191690555f8080610248565b91926020600181928685015181550194019201610235565b60025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f830160051c810191602084106102df575b601f0160051c01905b8181106102d457506101aa565b5f81556001016102c7565b90915081906102be565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610198565b634e487b7160e01b5f52604160045260245ffd5b015190505f80610162565b601f1982169060015f52805f20915f5b81811061037157509583600195969710610359575b505050811b01600155610177565b01515f1960f88460031b161c191690555f808061034b565b9192602060018192868b015181550194019201610336565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c810191602084106103e2575b601f0160051c01905b8181106103d75750610149565b5f81556001016103ca565b90915081906103c1565b90607f1690610137565b6364ca3de160e11b5f525f600452602452630654439160e41b60445260645ffd5b90506020813d60201161044e575b8161043260209383610461565b8101031261044a5751801515810361044a575f6100cc565b5f80fd5b3d9150610425565b6040513d5f823e3d90fd5b601f909101601f19168101906001600160401b0382119082101761030757604052565b51906001600160a01b038216820361044a5756fe60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a71461041f57806306fdde031461041a578063081812fc14610415578063095ea7b3146104105780631400ecec1461040b5780631c1cdd4c146104065780631e897afb146104015780631e99d569146103fc57806323b872dd146103f7578063303acc85146103f2578063406887cb146103ed57806340e58ee5146103e8578063425d30dd146103e357806342842e0e146103de57806342966c68146103d957806344267570146103d45780634857501f146103cf5780634869e12d146103ca5780634cc55e11146103c55780635fe3b567146103c05780636352211e146103b6578063648bf774146103bb5780636d0cee75146103b65780636da1e102146103b157806370a08231146103ac57806374d213e5146103a7578063780a82c8146103a257806378f82ce71461039d5780637aab211a146103985780637cad6cd1146103935780637de6b1db1461038e5780637ee44729146103895780637f5799f9146103845780638659c2701461037f5780638bad38dd1461037a5780638f69b993146103755780639067b6771461037057806395d89b411461036b5780639d93ddd314610366578063a22cb46514610361578063a47757721461035c578063a80fc07114610357578063ad35efd414610352578063b25645691461034d578063b637b86514610348578063b8856d8914610343578063b88d4fde1461033e578063b8a3be6614610339578063b971302a14610334578063bc2be1be1461032f578063c156a11d1461032a578063c87b56dd14610325578063c9ad007c14610320578063cca138e51461031b578063d4dbd20b14610316578063d511609f14610311578063d975dfed1461030c578063df2a848c14610307578063e1758bd814610302578063e6c417eb146102fd578063e985e9c5146102f8578063ea5ead19146102f3578063ec01da3b146102ee578063f590c176146102e95763fdd46d60146102e4575f80fd5b6130a8565b61305f565b613023565b612dce565b612d68565b612d23565b612cf3565b612c76565b612c29565b612bf0565b612bb1565b612af7565b61297d565b612898565b6125d2565b612595565b612559565b612524565b6124bd565b612266565b6121cc565b612113565b6120e0565b612083565b612044565b611f8c565b611e33565b611d7e565b611d41565b611cd9565b611b5e565b611a77565b61199b565b6117ab565b611639565b611577565b611402565b61136d565b6112c4565b6111d5565b611140565b6110d9565b610ff1565b611020565b610fcc565b610e52565b610e1a565b610dba565b610d94565b610d0d565b610ce4565b610ca6565b610bb3565b610a91565b610a50565b610a39565b6109f0565b610934565b610822565b610771565b610668565b61061a565b610527565b61043a565b6001600160e01b031981160361043657565b5f80fd5b346104365760203660031901126104365760043561045781610424565b63ffffffff60e01b16632483248360e11b8114908115610480575b506040519015158152602090f35b6380ac58cd60e01b8114915081156104b2575b81156104a1575b505f610472565b6301ffc9a760e01b1490505f61049a565b635b5e139f60e01b81149150610493565b5f91031261043657565b5f5b8381106104de5750505f910152565b81810151838201526020016104cf565b90602091610507815180928185528580860191016104cd565b601f01601f1916010190565b9060206105249281815201906104ee565b90565b34610436575f366003190112610436576040515f6001548060011c9060018116908115610610575b6020831082146105fc5782855260208501919081156105e35750600114610591575b61058d846105818186038261240b565b60405191829182610513565b0390f35b60015f9081529250907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8184106105cf5750500161058182610571565b8054848401526020909301926001016105bc565b60ff191682525090151560051b01905061058182610571565b634e487b7160e01b5f52602260045260245ffd5b91607f169161054f565b346104365760203660031901126104365760043561063781613b23565b505f52600560205260206001600160a01b0360405f205416604051908152f35b6001600160a01b0381160361043657565b346104365760403660031901126104365760043561068581610657565b6024359061069282613b23565b3315158061075e575b8061071e575b61070a5782610708936106ed926001600160a01b0380861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f52600560205260405f2090565b906001600160a01b03166001600160a01b0319825416179055565b005b63a9fbf51f60e01b5f523360045260245b5ffd5b5060ff61075633610740846001600160a01b03165f52600660205260405f2090565b906001600160a01b03165f5260205260405f2090565b5416156106a1565b50336001600160a01b038216141561069b565b346104365760203660031901126104365761058d60043561079181613b56565b5f90805f52600e60205260ff60405f205460f01c1680610805575b6107cc575b506040516001600160801b0390911681529081906020820190565b6107ff9150805f52600e6020526107f96107f3600260405f2001546001600160801b031690565b91613df4565b906132fa565b5f6107b1565b50805f52600e60205260ff600160405f20015460a01c16156107ac565b346104365760203660031901126104365761084760043561084281613b56565b6140e5565b600581101561087257801590811561086757506040519015158152602090f35b60019150145f610472565b6120c2565b9181601f84011215610436578235916001600160401b038311610436576020808501948460051b01011161043657565b602060031982011261043657600435906001600160401b038211610436576108d191600401610877565b9091565b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061090757505050505090565b9091929394602080610925600193603f1986820301875289516104ee565b970193019301919392906108f8565b61093d366108a7565b906109478261331a565b91610955604051938461240b565b808352601f196109648261331a565b015f5b8181106109df5750505f5b818110610987576040518061058d86826108d5565b5f80610994838587613377565b906109a460405180938193613393565b0390305af46109b16133a0565b90156109d757906001916109c582876133cf565b526109d081866133cf565b5001610972565b805190602001fd5b806060602080938801015201610967565b34610436575f366003190112610436576020600954604051908152f35b606090600319011261043657600435610a2581610657565b90602435610a3281610657565b9060443590565b3461043657610708610a4a36610a0d565b916133e3565b34610436576020366003190112610436576001600160a01b03600435610a7581610657565b165f52600b602052602060ff60405f2054166040519015158152f35b3461043657602036600319011261043657600435610aae81610657565b610ab661424d565b6040516301ffc9a760e01b815263f8ee98d360e01b60048201526001600160a01b0382169190602081602481865afa908115610bae575f91610b7f575b5015610b6457610b17610b24916001600160a01b03165f52600b60205260405f2090565b805460ff19166001179055565b6001600160a01b03610b3d5f546001600160a01b031690565b167fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd728015f80a3005b63f1dc125d60e01b5f526001600160a01b031660045260245ffd5b610ba1915060203d602011610ba7575b610b99818361240b565b8101906134e2565b5f610af3565b503d610b8f565b6134f7565b602036600319011261043657600435610bca614278565b610bd381613b56565b5f818152600e602052604090206001015460a01c60ff1615610c01576315efa0f360e11b5f5260045260245ffd5b610c1d610c16825f52600e60205260405f2090565b5460f81c90565b610c9457610c52610c46610c39835f52600e60205260405f2090565b546001600160a01b031690565b6001600160a01b031690565b3303610c7e57610c6461058d916142b9565b6040516001600160801b0390911681529081906020820190565b632082501160e01b5f526004523360245260445ffd5b63d0a172b360e01b5f5260045260245ffd5b3461043657602036600319011261043657600435610cc381613b56565b5f52600e602052602060ff600160405f20015460a01c166040519015158152f35b3461043657610708610cf536610a0d565b9060405192610d0560208561240b565b5f84526138bd565b602036600319011261043657600435610d24614278565b610d2d81613b56565b805f52600e60205260ff600160405f20015460a01c1615610d8257805f526003602052610d75610d71610d6b60405f206001600160a01b0390541690565b836145ef565b1590565b610c7e57610708906145fa565b633090f59b60e11b5f5260045260245ffd5b34610436575f3660031901126104365760206001600160a01b03600a5416604051908152f35b3461043657602036600319011261043657600435610dd781613b56565b5f90610de2816140e5565b600581101561087257600203610e0057506040519015158152602090f35b90505f52600e60205260ff60405f205460f01c165f610472565b34610436576020366003190112610436576020610e41600435610e3c81613b56565b613df4565b6001600160801b0360405191168152f35b6040366003190112610436576004356001600160401b03811161043657610e7d903690600401610877565b6024356001600160401b03811161043657610e9c903690600401610877565b9290610ea6614278565b838303610fb3575f5b838110610eb857005b805f80610ec86001948888613502565b35610ef0610ed7858a8a613502565b355f5260036020526001600160a01b0360405f20541690565b610f52610f06610f01878d8b613502565b613512565b6040516307eea36b60e51b6020820190815260248201959095526001600160a01b0390931660448401526001600160801b0316606483015281608481015b03601f19810183528261240b565b5190305af4610f5f6133a0565b9015610f6d575b5001610eaf565b7f36b7a9a3f5bfe69ad6ae04107796a967de5c92c761b4d7a4c34e985670666419610faa610f9c848989613502565b359260405191829182610513565b0390a25f610f66565b6352f6a1f360e11b5f526004839052602484905260445ffd5b34610436575f3660031901126104365760206001600160a01b035f5416604051908152f35b3461043657602036600319011261043657602061100f600435613b23565b6001600160a01b0360405191168152f35b346104365760403660031901126104365760043561103d81610657565b6024359061104a82610657565b61105261424d565b6040516370a0823160e01b81523060048201526001600160a01b0382169290602081602481875afa8015610bae57610708946110a2925f926110a8575b505f52600760205260405f205490613539565b9161468c565b6110cb91925060203d6020116110d2575b6110c3818361240b565b81019061351c565b905f61108f565b503d6110b9565b34610436576020366003190112610436576004356110f681610657565b6110fe61424d565b600854906001600160a01b0382168061112e57506001600160a01b0316906001600160a01b031916176008555f80f35b6373f4d8a760e11b5f5260045260245ffd5b34610436576020366003190112610436576001600160a01b0360043561116581610657565b168015611182575f526004602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b90816101209103126104365790565b604090602319011261043657602490565b604090606319011261043657606490565b64ffffffffff81160361043657565b6080366003190112610436576004356001600160401b038111610436576112b461120661058d923690600401611195565b61120f366111a4565b9060643561121c816111c6565b611224614278565b60808201359261123384611f82565b60408301359261124284613097565b602081013561125081610657565b81359061125c82610657565b61126a610100840184613345565b9690956112ae6112a661129b6060880135996112858b610657565b60a08901359b6112948d611f82565b3691612487565b9660c036910161355a565b963690613594565b9861486a565b6040519081529081906020820190565b34610436576020366003190112610436576004356112e181613b56565b805f52600e60205260ff600160405f20015460b01c1660038110156108725761133f5761132761131c61058d925f52600c60205260405f2090565b5464ffffffffff1690565b60405164ffffffffff90911681529081906020820190565b5f52600e60205261071b61135e600160405f200160ff905460b01c1690565b63319dec3f60e01b5f526135ca565b34610436575f36600319011261043657475f808080846001600160a01b038254165af1506113996133a0565b507f56dedb874d4fc0f70753f281fa2c25e82085163206086fe826cf834b51701f6c60206001600160a01b035f541692604051908152a2005b9181601f84011215610436578235916001600160401b038311610436576020808501946060850201011161043657565b6040366003190112610436576004356001600160401b0381116104365761142d903690600401611195565b6024356001600160401b0381116104365761144c9036906004016113d2565b91611455614278565b60808101359061146482611f82565b60408101359261147384613097565b60208201359061148282610657565b82359161148e83610657565b61149c610100850185613345565b96906060860135976114ad89610657565b60a0870135996114bc8b611f82565b6114c58161331a565b956114d3604051978861240b565b818752606060208801920281019036821161043657915b818310611520575061058d6112b48d8d8d8d8d8d8d8d61151a61150f8f8f3691612487565b9560c036910161355a565b95614bf9565b60608336031261043657602060609160405161153b816123d0565b853561154681613097565b8152828601356115558161360e565b838201526040860135611567816111c6565b60408201528152019201916114ea565b346104365760203660031901126104365760043561159481610657565b61159c61424d565b6001600160a01b0380600a54921691828219821617600a55166001600160a01b035f54167fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc5f80a46009545f1981019081116116345761162f7f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c9160405191829182919060206040840193600181520152565b0390a1005b6132e6565b602036600319011261043657600435611650614278565b61165981613b56565b611662816140e5565b61166b816120d6565b60048103611687576315efa0f360e11b5f52600482905260245ffd5b611690816120d6565b600381036116ac5763d0a172b360e01b5f52600482905260245ffd5b806116b86002926120d6565b1461175b576116d5610c46610c39835f52600e60205260405f2090565b3303610c7e576116fd610d716116f3835f52600e60205260405f2090565b5460f01c60ff1690565b61174957611723611716825f52600e60205260405f2090565b805460ff60f01b19169055565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a2005b635dd950cb60e11b5f5260045260245ffd5b6308aca53f60e21b5f5260045260245ffd5b908160e09103126104365790565b9181601f84011215610436578235916001600160401b038311610436576020808501948460061b01011161043657565b6040366003190112610436576004356001600160401b038111610436576117d690369060040161176d565b6024356001600160401b038111610436576117f590369060040161177b565b906117fe614278565b5f64ffffffffff42169283926118286040519586938493631441207960e01b8552600485016136cd565b038173__$70ac0b9f44f1ad43af70526685fc041161$$70ac0b9f44f1ad43af70526685fc041161$__5af4918215610bae5761058d936112b493612acf935f91612ad5575b50612a70612a4a6040611877612a44855161352b565b856133cf565b612a62612a5561242c565b64ffffffffff9095168552565b64ffffffffff166020840152565b612a7c60808401613546565b90612a8960408501613512565b90612a9660208601613550565b612a9f86613550565b92612aad60c0880188613345565b9890612ac760a0612ac060608c01613550565b9a01613546565b993691612487565b94614bf9565b612af191503d805f833e612ae9818361240b565b8101906139a8565b5f612a2e565b3461043657602036600319011261043657612b6c6020600435612b1981613b56565b6001600160a01b035f5416905f52600e82526001600160a01b0360405f20541690604051808095819463419d289d60e01b83526004830191909160206001600160a01b0360408301946002845216910152565b03915afa8015610bae5761058d915f91612b92575b506040519081529081906020820190565b612bab915060203d6020116110d2576110c3818361240b565b5f612b81565b3461043657602036600319011261043657600435612bce81613b56565b5f52600e60205260206001600160801b03600360405f20015416604051908152f35b3461043657602036600319011261043657600435612c0d81613b56565b5f52600e6020526020600260405f20015460801c604051908152f35b34610436576020366003190112610436576020610e41600435612c4b81613b56565b61509b565b61243b9092919260408101936001600160801b0360208092828151168552015116910152565b34610436576020366003190112610436576004355f6020604051612c99816123f0565b8281520152612ca781613b56565b805f52600e60205260ff600160405f20015460b01c1660038110156108725761133f57612ce7612ce261058d925f52601060205260405f2090565b613afe565b60405191829182612c50565b34610436575f3660031901126104365760206001600160a01b0360085416604051908152f35b6003111561087257565b3461043657602036600319011261043657600435612d4081613b56565b5f52600e60205260ff600160405f20015460b01c166040516003821015610872576020918152f35b3461043657604036600319011261043657602060ff612dc2600435612d8c81610657565b6001600160a01b0360243591612da183610657565b165f526006845260405f20906001600160a01b03165f5260205260405f2090565b54166040519015158152f35b604036600319011261043657602435600435612de982610657565b612df28161509b565b91612dfb614278565b612e0482613b56565b612e1b6001612679845f52600e60205260405f2090565b61300f576001600160a01b038116908115612ffb57612e45610c39845f52600360205260405f2090565b926001600160a01b0384168093141580612fe7575b612fc5576001600160801b0385168015612fb157612e778261509b565b906001600160801b03821610612f8a5750612e93858383615139565b6040518181525f516020615a205f395f51905f5290602090a18233141580612f66575b612ecf575b6040516001600160801b0386168152602090f35b6040516392b9102b60e01b815260048101919091523360248201526001600160a01b039190911660448201526001600160801b038416606482015290602090829060849082905f905af1908115610bae575f91612f47575b506001600160e01b031916636d46efd560e01b0161278157808080612ebb565b612f60915060203d602011611cd257611cc4818361240b565b5f612f27565b50612f856127da856001600160a01b03165f52600b60205260405f2090565b612eb6565b63066920d760e01b5f526004919091526001600160801b038086166024521660445260645ffd5b63b2ae763360e01b5f52600482905260245ffd5b63350b320360e11b5f52600452336024526001600160a01b031660445260645ffd5b50612ff6610d718233876154b0565b612e5a565b632da33e5b60e01b5f52600483905260245ffd5b6315efa0f360e11b5f52600482905260245ffd5b34610436576020366003190112610436576001600160a01b0360043561304881610657565b165f526007602052602060405f2054604051908152f35b346104365760203660031901126104365760043561307c81613b56565b5f52600e602052602060405f205460f81c6040519015158152f35b6001600160801b0381160361043657565b6060366003190112610436576004356024356130c381610657565b604435916130d083613097565b6130d8614278565b6130e181613b56565b6130f86001612679835f52600e60205260405f2090565b6132d4576001600160a01b0382169283156132c057613122610c39835f52600360205260405f2090565b936001600160a01b03851680911415806132ac575b613287576001600160801b0382168015613273576131548461509b565b906001600160801b0382161061324d5750613170828585615139565b6040518381525f516020615a205f395f51905f5290602090a18033141580613229575b61319957005b6040516392b9102b60e01b815260048101939093523360248401526001600160a01b039390931660448301526001600160801b0316606482015290602090829060849082905f905af1908115610bae575f9161320a575b506001600160e01b031916636d46efd560e01b0161278157005b613223915060203d602011611cd257611cc4818361240b565b5f6131f0565b506132486127da866001600160a01b03165f52600b60205260405f2090565b613193565b63066920d760e01b5f5260048490526001600160801b038084166024521660445260645ffd5b63b2ae763360e01b5f52600484905260245ffd5b63350b320360e11b5f526004839052336024526001600160a01b03841660445260645ffd5b506132bb610d718433886154b0565b613137565b632da33e5b60e01b5f52600482905260245ffd5b6315efa0f360e11b5f5260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b906001600160801b03809116911603906001600160801b03821161163457565b6001600160401b0381116123eb5760051b60200190565b634e487b7160e01b5f52603260045260245ffd5b903590601e198136030182121561043657018035906001600160401b0382116104365760200191813603831361043657565b9082101561338e576108d19160051b810190613345565b613331565b908092918237015f815290565b3d156133ca573d906133b18261246c565b916133bf604051938461240b565b82523d5f602084013e565b606090565b805182101561338e5760209160051b010190565b91906001600160a01b038116156134cf57815f5260036020526001600160a01b0360405f2054161515806134c7575b8061349c575b6134885760405182815261344291905f516020615a205f395f51905f5290602090a1823391615384565b916001600160a01b0381166001600160a01b0384160361346157505050565b6364283d7b60e01b5f526001600160a01b039081166004526024919091521660445260645ffd5b634274c8e160e11b5f52600482905260245ffd5b506134c2610d7160016134b7855f52600e60205260405f2090565b015460a81c60ff1690565b613418565b506001613412565b633250574960e11b5f525f60045260245ffd5b90816020910312610436575161052481611f82565b6040513d5f823e3d90fd5b919081101561338e5760051b0190565b3561052481613097565b90816020910312610436575190565b5f1981019190821161163457565b9190820391821161163457565b3561052481611f82565b3561052481610657565b919082604091031261043657604051613572816123f0565b60208082948035613582816111c6565b8452013591613590836111c6565b0152565b9190826040910312610436576040516135ac816123f0565b602080829480356135bc81613097565b845201359161359083613097565b906044916003811015610872576004525f602452565b906044916003811015610872576004526002602452565b906044916003811015610872576004526001602452565b6001600160401b0381160361043657565b602081830312610436578051906001600160401b038211610436570181601f82011215610436578051906136528261331a565b92613660604051948561240b565b82845260208085019360061b8301019181831161043657602001925b82841061368a575050505090565b60408483031261043657602060409182516136a4816123f0565b86516136af81613097565b8152828701516136be816111c6565b8382015281520193019261367c565b91939293806040840160408552526060830191905f5b8181106136fd5750505064ffffffffff6020919416910152565b9091926040806001926001600160801b03873561371981613097565b16815264ffffffffff6020880135613730816111c6565b1660208201520194019291016136e3565b90815461374d8161331a565b9261375b604051948561240b565b81845260208401905f5260205f205f915b8383106137795750505050565b60016020819260405161378b816123f0565b64ffffffffff86546001600160801b038116835260801c168382015281520192019201919061376c565b906137bf8261331a565b6137cc604051918261240b565b82815280926137dd601f199161331a565b0190602036910137565b90816020910312610436575161052481613097565b90816020910312610436575161052481610424565b90815461381d8161331a565b9261382b604051948561240b565b81845260208401905f5260205f205f915b8383106138495750505050565b60016020819260405161385b816123d0565b64ffffffffff86546001600160801b03811683526001600160401b038160801c168584015260c01c16604082015281520192019201919061383c565b35610524816111c6565b9064ffffffffff8091169116019064ffffffffff821161163457565b9092916138cb8185846133e3565b833b6138d8575b50505050565b6020916138fa6040519485938493630a85bd0160e11b8552336004860161506d565b03815f6001600160a01b0387165af15f9181613987575b5061394b575061391f6133a0565b805191908261394457633250574960e11b5f526001600160a01b03821660045260245ffd5b9050602001fd5b6001600160e01b03191663757a42ff60e11b0161396c57505f8080806138d2565b633250574960e11b5f526001600160a01b031660045260245ffd5b6139a191925060203d602011611cd257611cc4818361240b565b905f613911565b602081830312610436578051906001600160401b038211610436570181601f82011215610436578051906139db8261331a565b926139e9604051948561240b565b8284526020606081860194028301019181831161043657602001925b828410613a13575050505090565b606084830312610436576020606091604051613a2e816123d0565b8651613a3981613097565b815282870151613a488161360e565b838201526040870151613a5a816111c6565b6040820152815201930192613a05565b939291806040860160408752526060850191905f5b818110613a9e5750505090602061243b9294019064ffffffffff169052565b9091926060806001926001600160801b038735613aba81613097565b1681526001600160401b036020880135613ad38161360e565b16602082015264ffffffffff6040880135613aed816111c6565b166040820152019401929101613a7f565b90604051613b0b816123f0565b91546001600160801b038116835260801c6020830152565b805f5260036020526001600160a01b0360405f205416908115613b44575090565b637e27328960e01b5f5260045260245ffd5b805f52600e6020526001600160a01b0360405f20541615613b745750565b62763a5b60e91b5f5260045260245ffd5b60038210156108725752565b90604051613b9e816123d0565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b90604051613bd36101408261240b565b610120613cc660028395613c57613c4e8254613c05613bf8826001600160a01b031690565b6001600160a01b03168952565b64ffffffffff60a082901c166020890152613c3460c882901c64ffffffffff165b64ffffffffff1660408a0152565b613c4860f082901c60ff16151560608a0152565b60f81c90565b15156080870152565b613cc0613cb66001830154613c85613c75826001600160a01b031690565b6001600160a01b031660a08a0152565b613c9960a082901c60ff16151560c08a0152565b613cad60a882901c60ff16151560e08a0152565b60b01c60ff1690565b6101008701613b85565b01613b91565b910152565b909264ffffffffff908160a0946001600160801b03608086019716855216602084015216604082015260806060820152835480935201915f5260205f20905f5b818110613d185750505090565b82546001600160801b038116855260801c64ffffffffff16602085015260409093019260019283019201613d0b565b929164ffffffffff90969594966001600160801b0360a086019316855216602084015260a06040840152815480915260c08301915f5260205f20905f5b818110613db25750505064ffffffffff909416606082015261243b9190608001906001600160801b03169052565b82546001600160801b0381168552608081901c6001600160401b0316602086015260c01c64ffffffffff16604085015260609093019260019283019201613d84565b5f90613e10613e0b825f52600e60205260405f2090565b613bc3565b91613e1e60c0840151151590565b15613e3a5750506101200151602001516001600160801b031690565b60808301516140b557610100830160018151613e5581612d19565b613e5e81612d19565b03613f3b5750506020906101208301613ee8613e828251516001600160801b031690565b91613ecc85613ebc81613eaf613ea060408c015164ffffffffff1690565b985f52600d60205260405f2090565b99015164ffffffffff1690565b925101516001600160801b031690565b906040519687958695631efe300360e21b875260048701613d47565b038173__$50c25247757e62846d50a95ffb6bac620d$__5af4908115610bae575f91613f12575090565b610524915060203d602011613f34575b613f2c818361240b565b8101906137e7565b503d613f22565b8051613f4681612d19565b613f4f81612d19565b61402257505080613f6d61131c6020935f52600c60205260405f2090565b613ee8610120850192613f8984516001600160801b0390511690565b93613fc386613ebc613fb482613fa760408d015164ffffffffff1690565b9b015164ffffffffff1690565b945f52601060205260405f2090565b6040516313c015db60e01b815264ffffffffff95861660048201526001600160801b039687166024820152978516604489015293909116606487015254808416608487015260801c60a4860152911660c48401528290819060e4820190565b600290949391945161403381612d19565b61403c81612d19565b14614045575050565b6020919293506140626101208201516001600160801b0390511690565b613ee861409a61408b8561407e604087015164ffffffffff1690565b95015164ffffffffff1690565b955f52600f60205260405f2090565b604051633796f97b60e01b8152958694859460048601613ccb565b50506101206105249101516107f960406140d683516001600160801b031690565b9201516001600160801b031690565b6140fc6001612679835f52600e60205260405f2090565b156141075750600490565b61411c610c16825f52600e60205260405f2090565b6141a8576141466122da614138835f52600e60205260405f2090565b5460a01c64ffffffffff1690565b42106141a3576001600160801b03614191614185600261417761416886613df4565b955f52600e60205260405f2090565b01546001600160801b031690565b6001600160801b031690565b9116101561419e57600190565b600290565b505f90565b50600390565b815f5260036020526001600160a01b0360405f20541615158061423b575b80614218575b61420557610524915f915f516020615a205f395f51905f52604051806141fd85829190602083019252565b0390a1615384565b50634274c8e160e11b5f5260045260245ffd5b5060ff600161422f845f52600e60205260405f2090565b015460a81c16156141d2565b506001600160a01b03811615156141cc565b6001600160a01b035f54168033036142625750565b6353f0a8cf60e11b5f526004523360245260445ffd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036142aa57565b63a1c0d6e560e01b5f5260045ffd5b906142c382613df4565b916142db6002613cc0835f52600e60205260405f2090565b926142f061418585516001600160801b031690565b6001600160801b03821610156145db57614318610d716116f3845f52600e60205260405f2090565b6145c757806107f960206143476143569461433a89516001600160801b031690565b036001600160801b031690565b9601516001600160801b031690565b61438061436b835f52600e60205260405f2090565b80546001600160f81b0316600160f81b179055565b614395611716835f52600e60205260405f2090565b6001600160801b03811615614597575b6143d98460036143bd855f52600e60205260405f2090565b01906001600160801b03166001600160801b0319825416179055565b6143ee610c39835f52600e60205260405f2090565b9184614405610c39835f52600360205260405f2090565b9361442b600161441d855f52600e60205260405f2090565b01546001600160a01b031690565b906144616001600160801b038416614454846001600160a01b03165f52600760205260405f2090565b818154039055828461468c565b604080518581526001600160801b0385811660208301528716918101919091526001600160a01b038781169381169184918416907f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa5090606090a46040518481525f516020615a205f395f51905f5290602090a16144f26127da876001600160a01b03165f52600b60205260405f2090565b6144ff575b505050505050565b604051630d4af11f60e31b815260048101949094526001600160a01b031660248401526001600160801b0391821660448401529216606482015290602090829060849082905f905af1908115610bae575f91614578575b506001600160e01b0319166312b50ee160e31b016127815780808481806144f7565b614591915060203d602011611cd257611cc4818361240b565b5f614556565b6145c260016145ae845f52600e60205260405f2090565b01805460ff60a01b1916600160a01b179055565b6143a5565b635dd950cb60e11b5f52600482905260245ffd5b6308aca53f60e21b5f52600482905260245ffd5b6105249133906154b0565b805f5260036020526001600160a01b0360405f205416151580614685575b80614667575b614655575f516020615a205f395f51905f526020604051838152a16001600160a01b0361464c5f8381615384565b1615613b445750565b634274c8e160e11b5f5260045260245ffd5b5061467f60016134b7835f52600e60205260405f2090565b1561461e565b505f614618565b61243b926001600160a01b036040519363a9059cbb60e01b60208601521660248401526044830152604482526146c360648361240b565b61554f565b94614740906001600160801b036001600160a01b039664ffffffffff6105249c9b976147158a98896101409e99168d5260208d019064ffffffffff60208092828151168552015116910152565b1660608a015216608088015260a08701906001600160801b0360208092828151168552015116910152565b1660e0840152166101008201528161012082015201906104ee565b634e487b7160e01b5f525f60045260245ffd5b906101406101006105249361478c8482516001600160a01b03169052565b6020818101516001600160a01b0316908501526040818101516001600160a01b0316908501526060818101516001600160801b0316908501526080818101516001600160a01b03169085015260a08181015115159085015260c08181015115159085015261481560e082015160e086019064ffffffffff60208092828151168552015116910152565b0151918161012082015201906104ee565b60409064ffffffffff61484761243b9597969460808452608084019061476e565b9616602082015201906001600160801b0360208092828151168552015116910152565b909592979199989694939473__$70ac0b9f44f1ad43af70526685fc041161$__61489c6008546001600160a01b031690565b90803b1561043657855f916001600160a01b038f6148db8b8f978f988f908b956040519b8c9a8b998a9963f89d584160e01b8b52169460048a016146c8565b03915af48015610bae57614a0d575b506009549a8b99896149048c5f52601060205260405f2090565b9061493a91815160209092015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055565b8a8584888c614951855f52600c60205260405f2090565b9061496d919064ffffffffff1664ffffffffff19825416179055565b61497a938c86888b6157cb565b61498261244d565b338152976001600160a01b031660208901526001600160a01b031660408801526001600160801b031660608701526001600160a01b03166080860152151560a0850152151560c084015260e08301526101008201526040519283926149e79284614826565b037fc79bd540ef5a04a4ac63a943cd4fb703e8a730be1368c34f4c31bb7142bbdb3a91a2565b80614a1b5f614a219361240b565b806104c3565b5f6148ea565b939597969492614a686001600160801b0392936001600160a01b03610100880195168752602087019064ffffffffff60208092828151168552015116910152565b16606084015261010060808401528451809152602061012084019501905f5b818110614acc575050506105249495614aaf614abf9260a08501906001600160a01b03169052565b6001600160a01b031660c0830152565b60e08184039101526104ee565b9091956020606082614b0e6001948b5164ffffffffff604080926001600160801b0381511685526001600160401b036020820151166020860152015116910152565b019701929101614a87565b805482101561338e575f5260205f2001905f90565b8054680100000000000000008110156123eb57614b5091600182018155614b19565b919091614bcf578051825460208301516040909301516001600160801b039092167fffffff00000000000000000000000000000000000000000000000000000000009091161760809290921b77ffffffffffffffff00000000000000000000000000000000169190911760c09190911b64ffffffffff60c01b16179055565b61475b565b9091614beb6105249360408452604084019061476e565b916020818403910152612151565b9296919897939895949573__$70ac0b9f44f1ad43af70526685fc041161$__614c2a6008546001600160a01b031690565b90803b1561043657875f916001600160a01b03878f8d8f97614c67928b996040519a8b998a988998630bce559f60e11b8a52169360048901614a27565b03915af48015610bae57614da4575b5098959493929190600954998a9789515f5b818110614d6157505093614d3084614d2085614d10868e9f9d9b987f0e7eb51bad11fb6392e8e6cfd568e0750bbaf84bca8bf4dceb9bcae5b46a33119f9b614ce460209f9d614d429d8f8e9285614d399f8f98614d00996158fc565b614cec61244d565b3381529e8f01906001600160a01b03169052565b6001600160a01b031660408d0152565b6001600160801b031660608b0152565b6001600160a01b03166080890152565b151560a0870152565b151560c0850152565b60e0830152610100820152614d5c60405192839283614bd4565b0390a2565b614d938c614d8c83614d866001969798999a9b9c9d9e9f5f52600d60205260405f2090565b926133cf565b5190614b2e565b01908c999897969594939291614c88565b80614a1b5f614db29361240b565b5f614c76565b939597969492614df96001600160801b0392936001600160a01b03610100880195168752602087019064ffffffffff60208092828151168552015116910152565b16606084015261010060808401528451809152602061012084019501905f5b818110614e40575050506105249495614aaf614abf9260a08501906001600160a01b03169052565b9091956020604082614e6f6001948b5164ffffffffff602080926001600160801b038151168552015116910152565b019701929101614e18565b8054680100000000000000008110156123eb57614e9c91600182018155614b19565b919091614bcf578051825460209092015174ffffffffffffffffffffffffffffffffffffffffff199092166001600160801b039091161760809190911b74ffffffffff0000000000000000000000000000000016179055565b9091614f0c6105249360408452604084019061476e565b916020818403910152611933565b9298979693959173__$70ac0b9f44f1ad43af70526685fc041161$__614f486008546001600160a01b031690565b90803b1561043657875f916001600160a01b03878f8d8f97614f85928b996040519a8b998a98899863038720af60e21b8a52169360048901614db8565b03915af48015610bae57615059575b5098959493929190600954998a9789515f5b81811061501c57505093614d3084614d2085614d10868e9f9d9b987fb5286ba059f8139658108ff5a9617e2ba55bd80fb2dd93063f9f9bc0e65c4c2a9f9b614ce460209f9d6150029d8f8e9285614d399f8f98614d009961594f565b60e0830152610100820152614d5c60405192839283614ef5565b6150488c61504183614d866001969798999a9b9c9d9e9f5f52600f60205260405f2090565b5190614e7a565b01908c999897969594939291614fa6565b80614a1b5f6150679361240b565b5f614f94565b90926001600160a01b03608093816105249796168452166020830152604082015281606082015201906104ee565b610524906150a881613df4565b905f52600e602052600260405f20015460801c906132fa565b909291926001600160a01b038116156134cf57836150de916141ae565b906001600160a01b038216806151015784637e27328960e01b5f5260045260245ffd5b6001600160a01b038295939495160361346157505050565b906001600160801b03809116911601906001600160801b03821161163457565b91909161519d6020615155610c465f546001600160a01b031690565b61516a610c39855f52600e60205260405f2090565b60405163419d289d60e01b8152600260048201526001600160a01b03909116602482015292839190829081906044820190565b03915afa908115610bae575f91615343575b5080341061532d57506152126151e3836151de60026151d6865f52600e60205260405f2090565b015460801c90565b615119565b60026151f7845f52600e60205260405f2090565b01906001600160801b0382549181199060801b169116179055565b6152296002613cc0835f52600e60205260405f2090565b6001600160801b0361526261418561524b60208501516001600160801b031690565b936107f960406140d683516001600160801b031690565b911610156152fc575b7f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6001600160a01b036152ab600161441d855f52600e60205260405f2090565b6152e06001600160801b0386166152d3836001600160a01b03165f52600760205260405f2090565b818154039055878361468c565b6040516001600160801b039590951685528116941692602090a4565b61531360016145ae835f52600e60205260405f2090565b615328611716825f52600e60205260405f2090565b61526b565b634fc1eeff60e01b5f523460045260245260445ffd5b61535c915060203d6020116110d2576110c3818361240b565b5f6151af565b615374905f52600560205260405f2090565b80546001600160a01b0319169055565b815f5260036020526001600160a01b0360405f205416926001600160a01b03811661545f575b506001600160a01b0383168061542f575b6153e16001600160a01b0383169283615408575b6106ed855f52600360205260405f2090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b615423816001600160a01b03165f52600460205260405f2090565b600181540190556153cf565b61543883615362565b615453846001600160a01b03165f52600460205260405f2090565b80545f190190556153bb565b61546a8382866154b0565b6153aa5790506001600160a01b0383166154915750637e27328960e01b5f5260045260245ffd5b6001600160a01b039063177e802f60e01b5f521660045260245260445ffd5b916001600160a01b0382169081151593846154cd575b5050505090565b6001600160a01b0316808314945091929091841561551a575b505082156154fa575b50505f8080806154c6565b9091505f5260056020526001600160a01b0360405f205416145f806154ef565b60ff92945090615545915f52600660205260405f20906001600160a01b03165f5260205260405f2090565b5416915f806154e6565b905f602091828151910182855af1156134f7575f513d61559a57506001600160a01b0381163b155b61557e5750565b6001600160a01b0390635274afe760e01b5f521660045260245ffd5b60011415615577565b90600381101561087257815460ff60b01b191660b09190911b60ff60b01b16179055565b600261012061243b936156006155e482516001600160a01b031690565b85546001600160a01b0319166001600160a01b03909116178555565b615637615615602083015164ffffffffff1690565b855464ffffffffff60a01b191660a09190911b64ffffffffff60a01b16178555565b61566e61564c604083015164ffffffffff1690565b855464ffffffffff60c81b191660c89190911b64ffffffffff60c81b16178555565b61569861567e6060830151151590565b855460ff60f01b191690151560f01b60ff60f01b16178555565b6156e06156a86080830151151590565b85546001600160f81b031690151560f81b7fff0000000000000000000000000000000000000000000000000000000000000016178555565b6157836001850161571a6156fe60a08501516001600160a01b031690565b82546001600160a01b0319166001600160a01b03909116178255565b61574461572a60c0850151151590565b825460ff60a01b191690151560a01b60ff60a01b16178255565b61576e61575460e0850151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b6101008301519061577e82612d19565b6155a3565b015191018151602083015160801b6fffffffffffffffffffffffffffffffff199081166001600160801b03928316178355604090930151600190920180549093169116179055565b846001936158c56158d0968561589a61243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b93015164ffffffffff1690565b9161583861582961245d565b6001600160801b03909c168c52565b5f60208c01525f60408c015261585e61584f61243d565b6001600160a01b03909d168d52565b64ffffffffff1660208c0152565b15156060880152565b5f60808701526001600160a01b031660a0860152565b5f60c0850152151560e0840152565b6158a85f6101008401613b85565b6101208201526158c0845f52600e60205260405f2090565b6155c7565b6159a3565b01600955565b16906158ed816001600160a01b03165f52600760205260405f2090565b828154019055309033906159de565b846001936158c56158d0968561594161243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b6158a8886101008401613b85565b846001936158c56158d0968561599461243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b6158a860026101008401613b85565b6001600160a01b038116156134cf576001600160a01b03916159c4916141ae565b166159cb57565b6339e3563760e11b5f525f60045260245ffd5b9091926001600160a01b0361243b9481604051956323b872dd60e01b60208801521660248601521660448401526064830152606482526146c360848361240b56fef8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7a2646970667358221220ab36e9671a0f83054ef54e738e4be2f0875bb56a9005dea3a0642b3f0c52c8e864736f6c634300081d0033",
    "sourceMap": "3173:27029:99:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;;4364:52:61;;1565:210;;;4364:52;;;3173:27029:99;;4364:52:61;;;;;;;;;;;-1:-1:-1;4364:52:61;;;-1:-1:-1;4363:53:61;;4359:332;;-1:-1:-1;3173:27029:99;;-1:-1:-1;;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;4816:51:61;;3173:27029:99;4816:51:61;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;1446:13:10;3173:27029:99;1446:13:10;3173:27029:99;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;1446:13:10;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;1469:17:10;3173:27029:99;1446:13:10;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;1469:17:10;3173:27029:99;;1218:4:62;1199:24;;1446:13:10;3009:16:102;3173:27029:99;;;;-1:-1:-1;;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;1199:24:62;3173:27029:99;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;1469:17:10;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;;1469:17:10;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;;;;;;1469:17:10;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;1446:13:10;3173:27029:99;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;-1:-1:-1;3173:27029:99;;4364:52:61;3173:27029:99;4364:52:61;-1:-1:-1;3173:27029:99;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;4364:52:61;3173:27029:99;4364:52:61;-1:-1:-1;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;1446:13:10;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;;;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:13:10;3173:27029:99;;;;;;;;;;;;;;;;1446:13:10;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;1446:13:10;3173:27029:99;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;4359:332:61;4439:241;;;-1:-1:-1;4439:241:61;-1:-1:-1;4364:52:61;3173:27029:99;4364:52:61;3173:27029:99;1565:210:61;;;3173:27029:99;;;-1:-1:-1;4439:241:61;4364:52;;;3173:27029:99;4364:52:61;;3173:27029:99;4364:52:61;;;;;;3173:27029:99;4364:52:61;;;:::i;:::-;;;3173:27029:99;;;;;;;;;;;;4364:52:61;;;3173:27029:99;-1:-1:-1;3173:27029:99;;4364:52:61;;;-1:-1:-1;4364:52:61;;;3173:27029:99;;;-1:-1:-1;3173:27029:99;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;:::o",
    "linkReferences": {
      "src/libraries/Helpers.sol": {
        "Helpers": [
          { "start": 7365, "length": 20 },
          { "start": 11928, "length": 20 },
          { "start": 19728, "length": 20 },
          { "start": 20638, "length": 20 },
          { "start": 21436, "length": 20 }
        ]
      },
      "src/libraries/LockupMath.sol": { "LockupMath": [{ "start": 17285, "length": 20 }] }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a71461041f57806306fdde031461041a578063081812fc14610415578063095ea7b3146104105780631400ecec1461040b5780631c1cdd4c146104065780631e897afb146104015780631e99d569146103fc57806323b872dd146103f7578063303acc85146103f2578063406887cb146103ed57806340e58ee5146103e8578063425d30dd146103e357806342842e0e146103de57806342966c68146103d957806344267570146103d45780634857501f146103cf5780634869e12d146103ca5780634cc55e11146103c55780635fe3b567146103c05780636352211e146103b6578063648bf774146103bb5780636d0cee75146103b65780636da1e102146103b157806370a08231146103ac57806374d213e5146103a7578063780a82c8146103a257806378f82ce71461039d5780637aab211a146103985780637cad6cd1146103935780637de6b1db1461038e5780637ee44729146103895780637f5799f9146103845780638659c2701461037f5780638bad38dd1461037a5780638f69b993146103755780639067b6771461037057806395d89b411461036b5780639d93ddd314610366578063a22cb46514610361578063a47757721461035c578063a80fc07114610357578063ad35efd414610352578063b25645691461034d578063b637b86514610348578063b8856d8914610343578063b88d4fde1461033e578063b8a3be6614610339578063b971302a14610334578063bc2be1be1461032f578063c156a11d1461032a578063c87b56dd14610325578063c9ad007c14610320578063cca138e51461031b578063d4dbd20b14610316578063d511609f14610311578063d975dfed1461030c578063df2a848c14610307578063e1758bd814610302578063e6c417eb146102fd578063e985e9c5146102f8578063ea5ead19146102f3578063ec01da3b146102ee578063f590c176146102e95763fdd46d60146102e4575f80fd5b6130a8565b61305f565b613023565b612dce565b612d68565b612d23565b612cf3565b612c76565b612c29565b612bf0565b612bb1565b612af7565b61297d565b612898565b6125d2565b612595565b612559565b612524565b6124bd565b612266565b6121cc565b612113565b6120e0565b612083565b612044565b611f8c565b611e33565b611d7e565b611d41565b611cd9565b611b5e565b611a77565b61199b565b6117ab565b611639565b611577565b611402565b61136d565b6112c4565b6111d5565b611140565b6110d9565b610ff1565b611020565b610fcc565b610e52565b610e1a565b610dba565b610d94565b610d0d565b610ce4565b610ca6565b610bb3565b610a91565b610a50565b610a39565b6109f0565b610934565b610822565b610771565b610668565b61061a565b610527565b61043a565b6001600160e01b031981160361043657565b5f80fd5b346104365760203660031901126104365760043561045781610424565b63ffffffff60e01b16632483248360e11b8114908115610480575b506040519015158152602090f35b6380ac58cd60e01b8114915081156104b2575b81156104a1575b505f610472565b6301ffc9a760e01b1490505f61049a565b635b5e139f60e01b81149150610493565b5f91031261043657565b5f5b8381106104de5750505f910152565b81810151838201526020016104cf565b90602091610507815180928185528580860191016104cd565b601f01601f1916010190565b9060206105249281815201906104ee565b90565b34610436575f366003190112610436576040515f6001548060011c9060018116908115610610575b6020831082146105fc5782855260208501919081156105e35750600114610591575b61058d846105818186038261240b565b60405191829182610513565b0390f35b60015f9081529250907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8184106105cf5750500161058182610571565b8054848401526020909301926001016105bc565b60ff191682525090151560051b01905061058182610571565b634e487b7160e01b5f52602260045260245ffd5b91607f169161054f565b346104365760203660031901126104365760043561063781613b23565b505f52600560205260206001600160a01b0360405f205416604051908152f35b6001600160a01b0381160361043657565b346104365760403660031901126104365760043561068581610657565b6024359061069282613b23565b3315158061075e575b8061071e575b61070a5782610708936106ed926001600160a01b0380861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f52600560205260405f2090565b906001600160a01b03166001600160a01b0319825416179055565b005b63a9fbf51f60e01b5f523360045260245b5ffd5b5060ff61075633610740846001600160a01b03165f52600660205260405f2090565b906001600160a01b03165f5260205260405f2090565b5416156106a1565b50336001600160a01b038216141561069b565b346104365760203660031901126104365761058d60043561079181613b56565b5f90805f52600e60205260ff60405f205460f01c1680610805575b6107cc575b506040516001600160801b0390911681529081906020820190565b6107ff9150805f52600e6020526107f96107f3600260405f2001546001600160801b031690565b91613df4565b906132fa565b5f6107b1565b50805f52600e60205260ff600160405f20015460a01c16156107ac565b346104365760203660031901126104365761084760043561084281613b56565b6140e5565b600581101561087257801590811561086757506040519015158152602090f35b60019150145f610472565b6120c2565b9181601f84011215610436578235916001600160401b038311610436576020808501948460051b01011161043657565b602060031982011261043657600435906001600160401b038211610436576108d191600401610877565b9091565b602081016020825282518091526040820191602060408360051b8301019401925f915b83831061090757505050505090565b9091929394602080610925600193603f1986820301875289516104ee565b970193019301919392906108f8565b61093d366108a7565b906109478261331a565b91610955604051938461240b565b808352601f196109648261331a565b015f5b8181106109df5750505f5b818110610987576040518061058d86826108d5565b5f80610994838587613377565b906109a460405180938193613393565b0390305af46109b16133a0565b90156109d757906001916109c582876133cf565b526109d081866133cf565b5001610972565b805190602001fd5b806060602080938801015201610967565b34610436575f366003190112610436576020600954604051908152f35b606090600319011261043657600435610a2581610657565b90602435610a3281610657565b9060443590565b3461043657610708610a4a36610a0d565b916133e3565b34610436576020366003190112610436576001600160a01b03600435610a7581610657565b165f52600b602052602060ff60405f2054166040519015158152f35b3461043657602036600319011261043657600435610aae81610657565b610ab661424d565b6040516301ffc9a760e01b815263f8ee98d360e01b60048201526001600160a01b0382169190602081602481865afa908115610bae575f91610b7f575b5015610b6457610b17610b24916001600160a01b03165f52600b60205260405f2090565b805460ff19166001179055565b6001600160a01b03610b3d5f546001600160a01b031690565b167fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd728015f80a3005b63f1dc125d60e01b5f526001600160a01b031660045260245ffd5b610ba1915060203d602011610ba7575b610b99818361240b565b8101906134e2565b5f610af3565b503d610b8f565b6134f7565b602036600319011261043657600435610bca614278565b610bd381613b56565b5f818152600e602052604090206001015460a01c60ff1615610c01576315efa0f360e11b5f5260045260245ffd5b610c1d610c16825f52600e60205260405f2090565b5460f81c90565b610c9457610c52610c46610c39835f52600e60205260405f2090565b546001600160a01b031690565b6001600160a01b031690565b3303610c7e57610c6461058d916142b9565b6040516001600160801b0390911681529081906020820190565b632082501160e01b5f526004523360245260445ffd5b63d0a172b360e01b5f5260045260245ffd5b3461043657602036600319011261043657600435610cc381613b56565b5f52600e602052602060ff600160405f20015460a01c166040519015158152f35b3461043657610708610cf536610a0d565b9060405192610d0560208561240b565b5f84526138bd565b602036600319011261043657600435610d24614278565b610d2d81613b56565b805f52600e60205260ff600160405f20015460a01c1615610d8257805f526003602052610d75610d71610d6b60405f206001600160a01b0390541690565b836145ef565b1590565b610c7e57610708906145fa565b633090f59b60e11b5f5260045260245ffd5b34610436575f3660031901126104365760206001600160a01b03600a5416604051908152f35b3461043657602036600319011261043657600435610dd781613b56565b5f90610de2816140e5565b600581101561087257600203610e0057506040519015158152602090f35b90505f52600e60205260ff60405f205460f01c165f610472565b34610436576020366003190112610436576020610e41600435610e3c81613b56565b613df4565b6001600160801b0360405191168152f35b6040366003190112610436576004356001600160401b03811161043657610e7d903690600401610877565b6024356001600160401b03811161043657610e9c903690600401610877565b9290610ea6614278565b838303610fb3575f5b838110610eb857005b805f80610ec86001948888613502565b35610ef0610ed7858a8a613502565b355f5260036020526001600160a01b0360405f20541690565b610f52610f06610f01878d8b613502565b613512565b6040516307eea36b60e51b6020820190815260248201959095526001600160a01b0390931660448401526001600160801b0316606483015281608481015b03601f19810183528261240b565b5190305af4610f5f6133a0565b9015610f6d575b5001610eaf565b7f36b7a9a3f5bfe69ad6ae04107796a967de5c92c761b4d7a4c34e985670666419610faa610f9c848989613502565b359260405191829182610513565b0390a25f610f66565b6352f6a1f360e11b5f526004839052602484905260445ffd5b34610436575f3660031901126104365760206001600160a01b035f5416604051908152f35b3461043657602036600319011261043657602061100f600435613b23565b6001600160a01b0360405191168152f35b346104365760403660031901126104365760043561103d81610657565b6024359061104a82610657565b61105261424d565b6040516370a0823160e01b81523060048201526001600160a01b0382169290602081602481875afa8015610bae57610708946110a2925f926110a8575b505f52600760205260405f205490613539565b9161468c565b6110cb91925060203d6020116110d2575b6110c3818361240b565b81019061351c565b905f61108f565b503d6110b9565b34610436576020366003190112610436576004356110f681610657565b6110fe61424d565b600854906001600160a01b0382168061112e57506001600160a01b0316906001600160a01b031916176008555f80f35b6373f4d8a760e11b5f5260045260245ffd5b34610436576020366003190112610436576001600160a01b0360043561116581610657565b168015611182575f526004602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b90816101209103126104365790565b604090602319011261043657602490565b604090606319011261043657606490565b64ffffffffff81160361043657565b6080366003190112610436576004356001600160401b038111610436576112b461120661058d923690600401611195565b61120f366111a4565b9060643561121c816111c6565b611224614278565b60808201359261123384611f82565b60408301359261124284613097565b602081013561125081610657565b81359061125c82610657565b61126a610100840184613345565b9690956112ae6112a661129b6060880135996112858b610657565b60a08901359b6112948d611f82565b3691612487565b9660c036910161355a565b963690613594565b9861486a565b6040519081529081906020820190565b34610436576020366003190112610436576004356112e181613b56565b805f52600e60205260ff600160405f20015460b01c1660038110156108725761133f5761132761131c61058d925f52600c60205260405f2090565b5464ffffffffff1690565b60405164ffffffffff90911681529081906020820190565b5f52600e60205261071b61135e600160405f200160ff905460b01c1690565b63319dec3f60e01b5f526135ca565b34610436575f36600319011261043657475f808080846001600160a01b038254165af1506113996133a0565b507f56dedb874d4fc0f70753f281fa2c25e82085163206086fe826cf834b51701f6c60206001600160a01b035f541692604051908152a2005b9181601f84011215610436578235916001600160401b038311610436576020808501946060850201011161043657565b6040366003190112610436576004356001600160401b0381116104365761142d903690600401611195565b6024356001600160401b0381116104365761144c9036906004016113d2565b91611455614278565b60808101359061146482611f82565b60408101359261147384613097565b60208201359061148282610657565b82359161148e83610657565b61149c610100850185613345565b96906060860135976114ad89610657565b60a0870135996114bc8b611f82565b6114c58161331a565b956114d3604051978861240b565b818752606060208801920281019036821161043657915b818310611520575061058d6112b48d8d8d8d8d8d8d8d61151a61150f8f8f3691612487565b9560c036910161355a565b95614bf9565b60608336031261043657602060609160405161153b816123d0565b853561154681613097565b8152828601356115558161360e565b838201526040860135611567816111c6565b60408201528152019201916114ea565b346104365760203660031901126104365760043561159481610657565b61159c61424d565b6001600160a01b0380600a54921691828219821617600a55166001600160a01b035f54167fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc5f80a46009545f1981019081116116345761162f7f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c9160405191829182919060206040840193600181520152565b0390a1005b6132e6565b602036600319011261043657600435611650614278565b61165981613b56565b611662816140e5565b61166b816120d6565b60048103611687576315efa0f360e11b5f52600482905260245ffd5b611690816120d6565b600381036116ac5763d0a172b360e01b5f52600482905260245ffd5b806116b86002926120d6565b1461175b576116d5610c46610c39835f52600e60205260405f2090565b3303610c7e576116fd610d716116f3835f52600e60205260405f2090565b5460f01c60ff1690565b61174957611723611716825f52600e60205260405f2090565b805460ff60f01b19169055565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a2005b635dd950cb60e11b5f5260045260245ffd5b6308aca53f60e21b5f5260045260245ffd5b908160e09103126104365790565b9181601f84011215610436578235916001600160401b038311610436576020808501948460061b01011161043657565b6040366003190112610436576004356001600160401b038111610436576117d690369060040161176d565b6024356001600160401b038111610436576117f590369060040161177b565b906117fe614278565b5f64ffffffffff42169283926118286040519586938493631441207960e01b8552600485016136cd565b038173__$70ac0b9f44f1ad43af70526685fc041161$$70ac0b9f44f1ad43af70526685fc041161$__5af4918215610bae5761058d936112b493612acf935f91612ad5575b50612a70612a4a6040611877612a44855161352b565b856133cf565b612a62612a5561242c565b64ffffffffff9095168552565b64ffffffffff166020840152565b612a7c60808401613546565b90612a8960408501613512565b90612a9660208601613550565b612a9f86613550565b92612aad60c0880188613345565b9890612ac760a0612ac060608c01613550565b9a01613546565b993691612487565b94614bf9565b612af191503d805f833e612ae9818361240b565b8101906139a8565b5f612a2e565b3461043657602036600319011261043657612b6c6020600435612b1981613b56565b6001600160a01b035f5416905f52600e82526001600160a01b0360405f20541690604051808095819463419d289d60e01b83526004830191909160206001600160a01b0360408301946002845216910152565b03915afa8015610bae5761058d915f91612b92575b506040519081529081906020820190565b612bab915060203d6020116110d2576110c3818361240b565b5f612b81565b3461043657602036600319011261043657600435612bce81613b56565b5f52600e60205260206001600160801b03600360405f20015416604051908152f35b3461043657602036600319011261043657600435612c0d81613b56565b5f52600e6020526020600260405f20015460801c604051908152f35b34610436576020366003190112610436576020610e41600435612c4b81613b56565b61509b565b61243b9092919260408101936001600160801b0360208092828151168552015116910152565b34610436576020366003190112610436576004355f6020604051612c99816123f0565b8281520152612ca781613b56565b805f52600e60205260ff600160405f20015460b01c1660038110156108725761133f57612ce7612ce261058d925f52601060205260405f2090565b613afe565b60405191829182612c50565b34610436575f3660031901126104365760206001600160a01b0360085416604051908152f35b6003111561087257565b3461043657602036600319011261043657600435612d4081613b56565b5f52600e60205260ff600160405f20015460b01c166040516003821015610872576020918152f35b3461043657604036600319011261043657602060ff612dc2600435612d8c81610657565b6001600160a01b0360243591612da183610657565b165f526006845260405f20906001600160a01b03165f5260205260405f2090565b54166040519015158152f35b604036600319011261043657602435600435612de982610657565b612df28161509b565b91612dfb614278565b612e0482613b56565b612e1b6001612679845f52600e60205260405f2090565b61300f576001600160a01b038116908115612ffb57612e45610c39845f52600360205260405f2090565b926001600160a01b0384168093141580612fe7575b612fc5576001600160801b0385168015612fb157612e778261509b565b906001600160801b03821610612f8a5750612e93858383615139565b6040518181525f516020615a205f395f51905f5290602090a18233141580612f66575b612ecf575b6040516001600160801b0386168152602090f35b6040516392b9102b60e01b815260048101919091523360248201526001600160a01b039190911660448201526001600160801b038416606482015290602090829060849082905f905af1908115610bae575f91612f47575b506001600160e01b031916636d46efd560e01b0161278157808080612ebb565b612f60915060203d602011611cd257611cc4818361240b565b5f612f27565b50612f856127da856001600160a01b03165f52600b60205260405f2090565b612eb6565b63066920d760e01b5f526004919091526001600160801b038086166024521660445260645ffd5b63b2ae763360e01b5f52600482905260245ffd5b63350b320360e11b5f52600452336024526001600160a01b031660445260645ffd5b50612ff6610d718233876154b0565b612e5a565b632da33e5b60e01b5f52600483905260245ffd5b6315efa0f360e11b5f52600482905260245ffd5b34610436576020366003190112610436576001600160a01b0360043561304881610657565b165f526007602052602060405f2054604051908152f35b346104365760203660031901126104365760043561307c81613b56565b5f52600e602052602060405f205460f81c6040519015158152f35b6001600160801b0381160361043657565b6060366003190112610436576004356024356130c381610657565b604435916130d083613097565b6130d8614278565b6130e181613b56565b6130f86001612679835f52600e60205260405f2090565b6132d4576001600160a01b0382169283156132c057613122610c39835f52600360205260405f2090565b936001600160a01b03851680911415806132ac575b613287576001600160801b0382168015613273576131548461509b565b906001600160801b0382161061324d5750613170828585615139565b6040518381525f516020615a205f395f51905f5290602090a18033141580613229575b61319957005b6040516392b9102b60e01b815260048101939093523360248401526001600160a01b039390931660448301526001600160801b0316606482015290602090829060849082905f905af1908115610bae575f9161320a575b506001600160e01b031916636d46efd560e01b0161278157005b613223915060203d602011611cd257611cc4818361240b565b5f6131f0565b506132486127da866001600160a01b03165f52600b60205260405f2090565b613193565b63066920d760e01b5f5260048490526001600160801b038084166024521660445260645ffd5b63b2ae763360e01b5f52600484905260245ffd5b63350b320360e11b5f526004839052336024526001600160a01b03841660445260645ffd5b506132bb610d718433886154b0565b613137565b632da33e5b60e01b5f52600482905260245ffd5b6315efa0f360e11b5f5260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b906001600160801b03809116911603906001600160801b03821161163457565b6001600160401b0381116123eb5760051b60200190565b634e487b7160e01b5f52603260045260245ffd5b903590601e198136030182121561043657018035906001600160401b0382116104365760200191813603831361043657565b9082101561338e576108d19160051b810190613345565b613331565b908092918237015f815290565b3d156133ca573d906133b18261246c565b916133bf604051938461240b565b82523d5f602084013e565b606090565b805182101561338e5760209160051b010190565b91906001600160a01b038116156134cf57815f5260036020526001600160a01b0360405f2054161515806134c7575b8061349c575b6134885760405182815261344291905f516020615a205f395f51905f5290602090a1823391615384565b916001600160a01b0381166001600160a01b0384160361346157505050565b6364283d7b60e01b5f526001600160a01b039081166004526024919091521660445260645ffd5b634274c8e160e11b5f52600482905260245ffd5b506134c2610d7160016134b7855f52600e60205260405f2090565b015460a81c60ff1690565b613418565b506001613412565b633250574960e11b5f525f60045260245ffd5b90816020910312610436575161052481611f82565b6040513d5f823e3d90fd5b919081101561338e5760051b0190565b3561052481613097565b90816020910312610436575190565b5f1981019190821161163457565b9190820391821161163457565b3561052481611f82565b3561052481610657565b919082604091031261043657604051613572816123f0565b60208082948035613582816111c6565b8452013591613590836111c6565b0152565b9190826040910312610436576040516135ac816123f0565b602080829480356135bc81613097565b845201359161359083613097565b906044916003811015610872576004525f602452565b906044916003811015610872576004526002602452565b906044916003811015610872576004526001602452565b6001600160401b0381160361043657565b602081830312610436578051906001600160401b038211610436570181601f82011215610436578051906136528261331a565b92613660604051948561240b565b82845260208085019360061b8301019181831161043657602001925b82841061368a575050505090565b60408483031261043657602060409182516136a4816123f0565b86516136af81613097565b8152828701516136be816111c6565b8382015281520193019261367c565b91939293806040840160408552526060830191905f5b8181106136fd5750505064ffffffffff6020919416910152565b9091926040806001926001600160801b03873561371981613097565b16815264ffffffffff6020880135613730816111c6565b1660208201520194019291016136e3565b90815461374d8161331a565b9261375b604051948561240b565b81845260208401905f5260205f205f915b8383106137795750505050565b60016020819260405161378b816123f0565b64ffffffffff86546001600160801b038116835260801c168382015281520192019201919061376c565b906137bf8261331a565b6137cc604051918261240b565b82815280926137dd601f199161331a565b0190602036910137565b90816020910312610436575161052481613097565b90816020910312610436575161052481610424565b90815461381d8161331a565b9261382b604051948561240b565b81845260208401905f5260205f205f915b8383106138495750505050565b60016020819260405161385b816123d0565b64ffffffffff86546001600160801b03811683526001600160401b038160801c168584015260c01c16604082015281520192019201919061383c565b35610524816111c6565b9064ffffffffff8091169116019064ffffffffff821161163457565b9092916138cb8185846133e3565b833b6138d8575b50505050565b6020916138fa6040519485938493630a85bd0160e11b8552336004860161506d565b03815f6001600160a01b0387165af15f9181613987575b5061394b575061391f6133a0565b805191908261394457633250574960e11b5f526001600160a01b03821660045260245ffd5b9050602001fd5b6001600160e01b03191663757a42ff60e11b0161396c57505f8080806138d2565b633250574960e11b5f526001600160a01b031660045260245ffd5b6139a191925060203d602011611cd257611cc4818361240b565b905f613911565b602081830312610436578051906001600160401b038211610436570181601f82011215610436578051906139db8261331a565b926139e9604051948561240b565b8284526020606081860194028301019181831161043657602001925b828410613a13575050505090565b606084830312610436576020606091604051613a2e816123d0565b8651613a3981613097565b815282870151613a488161360e565b838201526040870151613a5a816111c6565b6040820152815201930192613a05565b939291806040860160408752526060850191905f5b818110613a9e5750505090602061243b9294019064ffffffffff169052565b9091926060806001926001600160801b038735613aba81613097565b1681526001600160401b036020880135613ad38161360e565b16602082015264ffffffffff6040880135613aed816111c6565b166040820152019401929101613a7f565b90604051613b0b816123f0565b91546001600160801b038116835260801c6020830152565b805f5260036020526001600160a01b0360405f205416908115613b44575090565b637e27328960e01b5f5260045260245ffd5b805f52600e6020526001600160a01b0360405f20541615613b745750565b62763a5b60e91b5f5260045260245ffd5b60038210156108725752565b90604051613b9e816123d0565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b90604051613bd36101408261240b565b610120613cc660028395613c57613c4e8254613c05613bf8826001600160a01b031690565b6001600160a01b03168952565b64ffffffffff60a082901c166020890152613c3460c882901c64ffffffffff165b64ffffffffff1660408a0152565b613c4860f082901c60ff16151560608a0152565b60f81c90565b15156080870152565b613cc0613cb66001830154613c85613c75826001600160a01b031690565b6001600160a01b031660a08a0152565b613c9960a082901c60ff16151560c08a0152565b613cad60a882901c60ff16151560e08a0152565b60b01c60ff1690565b6101008701613b85565b01613b91565b910152565b909264ffffffffff908160a0946001600160801b03608086019716855216602084015216604082015260806060820152835480935201915f5260205f20905f5b818110613d185750505090565b82546001600160801b038116855260801c64ffffffffff16602085015260409093019260019283019201613d0b565b929164ffffffffff90969594966001600160801b0360a086019316855216602084015260a06040840152815480915260c08301915f5260205f20905f5b818110613db25750505064ffffffffff909416606082015261243b9190608001906001600160801b03169052565b82546001600160801b0381168552608081901c6001600160401b0316602086015260c01c64ffffffffff16604085015260609093019260019283019201613d84565b5f90613e10613e0b825f52600e60205260405f2090565b613bc3565b91613e1e60c0840151151590565b15613e3a5750506101200151602001516001600160801b031690565b60808301516140b557610100830160018151613e5581612d19565b613e5e81612d19565b03613f3b5750506020906101208301613ee8613e828251516001600160801b031690565b91613ecc85613ebc81613eaf613ea060408c015164ffffffffff1690565b985f52600d60205260405f2090565b99015164ffffffffff1690565b925101516001600160801b031690565b906040519687958695631efe300360e21b875260048701613d47565b038173__$50c25247757e62846d50a95ffb6bac620d$__5af4908115610bae575f91613f12575090565b610524915060203d602011613f34575b613f2c818361240b565b8101906137e7565b503d613f22565b8051613f4681612d19565b613f4f81612d19565b61402257505080613f6d61131c6020935f52600c60205260405f2090565b613ee8610120850192613f8984516001600160801b0390511690565b93613fc386613ebc613fb482613fa760408d015164ffffffffff1690565b9b015164ffffffffff1690565b945f52601060205260405f2090565b6040516313c015db60e01b815264ffffffffff95861660048201526001600160801b039687166024820152978516604489015293909116606487015254808416608487015260801c60a4860152911660c48401528290819060e4820190565b600290949391945161403381612d19565b61403c81612d19565b14614045575050565b6020919293506140626101208201516001600160801b0390511690565b613ee861409a61408b8561407e604087015164ffffffffff1690565b95015164ffffffffff1690565b955f52600f60205260405f2090565b604051633796f97b60e01b8152958694859460048601613ccb565b50506101206105249101516107f960406140d683516001600160801b031690565b9201516001600160801b031690565b6140fc6001612679835f52600e60205260405f2090565b156141075750600490565b61411c610c16825f52600e60205260405f2090565b6141a8576141466122da614138835f52600e60205260405f2090565b5460a01c64ffffffffff1690565b42106141a3576001600160801b03614191614185600261417761416886613df4565b955f52600e60205260405f2090565b01546001600160801b031690565b6001600160801b031690565b9116101561419e57600190565b600290565b505f90565b50600390565b815f5260036020526001600160a01b0360405f20541615158061423b575b80614218575b61420557610524915f915f516020615a205f395f51905f52604051806141fd85829190602083019252565b0390a1615384565b50634274c8e160e11b5f5260045260245ffd5b5060ff600161422f845f52600e60205260405f2090565b015460a81c16156141d2565b506001600160a01b03811615156141cc565b6001600160a01b035f54168033036142625750565b6353f0a8cf60e11b5f526004523360245260445ffd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036142aa57565b63a1c0d6e560e01b5f5260045ffd5b906142c382613df4565b916142db6002613cc0835f52600e60205260405f2090565b926142f061418585516001600160801b031690565b6001600160801b03821610156145db57614318610d716116f3845f52600e60205260405f2090565b6145c757806107f960206143476143569461433a89516001600160801b031690565b036001600160801b031690565b9601516001600160801b031690565b61438061436b835f52600e60205260405f2090565b80546001600160f81b0316600160f81b179055565b614395611716835f52600e60205260405f2090565b6001600160801b03811615614597575b6143d98460036143bd855f52600e60205260405f2090565b01906001600160801b03166001600160801b0319825416179055565b6143ee610c39835f52600e60205260405f2090565b9184614405610c39835f52600360205260405f2090565b9361442b600161441d855f52600e60205260405f2090565b01546001600160a01b031690565b906144616001600160801b038416614454846001600160a01b03165f52600760205260405f2090565b818154039055828461468c565b604080518581526001600160801b0385811660208301528716918101919091526001600160a01b038781169381169184918416907f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa5090606090a46040518481525f516020615a205f395f51905f5290602090a16144f26127da876001600160a01b03165f52600b60205260405f2090565b6144ff575b505050505050565b604051630d4af11f60e31b815260048101949094526001600160a01b031660248401526001600160801b0391821660448401529216606482015290602090829060849082905f905af1908115610bae575f91614578575b506001600160e01b0319166312b50ee160e31b016127815780808481806144f7565b614591915060203d602011611cd257611cc4818361240b565b5f614556565b6145c260016145ae845f52600e60205260405f2090565b01805460ff60a01b1916600160a01b179055565b6143a5565b635dd950cb60e11b5f52600482905260245ffd5b6308aca53f60e21b5f52600482905260245ffd5b6105249133906154b0565b805f5260036020526001600160a01b0360405f205416151580614685575b80614667575b614655575f516020615a205f395f51905f526020604051838152a16001600160a01b0361464c5f8381615384565b1615613b445750565b634274c8e160e11b5f5260045260245ffd5b5061467f60016134b7835f52600e60205260405f2090565b1561461e565b505f614618565b61243b926001600160a01b036040519363a9059cbb60e01b60208601521660248401526044830152604482526146c360648361240b565b61554f565b94614740906001600160801b036001600160a01b039664ffffffffff6105249c9b976147158a98896101409e99168d5260208d019064ffffffffff60208092828151168552015116910152565b1660608a015216608088015260a08701906001600160801b0360208092828151168552015116910152565b1660e0840152166101008201528161012082015201906104ee565b634e487b7160e01b5f525f60045260245ffd5b906101406101006105249361478c8482516001600160a01b03169052565b6020818101516001600160a01b0316908501526040818101516001600160a01b0316908501526060818101516001600160801b0316908501526080818101516001600160a01b03169085015260a08181015115159085015260c08181015115159085015261481560e082015160e086019064ffffffffff60208092828151168552015116910152565b0151918161012082015201906104ee565b60409064ffffffffff61484761243b9597969460808452608084019061476e565b9616602082015201906001600160801b0360208092828151168552015116910152565b909592979199989694939473__$70ac0b9f44f1ad43af70526685fc041161$__61489c6008546001600160a01b031690565b90803b1561043657855f916001600160a01b038f6148db8b8f978f988f908b956040519b8c9a8b998a9963f89d584160e01b8b52169460048a016146c8565b03915af48015610bae57614a0d575b506009549a8b99896149048c5f52601060205260405f2090565b9061493a91815160209092015160801b6fffffffffffffffffffffffffffffffff19166001600160801b03909216919091179055565b8a8584888c614951855f52600c60205260405f2090565b9061496d919064ffffffffff1664ffffffffff19825416179055565b61497a938c86888b6157cb565b61498261244d565b338152976001600160a01b031660208901526001600160a01b031660408801526001600160801b031660608701526001600160a01b03166080860152151560a0850152151560c084015260e08301526101008201526040519283926149e79284614826565b037fc79bd540ef5a04a4ac63a943cd4fb703e8a730be1368c34f4c31bb7142bbdb3a91a2565b80614a1b5f614a219361240b565b806104c3565b5f6148ea565b939597969492614a686001600160801b0392936001600160a01b03610100880195168752602087019064ffffffffff60208092828151168552015116910152565b16606084015261010060808401528451809152602061012084019501905f5b818110614acc575050506105249495614aaf614abf9260a08501906001600160a01b03169052565b6001600160a01b031660c0830152565b60e08184039101526104ee565b9091956020606082614b0e6001948b5164ffffffffff604080926001600160801b0381511685526001600160401b036020820151166020860152015116910152565b019701929101614a87565b805482101561338e575f5260205f2001905f90565b8054680100000000000000008110156123eb57614b5091600182018155614b19565b919091614bcf578051825460208301516040909301516001600160801b039092167fffffff00000000000000000000000000000000000000000000000000000000009091161760809290921b77ffffffffffffffff00000000000000000000000000000000169190911760c09190911b64ffffffffff60c01b16179055565b61475b565b9091614beb6105249360408452604084019061476e565b916020818403910152612151565b9296919897939895949573__$70ac0b9f44f1ad43af70526685fc041161$__614c2a6008546001600160a01b031690565b90803b1561043657875f916001600160a01b03878f8d8f97614c67928b996040519a8b998a988998630bce559f60e11b8a52169360048901614a27565b03915af48015610bae57614da4575b5098959493929190600954998a9789515f5b818110614d6157505093614d3084614d2085614d10868e9f9d9b987f0e7eb51bad11fb6392e8e6cfd568e0750bbaf84bca8bf4dceb9bcae5b46a33119f9b614ce460209f9d614d429d8f8e9285614d399f8f98614d00996158fc565b614cec61244d565b3381529e8f01906001600160a01b03169052565b6001600160a01b031660408d0152565b6001600160801b031660608b0152565b6001600160a01b03166080890152565b151560a0870152565b151560c0850152565b60e0830152610100820152614d5c60405192839283614bd4565b0390a2565b614d938c614d8c83614d866001969798999a9b9c9d9e9f5f52600d60205260405f2090565b926133cf565b5190614b2e565b01908c999897969594939291614c88565b80614a1b5f614db29361240b565b5f614c76565b939597969492614df96001600160801b0392936001600160a01b03610100880195168752602087019064ffffffffff60208092828151168552015116910152565b16606084015261010060808401528451809152602061012084019501905f5b818110614e40575050506105249495614aaf614abf9260a08501906001600160a01b03169052565b9091956020604082614e6f6001948b5164ffffffffff602080926001600160801b038151168552015116910152565b019701929101614e18565b8054680100000000000000008110156123eb57614e9c91600182018155614b19565b919091614bcf578051825460209092015174ffffffffffffffffffffffffffffffffffffffffff199092166001600160801b039091161760809190911b74ffffffffff0000000000000000000000000000000016179055565b9091614f0c6105249360408452604084019061476e565b916020818403910152611933565b9298979693959173__$70ac0b9f44f1ad43af70526685fc041161$__614f486008546001600160a01b031690565b90803b1561043657875f916001600160a01b03878f8d8f97614f85928b996040519a8b998a98899863038720af60e21b8a52169360048901614db8565b03915af48015610bae57615059575b5098959493929190600954998a9789515f5b81811061501c57505093614d3084614d2085614d10868e9f9d9b987fb5286ba059f8139658108ff5a9617e2ba55bd80fb2dd93063f9f9bc0e65c4c2a9f9b614ce460209f9d6150029d8f8e9285614d399f8f98614d009961594f565b60e0830152610100820152614d5c60405192839283614ef5565b6150488c61504183614d866001969798999a9b9c9d9e9f5f52600f60205260405f2090565b5190614e7a565b01908c999897969594939291614fa6565b80614a1b5f6150679361240b565b5f614f94565b90926001600160a01b03608093816105249796168452166020830152604082015281606082015201906104ee565b610524906150a881613df4565b905f52600e602052600260405f20015460801c906132fa565b909291926001600160a01b038116156134cf57836150de916141ae565b906001600160a01b038216806151015784637e27328960e01b5f5260045260245ffd5b6001600160a01b038295939495160361346157505050565b906001600160801b03809116911601906001600160801b03821161163457565b91909161519d6020615155610c465f546001600160a01b031690565b61516a610c39855f52600e60205260405f2090565b60405163419d289d60e01b8152600260048201526001600160a01b03909116602482015292839190829081906044820190565b03915afa908115610bae575f91615343575b5080341061532d57506152126151e3836151de60026151d6865f52600e60205260405f2090565b015460801c90565b615119565b60026151f7845f52600e60205260405f2090565b01906001600160801b0382549181199060801b169116179055565b6152296002613cc0835f52600e60205260405f2090565b6001600160801b0361526261418561524b60208501516001600160801b031690565b936107f960406140d683516001600160801b031690565b911610156152fc575b7f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6001600160a01b036152ab600161441d855f52600e60205260405f2090565b6152e06001600160801b0386166152d3836001600160a01b03165f52600760205260405f2090565b818154039055878361468c565b6040516001600160801b039590951685528116941692602090a4565b61531360016145ae835f52600e60205260405f2090565b615328611716825f52600e60205260405f2090565b61526b565b634fc1eeff60e01b5f523460045260245260445ffd5b61535c915060203d6020116110d2576110c3818361240b565b5f6151af565b615374905f52600560205260405f2090565b80546001600160a01b0319169055565b815f5260036020526001600160a01b0360405f205416926001600160a01b03811661545f575b506001600160a01b0383168061542f575b6153e16001600160a01b0383169283615408575b6106ed855f52600360205260405f2090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b615423816001600160a01b03165f52600460205260405f2090565b600181540190556153cf565b61543883615362565b615453846001600160a01b03165f52600460205260405f2090565b80545f190190556153bb565b61546a8382866154b0565b6153aa5790506001600160a01b0383166154915750637e27328960e01b5f5260045260245ffd5b6001600160a01b039063177e802f60e01b5f521660045260245260445ffd5b916001600160a01b0382169081151593846154cd575b5050505090565b6001600160a01b0316808314945091929091841561551a575b505082156154fa575b50505f8080806154c6565b9091505f5260056020526001600160a01b0360405f205416145f806154ef565b60ff92945090615545915f52600660205260405f20906001600160a01b03165f5260205260405f2090565b5416915f806154e6565b905f602091828151910182855af1156134f7575f513d61559a57506001600160a01b0381163b155b61557e5750565b6001600160a01b0390635274afe760e01b5f521660045260245ffd5b60011415615577565b90600381101561087257815460ff60b01b191660b09190911b60ff60b01b16179055565b600261012061243b936156006155e482516001600160a01b031690565b85546001600160a01b0319166001600160a01b03909116178555565b615637615615602083015164ffffffffff1690565b855464ffffffffff60a01b191660a09190911b64ffffffffff60a01b16178555565b61566e61564c604083015164ffffffffff1690565b855464ffffffffff60c81b191660c89190911b64ffffffffff60c81b16178555565b61569861567e6060830151151590565b855460ff60f01b191690151560f01b60ff60f01b16178555565b6156e06156a86080830151151590565b85546001600160f81b031690151560f81b7fff0000000000000000000000000000000000000000000000000000000000000016178555565b6157836001850161571a6156fe60a08501516001600160a01b031690565b82546001600160a01b0319166001600160a01b03909116178255565b61574461572a60c0850151151590565b825460ff60a01b191690151560a01b60ff60a01b16178255565b61576e61575460e0850151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b6101008301519061577e82612d19565b6155a3565b015191018151602083015160801b6fffffffffffffffffffffffffffffffff199081166001600160801b03928316178355604090930151600190920180549093169116179055565b846001936158c56158d0968561589a61243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b93015164ffffffffff1690565b9161583861582961245d565b6001600160801b03909c168c52565b5f60208c01525f60408c015261585e61584f61243d565b6001600160a01b03909d168d52565b64ffffffffff1660208c0152565b15156060880152565b5f60808701526001600160a01b031660a0860152565b5f60c0850152151560e0840152565b6158a85f6101008401613b85565b6101208201526158c0845f52600e60205260405f2090565b6155c7565b6159a3565b01600955565b16906158ed816001600160a01b03165f52600760205260405f2090565b828154019055309033906159de565b846001936158c56158d0968561594161243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b6158a8886101008401613b85565b846001936158c56158d0968561599461243b9d61588b8e6158756001600160801b039f9a9b9e9b61586c6158ca9c613c2661581d6020615810845164ffffffffff1690565b6158a860026101008401613b85565b6001600160a01b038116156134cf576001600160a01b03916159c4916141ae565b166159cb57565b6339e3563760e11b5f525f60045260245ffd5b9091926001600160a01b0361243b9481604051956323b872dd60e01b60208801521660248601521660448401526064830152606482526146c360848361240b56fef8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7a2646970667358221220ab36e9671a0f83054ef54e738e4be2f0875bb56a9005dea3a0642b3f0c52c8e864736f6c634300081d0033",
    "sourceMap": "3173:27029:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;;3173:27029:99;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;;;;;;;;7057:25;;:65;;;;;3173:27029;-1:-1:-1;3173:27029:99;;;;;;;;;;7057:65;-1:-1:-1;;;1697:40:10;;;-1:-1:-1;1697:104:10;;;;7057:65:99;1697:156:10;;;;7057:65:99;;;;;1697:156:10;-1:-1:-1;;;862:40:19;;-1:-1:-1;1697:156:10;;;:104;-1:-1:-1;;;1753:48:10;;;-1:-1:-1;1697:104:10;;3173:27029:99;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;3173:27029:99;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;3173:27029:99;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;2441:5:10;3173:27029:99;;2441:5:10;3173:27029:99;;2441:5:10;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2441:5:10;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;;;;;;;;;2441:5:10;3173:27029:99;;;;-1:-1:-1;;3173:27029:99;;;-1:-1:-1;3173:27029:99;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;3582:22:10;;;:::i;:::-;;-1:-1:-1;3173:27029:99;6059:15:10;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;;;15017:22:10;;;;:::i;:::-;735:10:16;15167:18:10;;:35;;;3173:27029:99;15167:69:10;;;3173:27029:99;15163:142:10;;3173:27029:99;15420:29:10;3173:27029:99;15420:24:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;15357:28:10;-1:-1:-1;15357:28:10;;3173:27029:99;;15420:15:10;3173:27029:99;;;;;;;15420:24:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;15420:29:10;3173:27029:99;15163:142:10;-1:-1:-1;;;;15263:27:10;735:10:16;3173:27029:99;;;15263:27:10;-1:-1:-1;15263:27:10;15167:69;735:10:16;3173:27029:99;4038:35:10;735:10:16;4038:25:10;;-1:-1:-1;;;;;3173:27029:99;;;4038:18:10;3173:27029:99;;;;;;;4038:25:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;4038:35:10;3173:27029:99;;15206:30:10;15167:69;;:35;735:10:16;;-1:-1:-1;;;;;3173:27029:99;;15189:13:10;;15167:35;;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;6142:8;3173:27029;;;;-1:-1:-1;3173:27029:99;;;;;6142:65;;;3173:27029;6138:181;;3173:27029;-1:-1:-1;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;6138:181;6242:66;3173:27029;;;-1:-1:-1;3173:27029:99;6142:8;3173:27029;;6281:27;3173:27029;6242:26;3173:27029;-1:-1:-1;3173:27029:99;6242:26;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;6281:27;;:::i;:::-;6242:66;;:::i;:::-;6138:181;;;6142:65;3173:27029;;-1:-1:-1;3173:27029:99;6142:8;3173:27029;;;6178:29;3173:27029;-1:-1:-1;3173:27029:99;6178:29;3173:27029;;;;6177:30;6142:65;;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;5625:19;3173:27029;;2596:8:102;;;:::i;:::-;5625:19:99;:::i;:::-;3173:27029;;;;;;5663:31;;:68;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;5663:68;3173:27029;;;5698:33;5663:68;;;3173:27029;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3173:27029:99;;;:::i;:::-;;-1:-1:-1;3173:27029:99;;;;;;678:13:60;;-1:-1:-1;693:9:60;;;;;;3173:27029:99;;;;;;;:::i;704:3:60:-;-1:-1:-1;788:8:60;;;;;;:::i;:::-;3173:27029:99;;;;;;;;;:::i;:::-;761:36:60;769:4;;761:36;;;;:::i;:::-;902:8;;898:377;;1344:19;3173:27029:99;1344:19:60;;;;;:::i;:::-;;;;;;:::i;:::-;;3173:27029:99;678:13:60;;898:377;930:331;;;3173:27029:99;930:331:60;;3173:27029:99;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;1180:36:102;3173:27029:99;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::i;:::-;;-1:-1:-1;3173:27029:99;7423:14:102;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;1003:74:61;;:::i;:::-;3173:27029:99;;-1:-1:-1;;;8309:65:99;;-1:-1:-1;;;3173:27029:99;8309:65;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;8309:65;;;;;;;-1:-1:-1;8309:65:99;;;3173:27029;8308:66;;8304:167;;8536:25;:32;:25;-1:-1:-1;;;;;3173:27029:99;;;8536:14;3173:27029;;;;;;;8536:25;3173:27029;;-1:-1:-1;;3173:27029:99;8564:4;3173:27029;;;;8536:32;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;8623:50;-1:-1:-1;8623:50:99;;3173:27029;8304:167;-1:-1:-1;;;;8397:63:99;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;15263:27:10;8309:65:99;;;;3173:27029;8309:65;3173:27029;8309:65;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;3173:27029::-;;;-1:-1:-1;;3173:27029:99;;;;;;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;;;9716:8;3173:27029;;;;;9716:29;;3173:27029;;;;;9716:29;;;-1:-1:-1;;;;9768:45:99;3173:27029;;;-1:-1:-1;15263:27:10;9712:231:99;3173:27029;9834:18;;3173:27029;;9716:8;3173:27029;;;;;;;9834:18;3173:27029;;;;;;9830:113;;10012:39;3173:27029;10026:18;;3173:27029;;9716:8;3173:27029;;;;;;;10026:18;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;10012:39;:10;:39;10008:132;;10231:17;3173:27029;10231:17;;:::i;:::-;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;10008:132;-1:-1:-1;;;;10074:55:99;3173:27029;;10012:10;3173:27029;;;-1:-1:-1;15263:27:10;9830:113:99;-1:-1:-1;;;;9887:45:99;3173:27029;;;-1:-1:-1;15263:27:10;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;7901:8:102;3173:27029:99;;;;7901:29:102;3173:27029:99;-1:-1:-1;3173:27029:99;7901:29:102;3173:27029:99;;;;;;;;;;;;;;;;4872:39:10;3173:27029:99;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4872:39:10;:::i;3173:27029:99:-;;;-1:-1:-1;;3173:27029:99;;;;;;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;8882:8;3173:27029;;;8882:29;3173:27029;-1:-1:-1;3173:27029:99;8882:29;3173:27029;;;;8881:30;8877:116;;3173:27029;-1:-1:-1;3173:27029:99;5824:7:10;3173:27029:99;;9192:63;9193:62;5824:16:10;3173:27029:99;-1:-1:-1;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;5824:16:10;9193:62:99;;:::i;:::-;9192:63;;3173:27029;9192:63;9188:156;;9404:8;;;:::i;8877:116::-;8934:48;;;-1:-1:-1;8934:48:99;3173:27029;;;-1:-1:-1;8934:48:99;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;-1:-1:-1;;;;;1263:50:102;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;7618:19:102;;;;:::i;:::-;3173:27029:99;;;;;;7641:21:102;7618:44;7614:115;;-1:-1:-1;3173:27029:99;;;;;;;;;;7614:115:102;3173:27029:99;;-1:-1:-1;3173:27029:99;7687:8:102;3173:27029:99;;;;-1:-1:-1;3173:27029:99;;;;;7614:115:102;;;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;;6802:27;3173:27029;;2596:8:102;;;:::i;:::-;6802:27:99;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;;;:::i;:::-;18333:30:99;;;18329:146;;-1:-1:-1;18610:18:99;;;;;;3173:27029;18630:3;18861:12;-1:-1:-1;18861:12:99;;3173:27029;18861:12;;;;:::i;:::-;3173:27029;18875:22;18884:12;;;;;:::i;:::-;3173:27029;-1:-1:-1;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;5732:115:10;;18875:22:99;18820:91;18899:10;;;;;;:::i;:::-;;:::i;:::-;3173:27029;;-1:-1:-1;;;3173:27029:99;18820:91;;;;;3173:27029;18820:91;;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;18820:91;;3173:27029;;18820:91;;;;;;:::i;:::-;18776:149;18784:4;;18776:149;;;;:::i;:::-;19038:8;;19034:124;;18630:3;;3173:27029;18595:13;;19034:124;19071:72;;19122:12;;;;;:::i;:::-;3173:27029;;;;19071:72;;;;;:::i;:::-;;;;19034:124;;;18329:146;-1:-1:-1;;;;18386:78:99;3173:27029;;;;;;;;;-1:-1:-1;15263:27:10;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;2273:22:10;3173:27029:99;;2273:22:10;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;1003:74:61;;:::i;:::-;3173:27029:99;;-1:-1:-1;;;11805:30:99;;11829:4;3173:27029;11805:30;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;11805:30;;;;;;11977:7;11805:30;:55;:30;-1:-1:-1;11805:30:99;;;3173:27029;;-1:-1:-1;3173:27029:99;11838:15;3173:27029;;;-1:-1:-1;3173:27029:99;;11805:55;;:::i;:::-;11977:7;;:::i;11805:30::-;;;;;3173:27029;11805:30;3173:27029;11805:30;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;1003:74:61;;:::i;:::-;13356:11:99;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;13356:25;13352:118;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;13356:11;3173:27029;-1:-1:-1;3173:27029:99;;13352:118;13404:55;;;-1:-1:-1;13404:55:99;3173:27029;;;-1:-1:-1;13404:55:99;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::i;:::-;;2005:19:10;;2001:87;;-1:-1:-1;3173:27029:99;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;2001:87:10;2047:30;;;-1:-1:-1;2047:30:10;-1:-1:-1;3173:27029:99;;;-1:-1:-1;2047:30:10;3173:27029:99;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;2728:421:101;3173:27029:99;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:62;;:::i;:::-;3173:27029:99;2764:17:101;;3173:27029:99;;;;;:::i;:::-;2844:20:101;;;3173:27029:99;;;;;:::i;:::-;;2889:16:101;;3173:27029:99;;;;:::i;:::-;;;;;;;:::i;:::-;2961:12:101;;;;;;:::i;:::-;3037;;;3173:27029:99;;;;3037:12:101;;3173:27029:99;;;;;:::i;:::-;3077:19:101;;;3173:27029:99;;;;;:::i;:::-;;;;:::i;:::-;;2999:17:101;3173:27029:99;2999:17:101;;3173:27029:99;:::i;:::-;;;;;:::i;:::-;2728:421:101;;:::i;:::-;2844:20;3173:27029:99;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;3525:8:102;3173:27029:99;;;3525:30:102;3173:27029:99;-1:-1:-1;3173:27029:99;3525:30:102;3173:27029:99;;;;;;;;;;3521:230:102;;3773:17;;3173:27029:99;3773:17:102;3173:27029:99;;3773:7:102;3173:27029:99;;;;;;;3773:17:102;3173:27029:99;;;;;3773:17:102;3173:27029:99;;;;;;;;;;;;;;;;3521:230:102;-1:-1:-1;3173:27029:99;3525:8:102;3173:27029:99;;3608:132:102;3668:30;3525;3173:27029:99;-1:-1:-1;3173:27029:99;3668:30:102;3173:27029:99;;;;;;;;3668:30:102;-1:-1:-1;;;;3608:132:102;;:::i;3173:27029:99:-;;;;;;-1:-1:-1;;3173:27029:99;;;;2801:21:61;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;2913:49:61;;;;;:::i;:::-;;3168:66;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;3168:66:61;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;;:::i;:::-;2699:17:100;;;3173:27029:99;;;;;:::i;:::-;;2745:20:100;;3173:27029:99;;;;;:::i;:::-;;2790:16:100;;3173:27029:99;;;;;:::i;:::-;;;;;;;:::i;:::-;2894:12:100;;;;;;:::i;:::-;2970;;;;;3173:27029:99;;;;;:::i;:::-;3010:19:100;;;3173:27029:99;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2970:12:100;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;2663:377:100;3173:27029:99;;;;;;;;;;;;;;;:::i;:::-;;2932:17:100;3173:27029:99;2932:17:100;;3173:27029:99;:::i;:::-;2663:377:100;;:::i;3173:27029:99:-;2970:12:100;3173:27029:99;;;;;;;2970:12:100;3173:27029:99;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;1003:74:61;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;13789:13;3173:27029;;;;;;;;;;13789:13;3173:27029;;-1:-1:-1;;;;;;3173:27029:99;;13909:80;-1:-1:-1;13909:80:99;;14118:12;3173:27029;-1:-1:-1;;3173:27029:99;;;;;;;14058:79;;3173:27029;;;14058:79;;;;3173:27029;;;;;;;14103:1;3173:27029;;;;;14058:79;;;;3173:27029;;;:::i;:::-;;;-1:-1:-1;;3173:27029:99;;;;;;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;12203:19:99;;;:::i;:::-;3173:27029;;;:::i;:::-;;12236:32;;3173:27029;;-1:-1:-1;;;;12291:45:99;3173:27029;;;;;-1:-1:-1;15263:27:10;12232:355:99;3173:27029;;;:::i;:::-;12367:22;12357:32;;12367:22;;-1:-1:-1;;;;12412:45:99;3173:27029;;;;;-1:-1:-1;15263:27:10;12353:234:99;3173:27029;;12488:21;3173:27029;;:::i;:::-;12478:31;12474:113;;12656:39;3173:27029;12670:18;;3173:27029;;9716:8;3173:27029;;;;;;;12656:39;:10;:39;12652:132;;12842:32;12843:31;:18;;3173:27029;;9716:8;3173:27029;;;;;;;12843:18;3173:27029;;;;;;;12842:32;12838:120;;13036:39;:18;;3173:27029;;9716:8;3173:27029;;;;;;;13036:18;3173:27029;;-1:-1:-1;;;;3173:27029:99;;;;13036:39;13124:45;-1:-1:-1;13124:45:99;;3173:27029;12838:120;-1:-1:-1;;;;12897:50:99;3173:27029;;;-1:-1:-1;15263:27:10;12474:113:99;-1:-1:-1;;;;12532:44:99;3173:27029;;;-1:-1:-1;15263:27:10;3173:27029:99;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;;:::i;:::-;-1:-1:-1;3173:27029:99;1447:15:103;3173:27029:99;;;;1561:67:103;3173:27029:99;;;;;;;;;;1561:67:103;;3173:27029:99;1561:67:103;;;:::i;:::-;;:7;;:67;;;;;;3173:27029:99;1561:67:103;1910:370;1561:67;-1:-1:-1;1561:67:103;;;3173:27029:99;;;;1739:85:103;3173:27029:99;;1782:29:103;1791:19;3173:27029:99;;;1791:19:103;:::i;:::-;1782:29;;:::i;:::-;;:39;3173:27029:99;;;;;;1739:85:103;3173:27029:99;;:::i;:::-;;;;;;;;1739:85:103;3173:27029:99;;;1739:85:103;;3173:27029:99;;1739:85:103;1946:17;;;;;:::i;:::-;1992:20;3173:27029:99;1992:20:103;;;:::i;:::-;2037:16;3173:27029:99;2037:16:103;;;:::i;:::-;2075:13;;;:::i;:::-;2109:12;;;;;;;:::i;:::-;2178;;2250:19;;2178:12;;;;;:::i;:::-;2250:19;;;:::i;:::-;3173:27029:99;;;;:::i;:::-;1910:370:103;;:::i;1561:67::-;3173:27029:99;1561:67:103;;;;;;-1:-1:-1;1561:67:103;;;;;;:::i;:::-;;;;;:::i;:::-;;;;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;5984:8:102;3173:27029:99;;;5984:30:102;3173:27029:99;-1:-1:-1;3173:27029:99;5984:30:102;3173:27029:99;;;;;;;;;;6018:28:102;5984:62;5980:234;;3173:27029:99;6235:19:102;3173:27029:99;6235:19:102;3173:27029:99;;6235:9:102;3173:27029:99;;;;;;;6235:19:102;3173:27029:99;:::i;:::-;;;;;;;;:::i;5980:234:102:-;-1:-1:-1;3173:27029:99;5984:8:102;3173:27029:99;;6069:134:102;6129:30;5984;3173:27029:99;-1:-1:-1;3173:27029:99;6129:30:102;3173:27029:99;;;;;;;;6129:30:102;-1:-1:-1;;;;6069:134:102;;:::i;3173:27029:99:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:76:62;;;:::i;:::-;10599:20:99;;;:::i;:::-;10716:13;-1:-1:-1;10731:9:99;;;;;;3173:27029;;;;;;;:::i;10742:3::-;10979:12;-1:-1:-1;10979:12:99;;3173:27029;10979:12;;;;:::i;:::-;3173:27029;;-1:-1:-1;;;10940:53:99;;;;;;3173:27029;;10940:53;;;3173:27029;10940:53;3173:27029;;;;10940:53;3173:27029;10940:53;10913:81;10921:4;;10913:81;;;;:::i;:::-;11108:8;;;11141:66;;11186:12;;;;;:::i;11141:66::-;;;;11104:360;3173:27029;10716:13;;11104:360;11420:29;3173:27029;10940:53;3173:27029;11399:50;3173:27029;;11420:29;;;;;;:::i;:::-;11399:50;;;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;11399:50;11104:360;;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;1003:74:61;;:::i;:::-;-1:-1:-1;;;;;;3173:27029:99;;;;;;;;2621:34:61;;3173:27029:99;2621:34:61;3173:27029:99;2621:34:61;;;;;;;;;-1:-1:-1;2621:34:61;;;3173:27029:99;-1:-1:-1;3173:27029:99;;-1:-1:-1;;;4364:52:61;;-1:-1:-1;;;;;;3173:27029:99;;;4364:52:61;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;4364:52:61;;;;;;;-1:-1:-1;4364:52:61;;;3173:27029:99;4363:53:61;;4359:332;;4816:51;4745:28;;;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;2532:11:61;3173:27029:99;;;2532:11:61;3173:27029:99;;4745:28:61;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;4816:51:61;3173:27029:99;4359:332:61;-1:-1:-1;;;;4439:241:61;-1:-1:-1;;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;;3173:27029:99;;;;-1:-1:-1;15263:27:10;4364:52:61;;;;3173:27029:99;4364:52:61;3173:27029:99;4364:52:61;;;;;;;:::i;:::-;;;;2621:34;;;;3173:27029:99;2621:34:61;3173:27029:99;2621:34:61;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;5306:19;3173:27029;;2596:8:102;;;:::i;5306:19:99:-;3173:27029;;;;;;5354:21;5344:31;;:67;;;;;3173:27029;5344:103;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;5344:103;3173:27029;;;;;;:::i;:::-;5415:32;5344:103;;;:67;5389:22;5379:32;;;-1:-1:-1;5344:67:99;;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;4249:8:102;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;2596:7:10;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2596:7:10;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;;;;:::i;:::-;2712:17:103;;;3173:27029:99;;;;;:::i;:::-;;2758:20:103;;3173:27029:99;;;;;:::i;:::-;;2803:16:103;;3173:27029:99;;;;:::i;:::-;;;;;;;:::i;:::-;2875:12:103;;;;;;:::i;:::-;2951;;;3173:27029:99;;2951:12:103;;;3173:27029:99;;;;;:::i;:::-;3023:19:103;;;3173:27029:99;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2676:377:103;;;;;;;;;;;:::i;3173:27029:99:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;15772:22:10;;;15768:91;;735:10:16;15868:35:10;:46;735:10:16;;-1:-1:-1;3173:27029:99;15868:18:10;3173:27029:99;;;-1:-1:-1;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;15868:35:10;3173:27029:99;;;;;;;;;;;;;;;15868:46:10;3173:27029:99;;;;;;;15929:41:10;3173:27029:99;735:10:16;15929:41:10;;3173:27029:99;15768:91:10;15817:31;;;;-1:-1:-1;15817:31:10;3173:27029:99;;;-1:-1:-1;15817:31:10;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;6435:8:102;3173:27029:99;;;-1:-1:-1;;;;;6435:24:102;3173:27029:99;-1:-1:-1;3173:27029:99;6435:24:102;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;4036:8:102;3173:27029:99;;;-1:-1:-1;;;;;4036:26:102;3173:27029:99;-1:-1:-1;3173:27029:99;4036:26:102;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;6546:19;3173:27029;;2596:8:102;;;:::i;6546:19:99:-;3173:27029;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;8448:8:102;3173:27029:99;;;;8448:33:102;3173:27029:99;-1:-1:-1;3173:27029:99;8448:33:102;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;5063:8:102;3173:27029:99;;;5063:30:102;3173:27029:99;-1:-1:-1;3173:27029:99;5063:30:102;3173:27029:99;;;;;;;;;;5063:30:102;:61;5059:232;;3173:27029:99;5312:19:102;3173:27029:99;5312:19:102;3173:27029:99;;5312:9:102;3173:27029:99;;;;;;;5312:19:102;3173:27029:99;:::i;:::-;;;;;;;;:::i;5059:232:102:-;-1:-1:-1;3173:27029:99;5063:8:102;3173:27029:99;;5147:133:102;5207:30;5063;3173:27029:99;-1:-1:-1;3173:27029:99;5207:30:102;3173:27029:99;;;;;;;;5207:30:102;-1:-1:-1;;;;5147:133:102;;:::i;3173:27029:99:-;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;1887:414:101;3173:27029:99;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;832:76:62;;;:::i;:::-;3173:27029:99;;:::i;:::-;1526:15:101;3173:27029:99;;;;;1492:61:101;;3173:27029:99;;;;-1:-1:-1;1649:15:101;:19;:15;;;:::i;:::-;3173:27029:99;;;;1649:19:101;1645:96;;3173:27029:99;1750:51:101;3173:27029:99;1767:34:101;3173:27029:99;;;1786:15:101;3173:27029:99;;;;;;;;;1786:15:101;;;:::i;:::-;1767:34;;:::i;:::-;3173:27029:99;;;;;1750:51:101;1923:17;;;;;:::i;:::-;2003:20;;3173:27029:99;2003:20:101;;;:::i;:::-;2048:16;3173:27029:99;2048:16:101;;;:::i;:::-;2086:13;;;;:::i;:::-;2120:12;3173:27029:99;2120:12:101;;;;;;:::i;:::-;2189;;2229:19;3173:27029:99;2189:12:101;3173:27029:99;2189:12:101;;;:::i;:::-;2229:19;;;:::i;:::-;3173:27029:99;;;;:::i;:::-;;;;;:::i;1645:96:101:-;3173:27029:99;;;1750:51:101;3173:27029:99;1767:34:101;1696;3173:27029:99;;;;;;;;1715:15:101;;;:::i;1696:34::-;1645:96;;;;;;;3173:27029:99;;;;;;;;;;;;;2970:12:100;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;3173:27029:99;8232:8:102;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;8232:39:102;;3173:27029:99;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;5506:8:102;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;5714:8:102;3173:27029:99;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;24755:10;24712:75;24755:10;;24712:75;;:::i;:::-;17367:63;17363:156;;17614:31;;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;17659:19;;;;17655:129;;3173:27029;;17906:8;;;;;;:::i;17655:129::-;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;3173:27029:99;14440:29;:18;;3173:27029;;9716:8;3173:27029;;;;;;;14440:18;:29;3173:27029;;;;;;;;14436:112;;14616:16;;14612:106;;5824:16:10;;;3173:27029:99;;5824:7:10;3173:27029:99;;;;;;;5824:16:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;14983:15;;;;;:75;;;17655:129;14979:189;;15229:98;;15449:31;;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;15490:132:99;;15714:6;;;;;;:::i;:::-;3173:27029;;;;;-1:-1:-1;;;;;;;;;;;15813:47:99;3173:27029;;15813:47;24755:10;;15989:23;;:52;;;17655:129;15985:556;17655:129;15985:556;3173:27029;;-1:-1:-1;;;16075:202:99;;3173:27029;16075:202;;3173:27029;;;24755:10;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;-1:-1:-1;;16075:202:99;;;;;;;-1:-1:-1;16075:202:99;;;15985:556;-1:-1:-1;;;;;;;3173:27029:99;-1:-1:-1;;;16370:68:99;16366:165;;15985:556;17655:129;;16366:165;-1:-1:-1;;;;16465:51:99;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;15263:27:10;16075:202:99;;;;3173:27029;16075:202;3173:27029;16075:202;;;;;;;:::i;:::-;;;;15989:52;16016:25;;;;-1:-1:-1;;;;;3173:27029:99;;;8536:14;3173:27029;;;;;;;16016:25;3173:27029;;;;;16016:25;15989:52;;15490:132;-1:-1:-1;;;;15544:67:99;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;-1:-1:-1;15263:27:10;15229:98:99;-1:-1:-1;;;;15267:49:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14979:189:99;-1:-1:-1;;;;15081:76:99;3173:27029;;;;24755:10;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;15263:27:10;14983:75:99;24755:10;15002:56;24712:75;24755:10;;24712:75;;:::i;15002:56::-;14983:75;;14612:106;-1:-1:-1;;;;14655:52:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14436:112:99;-1:-1:-1;;;;14492:45:99;3173:27029;;;;;-1:-1:-1;15263:27:10;17363:156:99;10074:55;;;;-1:-1:-1;17453:55:99;3173:27029;;24755:10;3173:27029;;;-1:-1:-1;17453:55:99;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;;7323:36;;;:::i;:::-;;-1:-1:-1;;;;;;7431:13:99;3173:27029;;;7431:61;3173:27029;;;;;;;;;7431:61;;7465:4;3173:27029;7431:61;;3173:27029;;;;;7431:61;;;;;;-1:-1:-1;7431:61:99;;;3173:27029;;;;;;;;;;:::i;7431:61::-;;;;-1:-1:-1;7431:61:99;;;;;;:::i;:::-;;;3173:27029;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7431:61;;3173:27029;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;:::i;:::-;832:76:62;;;;:::i;:::-;-1:-1:-1;3173:27029:99;1437:15:100;3173:27029:99;;;;1550:67:100;3173:27029:99;;;;;;;;;;1550:67:100;;3173:27029:99;1550:67:100;;;:::i;:::-;;:7;;:67;;;;;;;3173:27029:99;1550:67:100;1899:370;1550:67;3173:27029:99;1550:67:100;-1:-1:-1;1550:67:100;;;3173:27029:99;;1728:85:100;3173:27029:99;;1771:29:100;1780:19;3173:27029:99;;1780:19:100;:::i;:::-;1771:29;;:::i;3173:27029:99:-;1728:85:100;3173:27029:99;;:::i;:::-;;;;;;;;1728:85:100;3173:27029:99;;;1728:85:100;;3173:27029:99;;1728:85:100;1935:17;;;;;:::i;:::-;1981:20;;3173:27029:99;1981:20:100;;;:::i;:::-;2026:16;;3173:27029:99;2026:16:100;;;:::i;:::-;2096:13;;;:::i;:::-;2130:12;;;;;;;:::i;:::-;2199;;2239:19;;2199:12;;;;;:::i;:::-;2239:19;;;:::i;:::-;3173:27029:99;;;;:::i;:::-;1899:370:100;;:::i;1550:67::-;;;;;;-1:-1:-1;1550:67:100;;;;;;:::i;:::-;;;;;:::i;:::-;;;;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;4688:149;3173:27029;;;2596:8:102;;;:::i;:::-;-1:-1:-1;;;;;;3173:27029:99;;;-1:-1:-1;3173:27029:99;4801:8;3173:27029;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;4688:149;;3173:27029;4688:149;;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;4746:35;3173:27029;;;;;;;4688:149;;;;;;;;;3173:27029;4688:149;-1:-1:-1;4688:149:99;;;3173:27029;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;4688:149;;;;3173:27029;4688:149;3173:27029;4688:149;;;;;;;:::i;:::-;;;;3173:27029;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;4787:8:102;3173:27029:99;;;-1:-1:-1;;;;;4787:35:102;3173:27029:99;-1:-1:-1;3173:27029:99;4787:35:102;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;7235:8:102;3173:27029:99;;;7235:26:102;3173:27029:99;-1:-1:-1;3173:27029:99;7235:26:102;3173:27029:99;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;7741:31;3173:27029;;2596:8:102;;;:::i;:::-;7741:31:99;:::i;3173:27029::-;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;-1:-1:-1;3173:27029:99;;;;;;:::i;:::-;;;;;;2596:8:102;;;:::i;:::-;3173:27029:99;-1:-1:-1;3173:27029:99;6713:8:102;3173:27029:99;;;6713:30:102;3173:27029:99;-1:-1:-1;3173:27029:99;6713:30:102;3173:27029:99;;;;;;;;;;6709:230:102;;3173:27029:99;6965:24:102;3173:27029:99;6965:24:102;3173:27029:99;;6965:14:102;3173:27029:99;;;;;;;6965:24:102;3173:27029:99;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;-1:-1:-1;;;;;1098:35:102;3173:27029:99;;;;;;;;;;-1:-1:-1;3173:27029:99;;;:::o;:::-;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;4514:8:102;3173:27029:99;;;4514:30:102;3173:27029:99;-1:-1:-1;3173:27029:99;4514:30:102;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;4038:35:10;3173:27029:99;;;;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;:::i;:::-;;-1:-1:-1;3173:27029:99;4038:18:10;3173:27029:99;;;-1:-1:-1;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;4038:35:10;3173:27029:99;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;;;;;;:::i;:::-;16727:31;;;:::i;:::-;832:76:62;;;:::i;:::-;2596:8:102;;;:::i;:::-;3173:27029:99;14440:29;:18;;3173:27029;;9716:8;3173:27029;;;;;;;;14436:112;;-1:-1:-1;;;;;3173:27029:99;;14616:16;;;14612:106;;5824:16:10;;;3173:27029:99;;5824:7:10;3173:27029:99;;;;;;;5824:16:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;14983:15;;;;:75;;;3173:27029;14979:189;;-1:-1:-1;;;;;3173:27029:99;;15233:11;;15229:98;;15449:31;;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;15490:132:99;;15714:6;;;;;;:::i;:::-;3173:27029;;;;;-1:-1:-1;;;;;;;;;;;15813:47:99;3173:27029;;15813:47;15989:10;;:23;;:52;;;3173:27029;15985:556;;3173:27029;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;15985:556;3173:27029;;-1:-1:-1;;;16075:202:99;;3173:27029;16075:202;;3173:27029;;;;15989:10;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;-1:-1:-1;;16075:202:99;;;;;;;-1:-1:-1;16075:202:99;;;15985:556;-1:-1:-1;;;;;;;3173:27029:99;-1:-1:-1;;;16370:68:99;16366:165;;15985:556;;;;;16075:202;;;;3173:27029;16075:202;3173:27029;16075:202;;;;;;;:::i;:::-;;;;15989:52;16016:25;;;;-1:-1:-1;;;;;3173:27029:99;;;8536:14;3173:27029;;;;;;;16016:25;15989:52;;15490:132;-1:-1:-1;;;;15544:67:99;3173:27029;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;-1:-1:-1;15263:27:10;15229:98:99;-1:-1:-1;;;;15267:49:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14979:189:99;-1:-1:-1;;;;15081:76:99;3173:27029;;15142:10;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;15263:27:10;14983:75:99;24755:10;15002:56;24712:75;24755:10;;24712:75;;:::i;15002:56::-;14983:75;;14612:106;-1:-1:-1;;;;14655:52:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14436:112:99;-1:-1:-1;;;;14492:45:99;3173:27029;;;;;-1:-1:-1;15263:27:10;3173:27029:99;;;;;;-1:-1:-1;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::i;:::-;;-1:-1:-1;3173:27029:99;980:71:102;3173:27029:99;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;;;;2596:8:102;;;:::i;:::-;-1:-1:-1;3173:27029:99;8655:8:102;3173:27029:99;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::o;:::-;;;-1:-1:-1;;3173:27029:99;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:62;;:::i;:::-;2596:8:102;;;:::i;:::-;3173:27029:99;14440:29;:18;;3173:27029;;9716:8;3173:27029;;;;;;;;14436:112;;-1:-1:-1;;;;;3173:27029:99;;14616:16;;;14612:106;;5824:16:10;;;3173:27029:99;;5824:7:10;3173:27029:99;;;;;;;5824:16:10;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;14983:15;;;;:75;;;3173:27029;14979:189;;-1:-1:-1;;;;;3173:27029:99;;15233:11;;15229:98;;15449:31;;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;15490:132:99;;15714:6;;;;;;:::i;:::-;3173:27029;;;;;-1:-1:-1;;;;;;;;;;;15813:47:99;3173:27029;;15813:47;15989:10;;:23;;:52;;;3173:27029;15985:556;;3173:27029;15985:556;3173:27029;;-1:-1:-1;;;16075:202:99;;3173:27029;16075:202;;3173:27029;;;;15989:10;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;16075:202:99;;;;;;;-1:-1:-1;16075:202:99;;;15985:556;-1:-1:-1;;;;;;;3173:27029:99;-1:-1:-1;;;16370:68:99;16366:165;;3173:27029;16075:202;;;;3173:27029;16075:202;3173:27029;16075:202;;;;;;;:::i;:::-;;;;15989:52;16016:25;;;;-1:-1:-1;;;;;3173:27029:99;;;8536:14;3173:27029;;;;;;;16016:25;15989:52;;15490:132;-1:-1:-1;;;;15544:67:99;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;-1:-1:-1;15263:27:10;15229:98:99;-1:-1:-1;;;;15267:49:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14979:189:99;-1:-1:-1;;;;15081:76:99;3173:27029;;;;15142:10;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;15263:27:10;14983:75:99;24755:10;15002:56;24712:75;24755:10;;24712:75;;:::i;15002:56::-;14983:75;;14612:106;-1:-1:-1;;;;14655:52:99;3173:27029;;;;;-1:-1:-1;15263:27:10;14436:112:99;-1:-1:-1;;;;14492:45:99;3173:27029;;;-1:-1:-1;15263:27:10;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;:::o;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;3173:27029:99;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;4142:578:10:-;;;-1:-1:-1;;;;;3173:27029:99;;4236:16:10;4232:87;;3173:27029:99;4250:1:10;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;4250:1:10;3173:27029:99;;;23744:18;;:38;;;4142:578:10;23744:76:99;;;4142:578:10;23740:160:99;;3173:27029;;;;;24056:33;;;-1:-1:-1;;;;;;;;;;;23991:47:99;3173:27029;;23991:47;735:10:16;;24056:33:99;;:::i;:::-;3173:27029;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;4609:21:10;4605:109;;4142:578;;;:::o;4605:109::-;-1:-1:-1;;;4250:1:10;4653:50;-1:-1:-1;;;;;3173:27029:99;;;4653:50:10;3173:27029:99;;;;;;;;;;-1:-1:-1;15263:27:10;23740:160:99;-1:-1:-1;;;4250:1:10;23843:46:99;3173:27029;;;;;-1:-1:-1;15263:27:10;23744:76:99;23787:18;23786:34;3173:27029;23787:33;:18;;3173:27029;;9716:8;3173:27029;;;;;;;23787:18;:33;3173:27029;;;;;;;23786:34;23744:76;;:38;;23766:16;23744:38;;4232:87:10;4275:33;;;4250:1;4275:33;4250:1;4275:33;3173:27029:99;;4250:1:10;4275:33;3173:27029:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;3173:27029:99;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;:::o;:::-;;;;;;;;;;;;6018:28:102;3173:27029:99;;:::o;:::-;;;;;;;;;;;;5063:30:102;3173:27029:99;;:::o;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;-1:-1:-1;3173:27029:99;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;-1:-1:-1;3173:27029:99;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;4984:233:10:-;;;;5120:7;;;;;:::i;:::-;1173:14:14;;1169:742;;4984:233:10;;;;;:::o;1169:742:14:-;1211:67;3173:27029:99;1211:67:14;3173:27029:99;;;;;;;;;;1211:67:14;;735:10:16;1211:67:14;;;;:::i;:::-;;3173:27029:99;1190:1:14;-1:-1:-1;;;;;3173:27029:99;;1211:67:14;;1190:1;;1211:67;;;1169:742;-1:-1:-1;1207:694:14;;1518:383;;;:::i;:::-;3173:27029:99;;;;1568:18:14;;;-1:-1:-1;;;1190:1:14;1672:39;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;15263:27:10;1564:323:14;1758:111;;1211:67;1758:111;;1207:694;-1:-1:-1;;;;;;3173:27029:99;-1:-1:-1;;;1325:51:14;1321:182;;1207:694;1169:742;;;;;;1321:182;-1:-1:-1;;;1190:1:14;1445:39;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;15263:27:10;1211:67:14;;;;;;;;;;;;;;;:::i;:::-;;;;;3173:27029:99;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;:::o;16212:241:10:-;3173:27029:99;-1:-1:-1;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;16341:19:10;;;16337:88;;16434:12;16212:241;:::o;16337:88::-;16383:31;;;-1:-1:-1;16383:31:10;;3173:27029:99;;-1:-1:-1;16383:31:10;11129:331:102;3173:27029:99;-1:-1:-1;3173:27029:99;11341:8:102;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;11341:39:102;11337:117;;11129:331;:::o;11337:117::-;11403:40;;;-1:-1:-1;11403:40:102;;3173:27029:99;;-1:-1:-1;11403:40:102;3173:27029:99;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;19439:1820;3173:27029;19621:18;3173:27029;19621:18;;3173:27029;;9716:8;3173:27029;;;;;;;19621:18;3173:27029;:::i;:::-;19654:17;3173:27029;19654:17;;;3173:27029;;;;;;19654:17;;;-1:-1:-1;;19694:14:99;;;:24;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;:::o;19650:191::-;19739:18;;;3173:27029;19735:106;;19914:18;;;19936:27;3173:27029;;;;;:::i;:::-;;;;:::i;:::-;19914:49;19936:27;;20068:14;;20209:16;20068:14;;;;19996:303;3173:27029;20068:14;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;20119:14;20260:24;20119:14;3173:27029;20119:14;20161:19;3173:27029;20119:14;;;3173:27029;;;;;;20161:19;3173:27029;;5312:9:102;3173:27029:99;;;;;;;20161:19;20209:16;;3173:27029;;;;;;20260:14;;:24;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;20260:24;3173:27029;20119:14;3173:27029;;;;;;;;;19996:303;;;;;;:::i;:::-;;:10;;:303;;;;;;;3173:27029;19996:303;;;19979:320;19910:1343;19439:1820::o;19996:303::-;;;;20209:16;19996:303;20209:16;19996:303;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;19910:1343;3173:27029;;;;;:::i;:::-;;;;:::i;:::-;20387:48;;20534:17;;;;;20680:16;20534:17;3173:27029;;3773:7:102;3173:27029:99;;;;;;;20534:17;20468:359;20586:14;;;;:24;:14;;-1:-1:-1;;;;;3173:27029:99;;;;;20586:24;20637:14;20788:24;20637:14;20729:24;3173:27029;20637:14;3173:27029;20637:14;;;3173:27029;;;;;;20680:16;;3173:27029;;;;;;20729:24;3173:27029;;6965:14:102;3173:27029:99;;;;;;;20788:24;20637:14;3173:27029;-1:-1:-1;;;20468:359:99;;3173:27029;;;;20468:359;;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20383:870;20937:28;3173:27029;;;;;;;;;:::i;:::-;;;;:::i;:::-;20915:50;20911:342;;20383:870;;3173:27029::o;20911:342::-;21164:16;21070:14;;;;:24;:14;;;;-1:-1:-1;;;;;3173:27029:99;;;;;21070:24;20998:244;21208:19;3173:27029;21121:14;3173:27029;21121:14;;;3173:27029;;;;;;21164:16;;3173:27029;;;;;;21208:19;3173:27029;;6235:9:102;3173:27029:99;;;;;;;21208:19;21121:14;3173:27029;-1:-1:-1;;;20998:244:99;;3173:27029;;;;;20998:244;;;;:::i;19735:106::-;19780:14;;;:50;:14;;;3173:27029;19807:23;3173:27029;;;-1:-1:-1;;;;;3173:27029:99;;;;19807:23;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;8995:587:102;3173:27029:99;9084:29:102;:18;;3173:27029:99;;9716:8;3173:27029;;;;;;;;9084:29:102;;;9129;9136:22;9129:29;:::o;9080:185::-;9179:30;:18;;3173:27029:99;;9716:8;3173:27029;;;;;;;9179:30:102;9175:90;;9279:46;3173:27029:99;9297:18:102;;3173:27029:99;;9716:8;3173:27029;;;;;;;9297:18:102;3173:27029:99;;;;;;;9279:46:102;:15;:46;9275:105;;-1:-1:-1;;;;;9394:66:102;3173:27029:99;9424:26:102;:18;9394:27;;;:::i;:::-;9424:18;3173:27029:99;;9716:8;3173:27029;;;;;;;9424:18:102;:26;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;;9394:66:102;3173:27029:99;;9394:66:102;9424:26;;;9084:29;9476:30;:::o;9390:186::-;9424:26;9537:28;:::o;9275:105::-;9341:28;3173:27029:99;9341:28:102;:::o;9175:90::-;9225:29;9232:22;9225:29;:::o;23589:507:99:-;3173:27029;;;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;23744:18;;:38;;;23589:507;23744:76;;;23589:507;23740:160;;24056:33;3173:27029;;;-1:-1:-1;;;;;;;;;;;3173:27029:99;;23991:47;;;;3173:27029;;;;;;;;23991:47;;;;24056:33;:::i;23740:160::-;23843:46;;;;3173:27029;23843:46;3173:27029;;;;23843:46;23744:76;23787:18;3173:27029;23787:33;:18;;3173:27029;;9716:8;3173:27029;;;;;;;23787:18;:33;3173:27029;;;;23786:34;23744:76;;:38;3173:27029;-1:-1:-1;;;;;3173:27029:99;;23766:16;;23744:38;;3564:207:61;-1:-1:-1;;;;;3642:11:61;3173:27029:99;;3620:10:61;;:34;3616:149;;3564:207;:::o;3616:149::-;3677:77;;;3642:11;3677:77;;3173:27029:99;3620:10:61;3173:27029:99;;;3642:11:61;3677:77;1969:145:62;-1:-1:-1;;;;;2045:8:62;3173:27029:99;2036:4:62;2028:25;2024:84;;1969:145::o;2024:84::-;2076:21;;;;;;;;25394:2900:99;;25545:27;;;:::i;:::-;25661:18;3173:27029;25661:26;:18;;3173:27029;;9716:8;3173:27029;;;;;;;;;25747:35;3173:27029;;;-1:-1:-1;;;;;3173:27029:99;;;25747:35;-1:-1:-1;;;;;3173:27029:99;;25747:35;;25743:117;;25918:32;25919:31;:18;;3173:27029;;9716:8;3173:27029;;;;;;;25918:32;25914:120;;3173:27029;;26268:17;26125:34;26251;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;26125:34;26268:17;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;26251:34;26344:37;:18;;3173:27029;;9716:8;3173:27029;;;;;;;26344:18;3173:27029;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;;;3173:27029:99;;;;26344:37;26495:39;:18;;3173:27029;;9716:8;3173:27029;;;;;;;26495:39;-1:-1:-1;;;;;3173:27029:99;;26656:20;26652:87;;25394:2900;26793:50;:18;:35;:18;;3173:27029;;9716:8;3173:27029;;;;;;;26793:18;:35;3173:27029;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;26793:50;26934:25;:18;;3173:27029;;9716:8;3173:27029;;;;;;;26934:25;5824:16:10;;;;;3173:27029:99;;5824:7:10;3173:27029:99;;;;;;;5824:16:10;27084:18:99;:24;26377:4;27084:18;;3173:27029;;9716:8;3173:27029;;;;;;;27084:18;:24;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;27084:24;3173:27029;27299:55;-1:-1:-1;;;;;3173:27029:99;;27197:22;;-1:-1:-1;;;;;3173:27029:99;;;27197:15;3173:27029;;;;;;;27197:22;3173:27029;;;;;;27299:55;;;:::i;:::-;3173:27029;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;27403:100;;3173:27029;;27403:100;3173:27029;;;;;-1:-1:-1;;;;;;;;;;;27595:47:99;3173:27029;;27595:47;27733:25;;;-1:-1:-1;;;;;3173:27029:99;;;8536:14;3173:27029;;;;;;;27733:25;27729:559;;25394:2900;;;;;;;:::o;27729:559::-;3173:27029;;-1:-1:-1;;;27792:234:99;;;;;3173:27029;;;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;26268:17;;3173:27029;;;;;;-1:-1:-1;;27792:234:99;;;;;;;25765:17;27792:234;;;27729:559;-1:-1:-1;;;;;;;3173:27029:99;-1:-1:-1;;;28119:66:99;28115:163;;27729:559;;;;;;;27792:234;;;;26268:17;27792:234;26268:17;27792:234;;;;;;;:::i;:::-;;;;26652:87;26692:36;26377:4;26692:18;;3173:27029;;9716:8;3173:27029;;;;;;;26692:18;:29;3173:27029;;-1:-1:-1;;;;3173:27029:99;-1:-1:-1;;;3173:27029:99;;;;26692:36;26652:87;;25914:120;-1:-1:-1;;;25765:17:99;25973:50;3173:27029;;;;;-1:-1:-1;15263:27:10;25743:117:99;-1:-1:-1;;;25765:17:99;25805:44;3173:27029;;;;;-1:-1:-1;15263:27:10;24586:208:99;24712:75;24586:208;24755:10;24712:75;;:::i;11510:227:10:-;3173:27029:99;11601:1:10;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;11601:1:10;3173:27029:99;;;23744:18;;:38;;;11510:227:10;23744:76:99;;;11510:227:10;23740:160:99;;-1:-1:-1;;;;;;;;;;;3173:27029:99;;;;;;23991:47;-1:-1:-1;;;;;24056:33:99;11601:1:10;24056:33:99;;;:::i;:::-;3173:27029;11639:27:10;11635:96;;11510:227;:::o;23740:160:99:-;-1:-1:-1;;;11601:1:10;23843:46:99;3173:27029;;;-1:-1:-1;15263:27:10;23744:76:99;23787:18;3173:27029;23787:33;:18;;3173:27029;;9716:8;3173:27029;;;;;;;;23786:34;23744:76;;:38;;11601:1:10;23744:38:99;;1219:160:9;1328:43;1219:160;-1:-1:-1;;;;;3173:27029:99;;;;;;1328:43:9;;;;3173:27029:99;1328:43:9;;;3173:27029:99;;;;;1328:43:9;;;;;;;:::i;:::-;;:::i;3173:27029:99:-;;;;-1:-1:-1;;;;;;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;3482:2130:101;;;;;;;;;;;;3957:7;3173:27029:99;4223:11:101;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;3957:314:101;;;;;;3173:27029:99;3957:314:101;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;3957:314:101;3173:27029:99;;;;;;;;;;;;;;;;;;;;;3957:314:101;;3173:27029:99;3957:314:101;;;;;:::i;:::-;;;;;;;;;;;3482:2130;3173:27029:99;4338:12:101;3173:27029:99;4420:24:101;;;;;;3173:27029:99;;6965:14:102;3173:27029:99;;;;;;;4420:24:101;3173:27029:99;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;4509:17:101;;;;;;;3173:27029:99;;3773:7:102;3173:27029:99;;;;;;;4509:17:101;:29;;;3173:27029:99;;;;;;;;;;;;4509:29:101;4956:12;;;;;;;:::i;:::-;3173:27029:99;;:::i;:::-;5193:10:101;3173:27029:99;;5193:10:101;-1:-1:-1;;;;;3173:27029:99;5142:376:101;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;5142:376:101;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;5142:376:101;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;5142:376:101;;;3173:27029:99;;;5142:376:101;;;3173:27029:99;;;5142:376:101;;;3173:27029:99;;5142:376:101;;3173:27029:99;5142:376:101;;;3173:27029:99;;;5036:569:101;;;;;;;:::i;:::-;;;;;3482:2130::o;3957:314::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3173:27029:99;;-1:-1:-1;3173:27029:99;;;-1:-1:-1;3173:27029:99;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3173:27029:99;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3373:2214:100:-;;;;;;;;;;;3812:7;3173:27029:99;4034:11:100;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;3812:270:100;;;;;;3173:27029:99;3812:270:100;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;3812:270:100;3173:27029:99;;;;;;;;;;;;;;;3812:270:100;;3173:27029:99;3812:270:100;;;;;:::i;:::-;;;;;;;;;;;3373:2214;3173:27029:99;;;;;;;;4149:12:100;3173:27029:99;;;;;;3812:270:100;4470:16;;;;;;4973:12;;;5161:376;4973:12;5161:376;4973:12;5161:376;4973:12;;;;;;5053:527;4973:12;;;5161:376;4973:12;;5161:376;4973:12;;;;;5161:376;4973:12;;;5161:376;4973:12;;:::i;:::-;3173:27029:99;;:::i;:::-;5212:10:100;3173:27029:99;;5212:10:100;;5161:376;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;5161:376:100;-1:-1:-1;;;;;3173:27029:99;;5161:376:100;;3173:27029:99;;5161:376:100;-1:-1:-1;;;;;3173:27029:99;5161:376:100;;;3173:27029:99;;5161:376:100;-1:-1:-1;;;;;3173:27029:99;5161:376:100;;;3173:27029:99;;5161:376:100;3173:27029:99;;5161:376:100;;;3173:27029:99;;5161:376:100;3173:27029:99;;5161:376:100;;;3173:27029:99;;5161:376:100;3173:27029:99;5161:376:100;;3173:27029:99;5161:376:100;;;3173:27029:99;5053:527:100;3173:27029:99;;5053:527:100;;;;;:::i;:::-;;;;3373:2214::o;4488:3::-;4507:37;:19;4532:11;4507:19;;3173:27029:99;4507:19:100;;;;;;;;;;3173:27029:99;;5312:9:102;3173:27029:99;;;;;;;4507:19:100;4532:11;;:::i;:::-;;4507:37;;:::i;:::-;3173:27029:99;4455:13:100;;;;;;;;;;;;;3812:270;;;;;;;:::i;:::-;;;;3173:27029:99;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3386:2218:103:-;;;;;;;;3826:7;3173:27029:99;4048:11:103;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;3826:270:103;;;;;;3173:27029:99;3826:270:103;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;3826:270:103;3173:27029:99;;;;;;;;;;;;;;;3826:270:103;;3173:27029:99;3826:270:103;;;;;:::i;:::-;;;;;;;;;;;3386:2218;3173:27029:99;;;;;;;;4163:12:103;3173:27029:99;;;;;;3826:270:103;4484:16;;;;;;4988:12;;;5178:376;4988:12;5178:376;4988:12;5178:376;4988:12;;;;;;5068:529;4988:12;;;5178:376;4988:12;;5178:376;4988:12;;;;;5178:376;4988:12;;;5178:376;4988:12;;:::i;5178:376::-;3173:27029:99;5178:376:103;;3173:27029:99;5178:376:103;;;3173:27029:99;5068:529:103;3173:27029:99;;5068:529:103;;;;;:::i;4502:3::-;4521:37;:19;4546:11;4521:19;;3173:27029:99;4521:19:103;;;;;;;;;;3173:27029:99;;6235:9:102;3173:27029:99;;;;;;;4546:11:103;;4521:37;;:::i;:::-;3173:27029:99;4469:13:103;;;;;;;;;;;;;3826:270;;;;;;;:::i;:::-;;;;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24898:170::-;24995:66;24898:170;24995:27;;;:::i;:::-;3173:27029;-1:-1:-1;3173:27029:99;25025:8;3173:27029;;25025:26;3173:27029;-1:-1:-1;3173:27029:99;25025:26;3173:27029;;;24995:66;;:::i;12061:460:10:-;;;;;-1:-1:-1;;;;;3173:27029:99;;12146:16:10;12142:87;;12262:32;;;;:::i;:::-;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;12308:27:10;;;16383:31;;;;12160:1;12358:31;;3173:27029:99;;12160:1:10;12358:31;12304:211;-1:-1:-1;;;;;3173:27029:99;;;;;;12410:21:10;12406:109;;12304:211;;;12061:460::o;3173:27029:99:-;;-1:-1:-1;;;;;3173:27029:99;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;:::o;28398:1802::-;;;;28568:149;;:33;3173:27029;28568:11;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;28568:33;28681:25;:18;;3173:27029;;9716:8;3173:27029;;;;;;;28681:25;3173:27029;;-1:-1:-1;;;28568:149:99;;4746:35;28568:149;;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;28568:149;;;;;;;;;;:11;:149;;;28398:1802;28746:9;;;28826:19;28822:120;;29039:18;29000:84;29039:45;:18;:36;28626:35;29039:18;;3173:27029;;9716:8;3173:27029;;;;;;;29039:18;:26;3173:27029;;;;;29039:36;:45;:::i;:::-;28626:35;29000:18;;3173:27029;;9716:8;3173:27029;;;;;;;29000:18;:26;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;29000:84;3173:27029;28626:35;29173:18;;3173:27029;;9716:8;3173:27029;;;;;;;;-1:-1:-1;;;;;29403:57:99;29424:36;3173:27029;28568:149;29403:17;;3173:27029;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;29403:57;3173:27029;;29403:57;;29399:339;;28398:1802;30125:68;-1:-1:-1;;;;;3173:27029:99;29814:24;:18;;3173:27029;;9716:8;3173:27029;;;;;;;;30033:45;-1:-1:-1;;;;;3173:27029:99;;29927:22;;-1:-1:-1;;;;;3173:27029:99;;;27197:15;3173:27029;;;;;;;29927:22;3173:27029;;;;;;30033:45;;;:::i;:::-;3173:27029;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;30125:68;28398:1802::o;29399:339::-;29528:36;29560:4;29528:18;;3173:27029;;9716:8;3173:27029;;;;;;;29528:36;29688:39;:18;;3173:27029;;9716:8;3173:27029;;;;;;;29688:39;29399:339;;28822:120;-1:-1:-1;;;28568:11:99;28868:63;28746:9;3173:27029;;;;;-1:-1:-1;15263:27:10;28568:149:99;;;;;;;;;;;;;;:::i;:::-;;;;14794:662:10;15420:24;14794:662;3173:27029:99;;15420:15:10;3173:27029:99;;;;;;;15420:24:10;3173:27029:99;;-1:-1:-1;;;;;;3173:27029:99;;;14794:662:10:o;8861:795::-;3173:27029:99;-1:-1:-1;3173:27029:99;5824:7:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;-1:-1:-1;3173:27029:99;;;;-1:-1:-1;;;;;3173:27029:99;;9054:86:10;;8861:795;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;9184:18:10;9180:256;;8861:795;9563:21;-1:-1:-1;;;;;3173:27029:99;;9450:16:10;;9446:107;;8861:795;9563:16;;3173:27029:99;;5824:7:10;3173:27029:99;;;;;;;9563:21:10;9600:27;-1:-1:-1;9600:27:10;;8861:795;:::o;9446:107::-;9510:13;;-1:-1:-1;;;;;3173:27029:99;;;9391:9:10;3173:27029:99;;;;;;;9510:13:10;9527:1;3173:27029:99;;;;;9446:107:10;;9180:256;9342:5;;;:::i;:::-;9391:15;;-1:-1:-1;;;;;3173:27029:99;;;9391:9:10;3173:27029:99;;;;;;;9391:15:10;3173:27029:99;;-1:-1:-1;;3173:27029:99;;;9180:256:10;;9054:86;7217:38;;;;;:::i;:::-;9054:86;7212:255;3173:27029:99;-1:-1:-1;;;;;;3173:27029:99;;;;16383:31:10;;;;-1:-1:-1;7321:31:10;;3173:27029:99;;-1:-1:-1;7321:31:10;7271:186;-1:-1:-1;;;;;7398:44:10;;;;-1:-1:-1;7398:44:10;3173:27029:99;7398:44:10;3173:27029:99;;;;-1:-1:-1;7398:44:10;6401:272;;-1:-1:-1;;;;;3173:27029:99;;6539:21:10;;;;:127;;;;6401:272;6520:146;;;;6401:272;:::o;6539:127::-;-1:-1:-1;;;;;3173:27029:99;6577:16:10;;;;-1:-1:-1;3173:27029:99;;;;6577:52:10;;;;6539:127;6577:88;;;;;;6539:127;;;;;;;;;6577:88;3173:27029:99;;;6558:1:10;3173:27029:99;6059:15:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;6558:1:10;3173:27029:99;;;6633:32:10;6577:88;;;;:52;3173:27029:99;;;;;4038:35:10;3173:27029:99;6558:1:10;3173:27029:99;4038:18:10;3173:27029:99;;;6558:1:10;3173:27029:99;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;4038:35:10;3173:27029:99;;6577:52:10;;;;;8370:720:9;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;;9033:40:9;;;;-1:-1:-1;9033:40:9;3173:27029:99;9033:40:9;3173:27029:99;;-1:-1:-1;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;3173:27029:99;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;-1:-1:-1;;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3173:27029:99;;;;;;-1:-1:-1;;;;;;3173:27029:99;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3173:27029:99;;;;;;-1:-1:-1;;;3173:27029:99;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;3173:27029:99;;;-1:-1:-1;;;;;3173:27029:99;;;;;;;;;;;-1:-1:-1;3173:27029:99;;;;;;;;;;;;;;21526:1311;;22562:1;21526:1311;3173:27029;22536:27;21526:1311;;21917:432;22745:85;21526:1311;21917:432;21526:1311;21917:432;-1:-1:-1;;;;;21526:1311:99;;;;;21917:432;22442:8;21526:1311;21917:432;3173:27029;22023:14;3173:27029;;;;;;;;22023:14;;3173:27029;;;;;;;22267:71;3173:27029;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;22267:71;3173:27029;22023:14;22267:71;;3173:27029;;22267:71;;;3173:27029;21917:432;3173:27029;;:::i;:::-;-1:-1:-1;;;;;3173:27029:99;;;;;;21917:432;3173:27029;;22023:14;21917:432;;3173:27029;;21917:432;3173:27029;;;21917:432;;3173:27029;;21917:432;3173:27029;21917:432;;;3173:27029;-1:-1:-1;;;;;3173:27029:99;21917:432;;;3173:27029;;21917:432;3173:27029;21917:432;;;3173:27029;;;21917:432;;;3173:27029;;21917:432;;3957:314:101;21917:432:99;;;;:::i;:::-;;;;3173:27029;21896:18;;3173:27029;;9716:8;3173:27029;;;;;;;21896:18;3173:27029;:::i;:::-;22442:8;:::i;:::-;3173:27029;22536:27;3173:27029;;22536:27;3173:27029;22632:22;;;-1:-1:-1;;;;;3173:27029:99;;;27197:15;3173:27029;;;;;;;22632:22;3173:27029;;;;;;22800:4;22776:10;;22745:85;;:::i;21526:1311::-;;3173:27029;21526:1311;3173:27029;22536:27;21526:1311;;21917:432;22745:85;21526:1311;21917:432;21526:1311;21917:432;-1:-1:-1;;;;;21526:1311:99;;;;;21917:432;22442:8;21526:1311;21917:432;3173:27029;22023:14;3173:27029;;;;;;;21917:432;;;;;;;:::i;21526:1311::-;;22562:1;21526:1311;3173:27029;22536:27;21526:1311;;21917:432;22745:85;21526:1311;21917:432;21526:1311;21917:432;-1:-1:-1;;;;;21526:1311:99;;;;;21917:432;22442:8;21526:1311;21917:432;3173:27029;22023:14;3173:27029;;;;;;;21917:432;;4776:28:103;21917:432:99;;;;:::i;9978:327:10:-;-1:-1:-1;;;;;3173:27029:99;;10045:16:10;10041:87;;-1:-1:-1;;;;;10161:32:10;;;;:::i;:::-;3173:27029:99;10203:96:10;;9978:327::o;10203:96::-;10257:31;;;10059:1;10257:31;10059:1;10257:31;3173:27029:99;;10059:1:10;10257:31;1618:188:9;;;;-1:-1:-1;;;;;1745:53:9;1618:188;3173:27029:99;;;;;;;1745:53:9;;;;3173:27029:99;1745:53:9;;;3173:27029:99;;;;;;;;;;;1745:53:9;;;;;;:::i",
    "linkReferences": {
      "src/libraries/Helpers.sol": {
        "Helpers": [
          { "start": 6188, "length": 20 },
          { "start": 10751, "length": 20 },
          { "start": 18551, "length": 20 },
          { "start": 19461, "length": 20 },
          { "start": 20259, "length": 20 }
        ]
      },
      "src/libraries/LockupMath.sol": { "LockupMath": [{ "start": 16108, "length": 20 }] }
    },
    "immutableReferences": { "15517": [{ "start": 17026, "length": 32 }] }
  },
  "methodIdentifiers": {
    "aggregateAmount(address)": "ec01da3b",
    "allowToHook(address)": "406887cb",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batch(bytes[])": "1e897afb",
    "burn(uint256)": "42966c68",
    "calculateMinFeeWei(uint256)": "cca138e5",
    "cancel(uint256)": "40e58ee5",
    "cancelMultiple(uint256[])": "8659c270",
    "comptroller()": "5fe3b567",
    "createWithDurationsLD((address,address,uint128,address,bool,bool,string),(uint128,uint64,uint40)[])": "c9ad007c",
    "createWithDurationsLL((address,address,uint128,address,bool,bool,string),(uint128,uint128),(uint40,uint40))": "b8856d89",
    "createWithDurationsLT((address,address,uint128,address,bool,bool,string),(uint128,uint40)[])": "7ee44729",
    "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])": "7aab211a",
    "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint128),uint40)": "74d213e5",
    "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])": "9d93ddd3",
    "getApproved(uint256)": "081812fc",
    "getCliffTime(uint256)": "780a82c8",
    "getDepositedAmount(uint256)": "a80fc071",
    "getEndTime(uint256)": "9067b677",
    "getLockupModel(uint256)": "e6c417eb",
    "getRecipient(uint256)": "6d0cee75",
    "getRefundedAmount(uint256)": "d4dbd20b",
    "getSegments(uint256)": "b637b865",
    "getSender(uint256)": "b971302a",
    "getStartTime(uint256)": "bc2be1be",
    "getTranches(uint256)": "7f5799f9",
    "getUnderlyingToken(uint256)": "a4775772",
    "getUnlockAmounts(uint256)": "df2a848c",
    "getWithdrawnAmount(uint256)": "d511609f",
    "isAllowedToHook(address)": "303acc85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isCancelable(uint256)": "4857501f",
    "isCold(uint256)": "8f69b993",
    "isDepleted(uint256)": "425d30dd",
    "isStream(uint256)": "b8a3be66",
    "isTransferable(uint256)": "b2564569",
    "isWarm(uint256)": "1c1cdd4c",
    "name()": "06fdde03",
    "nativeToken()": "e1758bd8",
    "nextStreamId()": "1e99d569",
    "nftDescriptor()": "44267570",
    "ownerOf(uint256)": "6352211e",
    "recover(address,address)": "648bf774",
    "refundableAmountOf(uint256)": "1400ecec",
    "renounce(uint256)": "7de6b1db",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setComptroller(address)": "8bad38dd",
    "setNFTDescriptor(address)": "7cad6cd1",
    "setNativeToken(address)": "6da1e102",
    "statusOf(uint256)": "ad35efd4",
    "streamedAmountOf(uint256)": "4869e12d",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFeesToComptroller()": "78f82ce7",
    "transferFrom(address,address,uint256)": "23b872dd",
    "wasCanceled(uint256)": "f590c176",
    "withdraw(uint256,address,uint128)": "fdd46d60",
    "withdrawMax(uint256,address)": "ea5ead19",
    "withdrawMaxAndTransfer(uint256,address)": "c156a11d",
    "withdrawMultiple(uint256[],uint128[])": "4cc55e11",
    "withdrawableAmountOf(uint256)": "d975dfed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialComptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialNFTDescriptor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"comptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Comptrollerable_CallerNotComptroller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"previousComptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newComptroller\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"minimalInterfaceId\",\"type\":\"bytes4\"}],\"name\":\"Comptrollerable_UnsupportedInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Lockup.Model\",\"name\":\"actualLockupModel\",\"type\":\"uint8\"},{\"internalType\":\"enum Lockup.Model\",\"name\":\"expectedLockupModel\",\"type\":\"uint8\"}],\"name\":\"SablierLockupState_NotExpectedModel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupState_Null\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierLockup_AllowToHookUnsupportedInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFeeWei\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_InsufficientFeePayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierLockup_InvalidHookSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"SablierLockup_NativeTokenAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_NotTransferable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"name\":\"SablierLockup_Overdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_StreamCanceled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_StreamDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_StreamNotCancelable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_StreamNotDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_StreamSettled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SablierLockup_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_WithdrawAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamIdsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountsCount\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_WithdrawArrayCountsNotEqual\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockup_WithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SablierLockup_WithdrawalAddressNotRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"AllowToHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"senderAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"recipientAmount\",\"type\":\"uint128\"}],\"name\":\"CancelLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"name\":\"CreateLockupDynamicStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"}],\"name\":\"CreateLockupLinearStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"name\":\"CreateLockupTranchedStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"InvalidStreamInCancelMultiple\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"InvalidWithdrawalInWithdrawMultiple\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"RenounceLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISablierComptroller\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISablierComptroller\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"SetComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"oldNFTDescriptor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"SetNFTDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TransferFeesToComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"WithdrawFromLockupStream\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"aggregateAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"allowToHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"calculateMinFeeWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minFeeWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultiple\",\"outputs\":[{\"internalType\":\"uint128[]\",\"name\":\"refundedAmounts\",\"type\":\"uint128[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ISablierComptroller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDuration[]\",\"name\":\"segmentsWithDuration\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"}],\"name\":\"createWithDurationsLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.TrancheWithDuration[]\",\"name\":\"tranchesWithDuration\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"}],\"name\":\"createWithTimestampsLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getCliffTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getDepositedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"depositedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getEndTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"endTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getLockupModel\",\"outputs\":[{\"internalType\":\"enum Lockup.Model\",\"name\":\"lockupModel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRefundedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSegments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTranches\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getUnlockAmounts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawnAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isAllowedToHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCancelable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isDepleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isWarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDescriptor\",\"outputs\":[{\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"renounce\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierComptroller\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"setComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"setNFTDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNativeToken\",\"type\":\"address\"}],\"name\":\"setNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum Lockup.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"streamedAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"streamedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeesToComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"wasCanceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"withdrawMaxAndTransfer\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"withdrawMultiple\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"withdrawableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"params\":{\"comptroller\":\"The address of the current comptroller.\",\"recipient\":\"The address of the recipient contract put on the allowlist.\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"params\":{\"recipient\":\"The address of the stream's recipient.\",\"recipientAmount\":\"The amount of tokens left for the stream's recipient to withdraw, denoted in units of the token's decimals.\",\"sender\":\"The address of the stream's sender.\",\"senderAmount\":\"The amount of tokens refunded to the stream's sender, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream.\",\"token\":\"The contract address of the ERC-20 token that has been distributed.\"}},\"CreateLockupDynamicStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])\":{\"params\":{\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"segments\":\"The segments the protocol uses to compose the dynamic distribution function.\",\"streamId\":\"The ID of the newly created stream.\"}},\"CreateLockupLinearStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),uint40,(uint128,uint128))\":{\"params\":{\"cliffTime\":\"The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.\",\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"streamId\":\"The ID of the newly created stream.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"}},\"CreateLockupTranchedStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])\":{\"params\":{\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"streamId\":\"The ID of the newly created stream.\",\"tranches\":\"The tranches the protocol uses to compose the tranched distribution function.\"}},\"InvalidStreamInCancelMultiple(uint256,bytes)\":{\"params\":{\"revertData\":\"The error data returned by the reverted cancel.\",\"streamId\":\"The ID of the stream that reverted the cancellation.\"}},\"InvalidWithdrawalInWithdrawMultiple(uint256,bytes)\":{\"params\":{\"revertData\":\"The error data returned by the reverted withdraw.\",\"streamId\":\"The ID of the stream that reverted the withdrawal.\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RenounceLockupStream(uint256)\":{\"params\":{\"streamId\":\"The ID of the stream.\"}},\"SetNFTDescriptor(address,address,address)\":{\"params\":{\"comptroller\":\"The address of the current comptroller.\",\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\",\"oldNFTDescriptor\":\"The address of the old NFT descriptor contract.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream.\",\"to\":\"The address that has received the withdrawn tokens.\",\"token\":\"The contract address of the ERC-20 token that has been withdrawn.\"}}},\"kind\":\"dev\",\"methods\":{\"allowToHook(address)\":{\"details\":\"Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the comptroller contract. - `recipient` must implement {ISablierLockupRecipient}.\",\"params\":{\"recipient\":\"The address of the contract to allow for hooks.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batch(bytes[])\":{\"details\":\"Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.\",\"params\":{\"calls\":\"An array of inputs for each call.\"},\"returns\":{\"results\":\"An array of results from each call. Empty when the calls do not return anything.\"}},\"burn(uint256)\":{\"details\":\"Emits a {Transfer} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.\",\"params\":{\"streamId\":\"The ID of the stream NFT to burn.\"}},\"calculateMinFeeWei(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"cancel(uint256)\":{\"details\":\"Emits a {Transfer}, {CancelLockupStream} and {MetadataUpdate} event. Notes: - If there any tokens left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - If the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.\",\"params\":{\"streamId\":\"The ID of the stream to cancel.\"},\"returns\":{\"refundedAmount\":\"The amount refunded to the sender, denoted in units of the token's decimals.\"}},\"cancelMultiple(uint256[])\":{\"details\":\"Emits multiple {Transfer}, {CancelLockupStream} and {MetadataUpdate} events. For each reverted cancellation, it emits an {InvalidStreamInCancelMultiple} event. Notes: - This function as a whole will not revert if one or more cancellations revert. A zero amount is returned for reverted streams. - Refer to the notes and requirements from {cancel}.\",\"params\":{\"streamIds\":\"The IDs of the streams to cancel.\"},\"returns\":{\"refundedAmounts\":\"The amounts refunded to the sender, denoted in units of the token's decimals.\"}},\"constructor\":{\"params\":{\"initialComptroller\":\"The address of the initial comptroller contract.\",\"initialNFTDescriptor\":\"The address of the NFT descriptor contract.\"}},\"createWithDurationsLD((address,address,uint128,address,bool,bool,string),(uint128,uint64,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLD} must be met for the calculated parameters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"segmentsWithDuration\":\"Segments with durations used to compose the dynamic distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithDurationsLL((address,address,uint128,address,bool,bool,string),(uint128,uint128),(uint40,uint40))\":{\"details\":\"Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLL} must be met for the calculated parameters.\",\"params\":{\"durations\":\"Struct encapsulating (i) cliff period duration and (ii) total stream duration, both in seconds.\",\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithDurationsLT((address,address,uint128,address,bool,bool,string),(uint128,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLT} must be met for the calculated parameters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"tranchesWithDuration\":\"Tranches with durations used to compose the tranched distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Notes: - As long as the segment timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than the first segment's timestamp. - `segments` must have at least one segment. - The segment timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last segment's timestamp. - The sum of the segment amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"segments\":\"Segments used to compose the dynamic distribution function.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint128),uint40)\":{\"details\":\"Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Notes: - A cliff time of zero means there is no cliff. - As long as the times are ordered, it is not an error for the start or the cliff time to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than `params.timestamps.end`. - If set, `cliffTime` must be greater than `params.timestamps.start` and less than `params.timestamps.end`. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - The sum of `params.unlockAmounts.start` and `params.unlockAmounts.cliff` must be less than or equal to deposit amount. - If `params.timestamps.cliff` not set, the `params.unlockAmounts.cliff` must be zero. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"cliffTime\":\"The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.\",\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than the first tranche's timestamp. - `tranches` must have at least one tranche. - The tranche timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last tranche's timestamp. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {Lockup} type.\",\"tranches\":\"Tranches used to compose the tranched distribution function.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCliffTime(uint256)\":{\"details\":\"Reverts if `streamId` references either a null stream or a non-LL stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getDepositedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getEndTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getLockupModel(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRecipient(uint256)\":{\"details\":\"Reverts if the NFT has been burned.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRefundedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSegments(uint256)\":{\"details\":\"Reverts if `streamId` references either a null stream or a non-LD stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"segments\":\"See the documentation in {LockupDynamic} type.\"}},\"getSender(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getStartTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getTranches(uint256)\":{\"details\":\"Reverts if `streamId` references either a null stream or a non-LT stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"tranches\":\"See the documentation in {LockupTranched} type.\"}},\"getUnderlyingToken(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getUnlockAmounts(uint256)\":{\"details\":\"Reverts if `streamId` references either a null stream or a non-LL stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"unlockAmounts\":\"See the documentation in {LockupLinear} type.\"}},\"getWithdrawnAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isAllowedToHook(address)\":{\"details\":\"See {ISablierLockupRecipient} for more information.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isCancelable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isCold(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isDepleted(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isStream(uint256)\":{\"details\":\"Does not revert if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isTransferable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isWarm(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"recover(address,address)\":{\"details\":\"Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the comptroller contract. - The surplus amount must be greater than zero.\",\"params\":{\"to\":\"The address to send the surplus amount.\",\"token\":\"The contract address of the ERC-20 token to recover for.\"}},\"refundableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"renounce(uint256)\":{\"details\":\"Emits a {RenounceLockupStream} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.\",\"params\":{\"streamId\":\"The ID of the stream to renounce.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setComptroller(address)\":{\"details\":\"Emits a {SetComptroller} event. Requirements: - `msg.sender` must be the current comptroller. - The new comptroller must return `true` from {supportsInterface} with the comptroller's minimal interface ID which is defined as the XOR of the following function selectors: 1. {calculateMinFeeWeiFor} 2. {convertUSDFeeToWei} 3. {execute} 4. {getMinFeeUSDFor}\",\"params\":{\"newComptroller\":\"The address of the new comptroller contract.\"}},\"setNFTDescriptor(address)\":{\"details\":\"Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the comptroller contract.\",\"params\":{\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\"}},\"setNativeToken(address)\":{\"details\":\"For more information, see the documentation for {nativeToken}. Notes: - If `newNativeToken` is zero address, the function does not revert. Requirements: - `msg.sender` must be the comptroller contract. - The current native token must be zero address.\",\"params\":{\"newNativeToken\":\"The address of the native token.\"}},\"statusOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"streamedAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFeesToComptroller()\":{\"details\":\"Emits a {TransferFeesToComptroller} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"wasCanceled(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"withdraw(uint256,address,uint128)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - If `msg.sender` is not the recipient and the address is on the allowlist, this function will invoke a hook on the recipient. - The minimum fee in wei is calculated for the stream's sender using the {SablierComptroller} contract. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party. - `msg.value` must be greater than or equal to the minimum fee in wei for the stream's sender.\",\"params\":{\"amount\":\"The amount to withdraw, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"}},\"withdrawMax(uint256,address)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.\",\"params\":{\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the token's decimals.\"}},\"withdrawMaxAndTransfer(uint256,address)\":{\"details\":\"Emits a {WithdrawFromLockupStream}, {Transfer} and {MetadataUpdate} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be either the NFT owner or an approved third party. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.\",\"params\":{\"newRecipient\":\"The address of the new owner of the stream NFT.\",\"streamId\":\"The ID of the stream NFT to transfer.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the token's decimals.\"}},\"withdrawMultiple(uint256[],uint128[])\":{\"details\":\"Emits multiple {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} events. For each reverting withdrawal, it emits an {InvalidWithdrawalInWithdrawMultiple} event. Notes: - This function as a whole will not revert if one or more withdrawals revert. - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. - Refer to the notes and requirements from {withdraw}. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`.\",\"params\":{\"amounts\":\"The amounts to withdraw, denoted in units of the token's decimals.\",\"streamIds\":\"The IDs of the streams to withdraw from.\"}},\"withdrawableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}}},\"title\":\"SablierLockup\",\"version\":1},\"userdoc\":{\"errors\":{\"Comptrollerable_CallerNotComptroller(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the comptroller.\"}],\"Comptrollerable_UnsupportedInterfaceId(address,address,bytes4)\":[{\"notice\":\"Thrown when the new comptroller does not support the minimal interface ID from the previous comptroller.\"}],\"DelegateCall()\":[{\"notice\":\"Thrown when trying to delegate call to a function that disallows delegate calls.\"}],\"SablierLockupState_NotExpectedModel(uint8,uint8)\":[{\"notice\":\"Thrown when a function is called on a stream that does not use the expected Lockup model.\"}],\"SablierLockupState_Null(uint256)\":[{\"notice\":\"Thrown when the ID references a null stream.\"}],\"SablierLockup_AllowToHookUnsupportedInterface(address)\":[{\"notice\":\"Thrown when trying to allow to hook a contract that doesn't implement the interface correctly.\"}],\"SablierLockup_InsufficientFeePayment(uint256,uint256)\":[{\"notice\":\"Thrown when trying to withdraw with a fee amount less than the minimum fee.\"}],\"SablierLockup_InvalidHookSelector(address)\":[{\"notice\":\"Thrown when the hook does not return the correct selector.\"}],\"SablierLockup_NativeTokenAlreadySet(address)\":[{\"notice\":\"Thrown when trying to set the native token address when it is already set.\"}],\"SablierLockup_NotTransferable(uint256)\":[{\"notice\":\"Thrown when trying to transfer Stream NFT when transferability is disabled.\"}],\"SablierLockup_Overdraw(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to withdraw an amount greater than the withdrawable amount.\"}],\"SablierLockup_StreamCanceled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a canceled stream.\"}],\"SablierLockup_StreamDepleted(uint256)\":[{\"notice\":\"Thrown when trying to cancel, renounce, or withdraw from a depleted stream.\"}],\"SablierLockup_StreamNotCancelable(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a stream that is not cancelable.\"}],\"SablierLockup_StreamNotDepleted(uint256)\":[{\"notice\":\"Thrown when trying to burn a stream that is not depleted.\"}],\"SablierLockup_StreamSettled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a settled stream.\"}],\"SablierLockup_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"SablierLockup_WithdrawAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to withdraw zero tokens from a stream.\"}],\"SablierLockup_WithdrawArrayCountsNotEqual(uint256,uint256)\":[{\"notice\":\"Thrown when trying to withdraw from multiple streams and the number of stream IDs does not match the number of withdraw amounts.\"}],\"SablierLockup_WithdrawToZeroAddress(uint256)\":[{\"notice\":\"Thrown when trying to withdraw to the zero address.\"}],\"SablierLockup_WithdrawalAddressNotRecipient(uint256,address,address)\":[{\"notice\":\"Thrown when trying to withdraw to an address other than the recipient's.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"notice\":\"Emitted when the comptroller allows a new recipient contract to hook to Sablier.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"notice\":\"Emitted when a stream is canceled.\"},\"CreateLockupDynamicStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])\":{\"notice\":\"Emitted when an LD stream is created.\"},\"CreateLockupLinearStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),uint40,(uint128,uint128))\":{\"notice\":\"Emitted when an LL stream is created.\"},\"CreateLockupTranchedStream(uint256,(address,address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])\":{\"notice\":\"Emitted when an LT stream is created.\"},\"InvalidStreamInCancelMultiple(uint256,bytes)\":{\"notice\":\"Emitted when canceling multiple streams and one particular cancellation reverts.\"},\"InvalidWithdrawalInWithdrawMultiple(uint256,bytes)\":{\"notice\":\"Emitted when withdrawing from multiple streams and one particular withdrawal reverts.\"},\"RenounceLockupStream(uint256)\":{\"notice\":\"Emitted when a sender gives up the right to cancel a stream.\"},\"SetComptroller(address,address)\":{\"notice\":\"Emitted when the comptroller address is set by the admin.\"},\"SetNFTDescriptor(address,address,address)\":{\"notice\":\"Emitted when the comptroller sets a new NFT descriptor contract.\"},\"TransferFeesToComptroller(address,uint256)\":{\"notice\":\"Emitted when the fees are transferred to the comptroller contract.\"},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"notice\":\"Emitted when tokens are withdrawn from a stream.\"}},\"kind\":\"user\",\"methods\":{\"aggregateAmount(address)\":{\"notice\":\"Retrieves the aggregate amount across all streams, denoted in units of the token's decimals.\"},\"allowToHook(address)\":{\"notice\":\"Allows a recipient contract to hook to Sablier when a stream is canceled or when tokens are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts.\"},\"batch(bytes[])\":{\"notice\":\"Allows batched calls to self, i.e., `this` contract.\"},\"burn(uint256)\":{\"notice\":\"Burns the NFT associated with the stream.\"},\"calculateMinFeeWei(uint256)\":{\"notice\":\"Calculates the minimum fee in wei required to withdraw from the given stream ID.\"},\"cancel(uint256)\":{\"notice\":\"Cancels the stream and refunds any remaining tokens to the sender.\"},\"cancelMultiple(uint256[])\":{\"notice\":\"Cancels multiple streams and refunds any remaining tokens to the sender.\"},\"comptroller()\":{\"notice\":\"Retrieves the address of the comptroller contract.\"},\"createWithDurationsLD((address,address,uint128,address,bool,bool,string),(uint128,uint64,uint40)[])\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The segment timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithDurationsLL((address,address,uint128,address,bool,bool,string),(uint128,uint128),(uint40,uint40))\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and `durations.total`. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithDurationsLT((address,address,uint128,address,bool,bool,string),(uint128,uint40)[])\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])\":{\"notice\":\"Creates a stream with the provided segment timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint128),uint40)\":{\"notice\":\"Creates a stream with the provided start time and end time. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])\":{\"notice\":\"Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"getCliffTime(uint256)\":{\"notice\":\"Retrieves the stream's cliff time, which is a Unix timestamp. A value of zero means there is no cliff.\"},\"getDepositedAmount(uint256)\":{\"notice\":\"Retrieves the amount deposited in the stream, denoted in units of the token's decimals.\"},\"getEndTime(uint256)\":{\"notice\":\"Retrieves the stream's end time, which is a Unix timestamp.\"},\"getLockupModel(uint256)\":{\"notice\":\"Retrieves the distribution models used to create the stream.\"},\"getRecipient(uint256)\":{\"notice\":\"Retrieves the stream's recipient.\"},\"getRefundedAmount(uint256)\":{\"notice\":\"Retrieves the amount refunded to the sender after a cancellation, denoted in units of the token's decimals. This amount is always zero unless the stream was canceled.\"},\"getSegments(uint256)\":{\"notice\":\"Retrieves the segments used to compose the dynamic distribution function.\"},\"getSender(uint256)\":{\"notice\":\"Retrieves the stream's sender.\"},\"getStartTime(uint256)\":{\"notice\":\"Retrieves the stream's start time, which is a Unix timestamp.\"},\"getTranches(uint256)\":{\"notice\":\"Retrieves the tranches used to compose the tranched distribution function.\"},\"getUnderlyingToken(uint256)\":{\"notice\":\"Retrieves the address of the underlying ERC-20 token being distributed.\"},\"getUnlockAmounts(uint256)\":{\"notice\":\"Retrieves the unlock amounts used to compose the linear distribution function.\"},\"getWithdrawnAmount(uint256)\":{\"notice\":\"Retrieves the amount withdrawn from the stream, denoted in units of the token's decimals.\"},\"isAllowedToHook(address)\":{\"notice\":\"Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when tokens are withdrawn.\"},\"isCancelable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`.\"},\"isCold(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted.\"},\"isDepleted(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is depleted.\"},\"isStream(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream exists.\"},\"isTransferable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream NFT can be transferred.\"},\"isWarm(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming.\"},\"nativeToken()\":{\"notice\":\"Retrieves the address of the ERC-20 interface of the native token, if it exists.\"},\"nextStreamId()\":{\"notice\":\"Counter for stream IDs, used in the create functions.\"},\"nftDescriptor()\":{\"notice\":\"Contract that generates the non-fungible token URI.\"},\"recover(address,address)\":{\"notice\":\"Recover the surplus amount of tokens.\"},\"refundableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the token's decimals.\"},\"renounce(uint256)\":{\"notice\":\"Removes the right of the stream's sender to cancel the stream.\"},\"setComptroller(address)\":{\"notice\":\"Sets the comptroller to a new address.\"},\"setNFTDescriptor(address)\":{\"notice\":\"Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs.\"},\"setNativeToken(address)\":{\"notice\":\"Sets the native token address. Once set, it cannot be changed.\"},\"statusOf(uint256)\":{\"notice\":\"Retrieves the stream's status.\"},\"streamedAmountOf(uint256)\":{\"notice\":\"Calculates the amount streamed to the recipient, denoted in units of the token's decimals.\"},\"transferFeesToComptroller()\":{\"notice\":\"Transfers the fees to the comptroller contract.\"},\"wasCanceled(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream was canceled.\"},\"withdraw(uint256,address,uint128)\":{\"notice\":\"Withdraws the provided amount of tokens from the stream to the `to` address.\"},\"withdrawMax(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the provided address `to`.\"},\"withdrawMaxAndTransfer(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`.\"},\"withdrawMultiple(uint256[],uint128[])\":{\"notice\":\"Withdraws tokens from streams to the recipient of each stream.\"},\"withdrawableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the recipient can withdraw from the stream, denoted in units of the token's decimals.\"}},\"notice\":\"See the documentation in {ISablierLockup}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierLockup.sol\":\"SablierLockup\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@sablier/=node_modules/@sablier/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05\",\"dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42\"]},\"node_modules/@prb/math/src/SD59x18.sol\":{\"keccak256\":\"0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be\",\"dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/casting/Uint128.sol\":{\"keccak256\":\"0x2f0583df2d60ba24e4b6f33da2f6cbff6e3c9bed4b8b5a61c3d119779c722b3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ce4388be9b62b22a2ec342a3188e9207ddc480bbcb7e923289f6d343ca6359\",\"dweb:/ipfs/QmYwCs6WupGi1Per9yjsk7Vca6yAAgdt6DABMVofskiHYx\"]},\"node_modules/@prb/math/src/casting/Uint40.sol\":{\"keccak256\":\"0x650203bec71bcb70948163d173cbff19993ac1556b547a90b2dc293a87d2ccb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://670b7d2cc10b06962370bccc8cf57e9b16b9db078023d0d45c0bce3281d7a579\",\"dweb:/ipfs/QmZMbcuHJMnz3xaiCnHE2r1Xrg4sSGdYovxecdSMbakb3g\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11\",\"dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab\",\"dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca\",\"dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353\",\"dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6\"]},\"node_modules/@prb/math/src/sd21x18/Casting.sol\":{\"keccak256\":\"0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2\",\"dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd\"]},\"node_modules/@prb/math/src/sd21x18/Constants.sol\":{\"keccak256\":\"0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396\",\"dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3\"]},\"node_modules/@prb/math/src/sd21x18/Errors.sol\":{\"keccak256\":\"0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee\",\"dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML\"]},\"node_modules/@prb/math/src/sd21x18/ValueType.sol\":{\"keccak256\":\"0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880\",\"dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d\",\"dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Conversions.sol\":{\"keccak256\":\"0x1c2a91d7bec997ffa764046e504705be4382001835eea47f53909d5baedad481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b11b48183878f5d909a45c6aa462f71a49b8fe0c89c51086f96a0e01b99fe2d5\",\"dweb:/ipfs/QmWj4UF6prH5RuGuxjrpuWBaRXkSt39zkUbiJkzngKigx6\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf\",\"dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462\",\"dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919\",\"dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb\"]},\"node_modules/@prb/math/src/ud21x18/Casting.sol\":{\"keccak256\":\"0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09\",\"dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL\"]},\"node_modules/@prb/math/src/ud21x18/Constants.sol\":{\"keccak256\":\"0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60\",\"dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV\"]},\"node_modules/@prb/math/src/ud21x18/Errors.sol\":{\"keccak256\":\"0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80\",\"dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq\"]},\"node_modules/@prb/math/src/ud21x18/ValueType.sol\":{\"keccak256\":\"0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af\",\"dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae\",\"dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437\",\"dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41\",\"dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780\",\"dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932\",\"dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8\",\"dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6\",\"dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47\",\"dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n\"]},\"node_modules/@sablier/evm-utils/src/Batch.sol\":{\"keccak256\":\"0x489db1a48d7b4324aaf51ac81da759cf5cbe4926dff67aeff1eb355367a8006c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c1211c417550aee8f255f9418ad27b19ef61c652b3d9c25c7b3d4854f0a57cc9\",\"dweb:/ipfs/QmSdqBUCVVSBZwdnSRgcYG8iG7YFwBoQSqqqnt4soNm9qN\"]},\"node_modules/@sablier/evm-utils/src/Comptrollerable.sol\":{\"keccak256\":\"0x091133bb84e9002c202ae434dcf4efd5bdbf3219ea35bc9cbd68376b87dbc89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17743ed45b9adf6216d51a4ac2ccc41bad2de9a82d54abcb4c24cea6de5b2931\",\"dweb:/ipfs/QmSRH9LBY2WbdZJSwXFNK5piELAt9VENhscNKbdBCziTMo\"]},\"node_modules/@sablier/evm-utils/src/NoDelegateCall.sol\":{\"keccak256\":\"0xd03a61ec509ad031decabcc1f4e2cb1846eebbbac78a1b18a039d19f9045fb3d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d47362745c490efa40bf33302542cdb5710cd76cca4fd3f60bc4eb5fc3431bc7\",\"dweb:/ipfs/QmNrjaHQthPJviT4j5DJeQJsEN2cSbW3hPTLqT28mZPhXm\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126\",\"dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IBatch.sol\":{\"keccak256\":\"0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758\",\"dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IComptrollerable.sol\":{\"keccak256\":\"0xdb541c2b423f15c309f6b0cff9b96897694bffb0e3ffeacab1c292e4681e6819\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d116fc3f5333621a07ffbbe79f202195dfcadf247b041a8e63e06dbc11c876cd\",\"dweb:/ipfs/QmPZxgLU4ajfNzYF3CvTDeLzrxVBDk446sNHfULcqwykQh\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IRoleAdminable.sol\":{\"keccak256\":\"0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233\",\"dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi\"]},\"node_modules/@sablier/evm-utils/src/interfaces/ISablierComptroller.sol\":{\"keccak256\":\"0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b\",\"dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM\"]},\"node_modules/@sablier/evm-utils/src/libraries/Errors.sol\":{\"keccak256\":\"0xedb89cb164fc16d162ac9ee5e8e649b10c577a78a76adcd6a2934d16263fd172\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e939b25bd82858dbbe1c25f13a4bdf48c75eecd9f4dda1be26f4dfee573fb16b\",\"dweb:/ipfs/QmTci8g82qV4r6XPQtYvvxMM6Cp5fS8tq37DtA9kVB5WoX\"]},\"src/SablierLockup.sol\":{\"keccak256\":\"0xb1bc12b9e103ca9e73cc855344316e0124533081e995e093929e46e80be6e9e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7bc2a89575bc06443bdffa88e94d61f9bcf1ca701d69284dcf85154429f2e1a7\",\"dweb:/ipfs/QmUdaUs7xEYX5zJCKFu8GSVrGrmtgEGgEggTK7FwztGa3F\"]},\"src/abstracts/SablierLockupDynamic.sol\":{\"keccak256\":\"0x7f12378f1ff94838858229d6314c4e82e0d9a7f590f7f51ff7d10bc56d23d6c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://98b629876ebc0a2a3aa45ebadedf8fd4ca13df0be41475af69c7bdc4df2e60c7\",\"dweb:/ipfs/QmatYVFWB5ggpofvSY11v6SySKYDHi1ZxkCi5KVfoAgDTA\"]},\"src/abstracts/SablierLockupLinear.sol\":{\"keccak256\":\"0x1742c834c3c11dc6361541973bbd6ea3f79dcef9cfdf906b8e60751fad40db01\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c67b2821af62b61877c49df23130cfda37b1e66d989bcbb22fa3f32c4a08c8f\",\"dweb:/ipfs/QmSnPSNUHTEojqpDjYr9nBgzrDYx8pRcrNeP8YKj7dPYV5\"]},\"src/abstracts/SablierLockupState.sol\":{\"keccak256\":\"0x34fa72af49353f45bbb0256077019a3cebceb0125ba743d8f58614dfaa09ee83\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f489000ef44f98b1feb584650b31b2c52018c8586154ceaf682d6b1e5da2f070\",\"dweb:/ipfs/QmZ7NBnTTPHx1uac4LCEdCfNBbTaiM5wjaCUx5LC6ARZwu\"]},\"src/abstracts/SablierLockupTranched.sol\":{\"keccak256\":\"0x4876445b00efd8fda13ca0177110a9cc7f4685b1a3450453b8ed8d5758a00cb2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://17d9cd063ac2f425577cc7886d887cc7f15757b28d9d23d4232f673d709dc47f\",\"dweb:/ipfs/QmYyVqZBLe3AGPGozxxY4gjKd2bLzLBT3aSV2QGccp1jMk\"]},\"src/interfaces/ILockupNFTDescriptor.sol\":{\"keccak256\":\"0x3e1fb86bb2eaedf90a54188e40001f384a299ec4fbf035798e1cea8e16e7879b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5143e01ff4d6cdce5b61111d6902cfa6f8fdc0951977c891ceb13125fdfb41a1\",\"dweb:/ipfs/QmebeHZ4hbVQchqCovZPhTPAQHBownj2JScty7GWsd6tAG\"]},\"src/interfaces/ISablierLockup.sol\":{\"keccak256\":\"0x0105b2d517be121519efb6fd36223e7f16b450992f855567547220402987956b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://37ebc75913fc3dc31815b9c02c27553d44f3ffe7ecc18a8e909b7a0b4dede160\",\"dweb:/ipfs/QmWxCksKdXFny7LWNSMFfwAgGV9BruUhyvqFGB49envDhx\"]},\"src/interfaces/ISablierLockupDynamic.sol\":{\"keccak256\":\"0x05b190c7d54505b098a06bd0b24c6b015ad0160e3e8507e9cb8abf236a023742\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://93f435765070c48f1be87a0807c29f6be83cd5fb345698e0f5f4146830752746\",\"dweb:/ipfs/QmaLCDKVxfpwGNZoUHqpTyoikZCtJD4gBkT3wSMdJGsQbL\"]},\"src/interfaces/ISablierLockupLinear.sol\":{\"keccak256\":\"0x7b7aeb6670af054156b0b8c4abcac5a7acccc825c2187b543bf6ddbe24de42ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://767e38680ea429db63449adb9d34b86af724c5263afe5981471065acad4b5e38\",\"dweb:/ipfs/QmT7S2ALb6ri5sEynCcnVG6poVXVpXmjT4XcyaYtu83pQH\"]},\"src/interfaces/ISablierLockupRecipient.sol\":{\"keccak256\":\"0x0558d4275d70438d53971bc87fe4af0665a3b3c8961bb0c7cad227b2ccb88a08\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6f72657bed39263273478d88b34e49e9c60805bf61468f1313ac8bb5e5c5cf86\",\"dweb:/ipfs/QmezvFtfwuDhqd4c1HedMt7vzfBJ5tJtUevRXnzRyxQEpS\"]},\"src/interfaces/ISablierLockupState.sol\":{\"keccak256\":\"0x04840dedb0ce15cd2991cf1542616abf03d5b0f96829080cbb2a51a82227a460\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://93d9200274cf51fa2c0cc4eb37b1764000e42adb8c3c6f5bbf8c5948e1ac3a0b\",\"dweb:/ipfs/QmbHa5CoFZXCednWtJxtmkoWhVfxk7NtrFijb9vBWqfknT\"]},\"src/interfaces/ISablierLockupTranched.sol\":{\"keccak256\":\"0xbdf18b57cbf3f346e367acc91928e90f83e6db3dfd0253d0e83b0853084c1d2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a71341966f92d1482c19b0d5b8ff88c6e4d0b7084808903bf58784f67d4669be\",\"dweb:/ipfs/QmaPRT6Mmbdi5DvCb4Jybe9EsXpeD3ZiYH3nCTbZoch5VZ\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x9cd38f915d49ebf0616127c350e7002e817196cc6a9995af5d6c3d7658f0c065\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3e86cca751827baa2340c8a2cdbddcf64d9c4b17235b0efa597555f3fad32058\",\"dweb:/ipfs/QmWasWRVXdqYK3XLHKbPnGjYwU3hysokFejpYYiJRi1x7M\"]},\"src/libraries/Helpers.sol\":{\"keccak256\":\"0x490a66b526bf9372f19ec0c2f0d1271c76eb04d97d4fd62bd3150aca1df312ac\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3b8567c632ac53185a8038617a191e4fc0db25e7b5d43bcecb1d01957fbeee4c\",\"dweb:/ipfs/QmZXRP37Nw6jZUJJ1o1PiQwzPgEAvjPf7qcjobuDfhV4DN\"]},\"src/libraries/LockupMath.sol\":{\"keccak256\":\"0x8b1617e7732302663d5fca20f2536f85126c5656de985415fdba166acd5f252a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b0c21f548d497936dcfb5202dd648aa8eaf98cec1230643f3b49a63128f0ba5\",\"dweb:/ipfs/QmNytfeYjqm4f3HsCbq62GmztC1hZw3dRYyoE3wT7oePht\"]},\"src/types/Lockup.sol\":{\"keccak256\":\"0x07febde3b460eea566102a7976718df501d3f5206583906f0144848dda0aea28\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3074795e845a994ebc08c92817e3a7dbd4a24458fbd245cb78ebc3128a809d3d\",\"dweb:/ipfs/QmRqxp6dBgt9hXnwD5HJW7NhcR24s8Yn7HZXykYa7FPkT4\"]},\"src/types/LockupDynamic.sol\":{\"keccak256\":\"0x3c5fbce95af3de27830d7f196a28de9eadae89f2d7dfe1f4cfbe7425d3fa2933\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://23330570fe2520a47669431c11341af72bce4e7e64a6c440a67b93910d24a000\",\"dweb:/ipfs/QmS2DvMeXM3hHZoqsHze1DYRRVGKxqKcPu6s1y1VWbPshu\"]},\"src/types/LockupLinear.sol\":{\"keccak256\":\"0x4392ba8a5f4892b391fb00e5531dd2bbc33ef27d59a053e3f75600d4331b0dcf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d61f0b43ec1e8c5c41d9b275c14fadf6e8757000b27b52c323c0334ab417141\",\"dweb:/ipfs/QmZWhQXjusT6X7AVMupoaLYzxNTgmsJkm32Jk2fuRvn3P4\"]},\"src/types/LockupTranched.sol\":{\"keccak256\":\"0xc2c7c41b7cfcb37dd10a5ab522c784e3236927056e870e111c866da3cbf7cc31\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9abba4dea165619e4ff2d6f46d1ca8e77b21bc7d3c964fc0a3f2fd57a8f57a1c\",\"dweb:/ipfs/Qmd1sLEuDbLJgqE8C8QoTahodbbTmazLFhCeoFvWE6EAJR\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.29+commit.ab55807c" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "initialComptroller", "type": "address" },
            { "internalType": "address", "name": "initialNFTDescriptor", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "comptroller", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "Comptrollerable_CallerNotComptroller"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousComptroller", "type": "address" },
            { "internalType": "address", "name": "newComptroller", "type": "address" },
            { "internalType": "bytes4", "name": "minimalInterfaceId", "type": "bytes4" }
          ],
          "type": "error",
          "name": "Comptrollerable_UnsupportedInterfaceId"
        },
        { "inputs": [], "type": "error", "name": "DelegateCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            { "internalType": "enum Lockup.Model", "name": "actualLockupModel", "type": "uint8" },
            { "internalType": "enum Lockup.Model", "name": "expectedLockupModel", "type": "uint8" }
          ],
          "type": "error",
          "name": "SablierLockupState_NotExpectedModel"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupState_Null"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierLockup_AllowToHookUnsupportedInterface"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "feePaid", "type": "uint256" },
            { "internalType": "uint256", "name": "minFeeWei", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierLockup_InsufficientFeePayment"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierLockup_InvalidHookSelector"
        },
        {
          "inputs": [{ "internalType": "address", "name": "nativeToken", "type": "address" }],
          "type": "error",
          "name": "SablierLockup_NativeTokenAlreadySet"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_NotTransferable"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierLockup_Overdraw"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_StreamCanceled"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_StreamDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_StreamNotCancelable"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_StreamNotDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_StreamSettled"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "SablierLockup_Unauthorized"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_WithdrawAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamIdsCount", "type": "uint256" },
            { "internalType": "uint256", "name": "amountsCount", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierLockup_WithdrawArrayCountsNotEqual"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockup_WithdrawToZeroAddress"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "type": "error",
          "name": "SablierLockup_WithdrawalAddressNotRecipient"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "AllowToHook",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "approved", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_fromTokenId", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "_toTokenId", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "senderAmount", "type": "uint128", "indexed": false },
            { "internalType": "uint128", "name": "recipientAmount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "CancelLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ],
              "indexed": false
            },
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupDynamicStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ],
              "indexed": false
            },
            { "internalType": "uint40", "name": "cliffTime", "type": "uint40", "indexed": false },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupLinearStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ],
              "indexed": false
            },
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupTranchedStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "bytes", "name": "revertData", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "InvalidStreamInCancelMultiple",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "bytes", "name": "revertData", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "InvalidWithdrawalInWithdrawMultiple",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_tokenId", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true }],
          "type": "event",
          "name": "RenounceLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "oldComptroller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ISablierComptroller",
              "name": "newComptroller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetComptroller",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract ILockupNFTDescriptor",
              "name": "oldNFTDescriptor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract ILockupNFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetNFTDescriptor",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            { "internalType": "uint256", "name": "feeAmount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "TransferFeesToComptroller",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "WithdrawFromLockupStream",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregateAmount",
          "outputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowToHook"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "bytes[]", "name": "calls", "type": "bytes[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "batch",
          "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateMinFeeWei",
          "outputs": [{ "internalType": "uint256", "name": "minFeeWei", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancel",
          "outputs": [{ "internalType": "uint128", "name": "refundedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelMultiple",
          "outputs": [{ "internalType": "uint128[]", "name": "refundedAmounts", "type": "uint128[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "comptroller",
          "outputs": [{ "internalType": "contract ISablierComptroller", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupDynamic.SegmentWithDuration[]",
              "name": "segmentsWithDuration",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLD",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            },
            {
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                { "internalType": "uint40", "name": "total", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLL",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupTranched.TrancheWithDuration[]",
              "name": "tranchesWithDuration",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLT",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLD",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            },
            { "internalType": "uint40", "name": "cliffTime", "type": "uint40" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLL",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" }
              ]
            },
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLT",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getCliffTime",
          "outputs": [{ "internalType": "uint40", "name": "cliffTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositedAmount",
          "outputs": [{ "internalType": "uint128", "name": "depositedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getEndTime",
          "outputs": [{ "internalType": "uint40", "name": "endTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getLockupModel",
          "outputs": [{ "internalType": "enum Lockup.Model", "name": "lockupModel", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipient",
          "outputs": [{ "internalType": "address", "name": "recipient", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRefundedAmount",
          "outputs": [{ "internalType": "uint128", "name": "refundedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSegments",
          "outputs": [
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSender",
          "outputs": [{ "internalType": "address", "name": "sender", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getStartTime",
          "outputs": [{ "internalType": "uint40", "name": "startTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTranches",
          "outputs": [
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnlockAmounts",
          "outputs": [
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawnAmount",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isAllowedToHook",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCancelable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCold",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isDepleted",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isStream",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransferable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isWarm",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeToken",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextStreamId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDescriptor",
          "outputs": [{ "internalType": "contract ILockupNFTDescriptor", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recover"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "refundableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "refundableAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounce"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [{ "internalType": "contract ISablierComptroller", "name": "newComptroller", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setComptroller"
        },
        {
          "inputs": [
            { "internalType": "contract ILockupNFTDescriptor", "name": "newNFTDescriptor", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFTDescriptor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newNativeToken", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNativeToken"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "statusOf",
          "outputs": [{ "internalType": "enum Lockup.Status", "name": "status", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "streamedAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "streamedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [{ "internalType": "string", "name": "uri", "type": "string" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "transferFeesToComptroller" },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "wasCanceled",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMax",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "newRecipient", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMaxAndTransfer",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" },
            { "internalType": "uint128[]", "name": "amounts", "type": "uint128[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMultiple"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowToHook(address)": {
            "details": "Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the comptroller contract. - `recipient` must implement {ISablierLockupRecipient}.",
            "params": { "recipient": "The address of the contract to allow for hooks." }
          },
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "batch(bytes[])": {
            "details": "Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.",
            "params": { "calls": "An array of inputs for each call." },
            "returns": { "results": "An array of results from each call. Empty when the calls do not return anything." }
          },
          "burn(uint256)": {
            "details": "Emits a {Transfer} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.",
            "params": { "streamId": "The ID of the stream NFT to burn." }
          },
          "calculateMinFeeWei(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "cancel(uint256)": {
            "details": "Emits a {Transfer}, {CancelLockupStream} and {MetadataUpdate} event. Notes: - If there any tokens left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - If the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.",
            "params": { "streamId": "The ID of the stream to cancel." },
            "returns": {
              "refundedAmount": "The amount refunded to the sender, denoted in units of the token's decimals."
            }
          },
          "cancelMultiple(uint256[])": {
            "details": "Emits multiple {Transfer}, {CancelLockupStream} and {MetadataUpdate} events. For each reverted cancellation, it emits an {InvalidStreamInCancelMultiple} event. Notes: - This function as a whole will not revert if one or more cancellations revert. A zero amount is returned for reverted streams. - Refer to the notes and requirements from {cancel}.",
            "params": { "streamIds": "The IDs of the streams to cancel." },
            "returns": {
              "refundedAmounts": "The amounts refunded to the sender, denoted in units of the token's decimals."
            }
          },
          "constructor": {
            "params": {
              "initialComptroller": "The address of the initial comptroller contract.",
              "initialNFTDescriptor": "The address of the NFT descriptor contract."
            }
          },
          "createWithDurationsLD((address,address,uint128,address,bool,bool,string),(uint128,uint64,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLD} must be met for the calculated parameters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "segmentsWithDuration": "Segments with durations used to compose the dynamic distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithDurationsLL((address,address,uint128,address,bool,bool,string),(uint128,uint128),(uint40,uint40))": {
            "details": "Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLL} must be met for the calculated parameters.",
            "params": {
              "durations": "Struct encapsulating (i) cliff period duration and (ii) total stream duration, both in seconds.",
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "unlockAmounts": "Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithDurationsLT((address,address,uint128,address,bool,bool,string),(uint128,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLT} must be met for the calculated parameters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "tranchesWithDuration": "Tranches with durations used to compose the tranched distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Notes: - As long as the segment timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than the first segment's timestamp. - `segments` must have at least one segment. - The segment timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last segment's timestamp. - The sum of the segment amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "segments": "Segments used to compose the dynamic distribution function."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint128),uint40)": {
            "details": "Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Notes: - A cliff time of zero means there is no cliff. - As long as the times are ordered, it is not an error for the start or the cliff time to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than `params.timestamps.end`. - If set, `cliffTime` must be greater than `params.timestamps.start` and less than `params.timestamps.end`. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - The sum of `params.unlockAmounts.start` and `params.unlockAmounts.cliff` must be less than or equal to deposit amount. - If `params.timestamps.cliff` not set, the `params.unlockAmounts.cliff` must be zero. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "cliffTime": "The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.",
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "unlockAmounts": "Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.depositAmount` must be greater than zero. - `params.timestamps.start` must be greater than zero and less than the first tranche's timestamp. - `tranches` must have at least one tranche. - The tranche timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last tranche's timestamp. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.depositAmount` tokens. - `params.token` must not be the native token. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {Lockup} type.",
              "tranches": "Tranches used to compose the tranched distribution function."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getCliffTime(uint256)": {
            "details": "Reverts if `streamId` references either a null stream or a non-LL stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getDepositedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getEndTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getLockupModel(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRecipient(uint256)": {
            "details": "Reverts if the NFT has been burned.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRefundedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSegments(uint256)": {
            "details": "Reverts if `streamId` references either a null stream or a non-LD stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "segments": "See the documentation in {LockupDynamic} type." }
          },
          "getSender(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getStartTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getTranches(uint256)": {
            "details": "Reverts if `streamId` references either a null stream or a non-LT stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "tranches": "See the documentation in {LockupTranched} type." }
          },
          "getUnderlyingToken(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getUnlockAmounts(uint256)": {
            "details": "Reverts if `streamId` references either a null stream or a non-LL stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "unlockAmounts": "See the documentation in {LockupLinear} type." }
          },
          "getWithdrawnAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isAllowedToHook(address)": { "details": "See {ISablierLockupRecipient} for more information." },
          "isApprovedForAll(address,address)": { "details": "See {IERC721-isApprovedForAll}." },
          "isCancelable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isCold(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isDepleted(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isStream(uint256)": {
            "details": "Does not revert if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isTransferable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isWarm(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "recover(address,address)": {
            "details": "Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the comptroller contract. - The surplus amount must be greater than zero.",
            "params": {
              "to": "The address to send the surplus amount.",
              "token": "The contract address of the ERC-20 token to recover for."
            }
          },
          "refundableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "renounce(uint256)": {
            "details": "Emits a {RenounceLockupStream} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.",
            "params": { "streamId": "The ID of the stream to renounce." }
          },
          "safeTransferFrom(address,address,uint256)": { "details": "See {IERC721-safeTransferFrom}." },
          "safeTransferFrom(address,address,uint256,bytes)": { "details": "See {IERC721-safeTransferFrom}." },
          "setApprovalForAll(address,bool)": { "details": "See {IERC721-setApprovalForAll}." },
          "setComptroller(address)": {
            "details": "Emits a {SetComptroller} event. Requirements: - `msg.sender` must be the current comptroller. - The new comptroller must return `true` from {supportsInterface} with the comptroller's minimal interface ID which is defined as the XOR of the following function selectors: 1. {calculateMinFeeWeiFor} 2. {convertUSDFeeToWei} 3. {execute} 4. {getMinFeeUSDFor}",
            "params": { "newComptroller": "The address of the new comptroller contract." }
          },
          "setNFTDescriptor(address)": {
            "details": "Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the comptroller contract.",
            "params": { "newNFTDescriptor": "The address of the new NFT descriptor contract." }
          },
          "setNativeToken(address)": {
            "details": "For more information, see the documentation for {nativeToken}. Notes: - If `newNativeToken` is zero address, the function does not revert. Requirements: - `msg.sender` must be the comptroller contract. - The current native token must be zero address.",
            "params": { "newNativeToken": "The address of the native token." }
          },
          "statusOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "streamedAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "supportsInterface(bytes4)": { "details": "See {IERC165-supportsInterface}." },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "transferFeesToComptroller()": { "details": "Emits a {TransferFeesToComptroller} event." },
          "transferFrom(address,address,uint256)": { "details": "See {IERC721-transferFrom}." },
          "wasCanceled(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "withdraw(uint256,address,uint128)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - If `msg.sender` is not the recipient and the address is on the allowlist, this function will invoke a hook on the recipient. - The minimum fee in wei is calculated for the stream's sender using the {SablierComptroller} contract. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party. - `msg.value` must be greater than or equal to the minimum fee in wei for the stream's sender.",
            "params": {
              "amount": "The amount to withdraw, denoted in units of the token's decimals.",
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            }
          },
          "withdrawMax(uint256,address)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.",
            "params": {
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the token's decimals." }
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "details": "Emits a {WithdrawFromLockupStream}, {Transfer} and {MetadataUpdate} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be either the NFT owner or an approved third party. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.",
            "params": {
              "newRecipient": "The address of the new owner of the stream NFT.",
              "streamId": "The ID of the stream NFT to transfer."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the token's decimals." }
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "details": "Emits multiple {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} events. For each reverting withdrawal, it emits an {InvalidWithdrawalInWithdrawMultiple} event. Notes: - This function as a whole will not revert if one or more withdrawals revert. - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. - Refer to the notes and requirements from {withdraw}. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`.",
            "params": {
              "amounts": "The amounts to withdraw, denoted in units of the token's decimals.",
              "streamIds": "The IDs of the streams to withdraw from."
            }
          },
          "withdrawableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "aggregateAmount(address)": {
            "notice": "Retrieves the aggregate amount across all streams, denoted in units of the token's decimals."
          },
          "allowToHook(address)": {
            "notice": "Allows a recipient contract to hook to Sablier when a stream is canceled or when tokens are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts."
          },
          "batch(bytes[])": { "notice": "Allows batched calls to self, i.e., `this` contract." },
          "burn(uint256)": { "notice": "Burns the NFT associated with the stream." },
          "calculateMinFeeWei(uint256)": {
            "notice": "Calculates the minimum fee in wei required to withdraw from the given stream ID."
          },
          "cancel(uint256)": { "notice": "Cancels the stream and refunds any remaining tokens to the sender." },
          "cancelMultiple(uint256[])": {
            "notice": "Cancels multiple streams and refunds any remaining tokens to the sender."
          },
          "comptroller()": { "notice": "Retrieves the address of the comptroller contract." },
          "createWithDurationsLD((address,address,uint128,address,bool,bool,string),(uint128,uint64,uint40)[])": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The segment timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithDurationsLL((address,address,uint128,address,bool,bool,string),(uint128,uint128),(uint40,uint40))": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and `durations.total`. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithDurationsLT((address,address,uint128,address,bool,bool,string),(uint128,uint40)[])": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint64,uint40)[])": {
            "notice": "Creates a stream with the provided segment timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint128),uint40)": {
            "notice": "Creates a stream with the provided start time and end time. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string),(uint128,uint40)[])": {
            "notice": "Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "getCliffTime(uint256)": {
            "notice": "Retrieves the stream's cliff time, which is a Unix timestamp. A value of zero means there is no cliff."
          },
          "getDepositedAmount(uint256)": {
            "notice": "Retrieves the amount deposited in the stream, denoted in units of the token's decimals."
          },
          "getEndTime(uint256)": { "notice": "Retrieves the stream's end time, which is a Unix timestamp." },
          "getLockupModel(uint256)": { "notice": "Retrieves the distribution models used to create the stream." },
          "getRecipient(uint256)": { "notice": "Retrieves the stream's recipient." },
          "getRefundedAmount(uint256)": {
            "notice": "Retrieves the amount refunded to the sender after a cancellation, denoted in units of the token's decimals. This amount is always zero unless the stream was canceled."
          },
          "getSegments(uint256)": {
            "notice": "Retrieves the segments used to compose the dynamic distribution function."
          },
          "getSender(uint256)": { "notice": "Retrieves the stream's sender." },
          "getStartTime(uint256)": { "notice": "Retrieves the stream's start time, which is a Unix timestamp." },
          "getTranches(uint256)": {
            "notice": "Retrieves the tranches used to compose the tranched distribution function."
          },
          "getUnderlyingToken(uint256)": {
            "notice": "Retrieves the address of the underlying ERC-20 token being distributed."
          },
          "getUnlockAmounts(uint256)": {
            "notice": "Retrieves the unlock amounts used to compose the linear distribution function."
          },
          "getWithdrawnAmount(uint256)": {
            "notice": "Retrieves the amount withdrawn from the stream, denoted in units of the token's decimals."
          },
          "isAllowedToHook(address)": {
            "notice": "Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when tokens are withdrawn."
          },
          "isCancelable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`."
          },
          "isCold(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted."
          },
          "isDepleted(uint256)": { "notice": "Retrieves a flag indicating whether the stream is depleted." },
          "isStream(uint256)": { "notice": "Retrieves a flag indicating whether the stream exists." },
          "isTransferable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream NFT can be transferred."
          },
          "isWarm(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming."
          },
          "nativeToken()": {
            "notice": "Retrieves the address of the ERC-20 interface of the native token, if it exists."
          },
          "nextStreamId()": { "notice": "Counter for stream IDs, used in the create functions." },
          "nftDescriptor()": { "notice": "Contract that generates the non-fungible token URI." },
          "recover(address,address)": { "notice": "Recover the surplus amount of tokens." },
          "refundableAmountOf(uint256)": {
            "notice": "Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the token's decimals."
          },
          "renounce(uint256)": { "notice": "Removes the right of the stream's sender to cancel the stream." },
          "setComptroller(address)": { "notice": "Sets the comptroller to a new address." },
          "setNFTDescriptor(address)": {
            "notice": "Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs."
          },
          "setNativeToken(address)": { "notice": "Sets the native token address. Once set, it cannot be changed." },
          "statusOf(uint256)": { "notice": "Retrieves the stream's status." },
          "streamedAmountOf(uint256)": {
            "notice": "Calculates the amount streamed to the recipient, denoted in units of the token's decimals."
          },
          "transferFeesToComptroller()": { "notice": "Transfers the fees to the comptroller contract." },
          "wasCanceled(uint256)": { "notice": "Retrieves a flag indicating whether the stream was canceled." },
          "withdraw(uint256,address,uint128)": {
            "notice": "Withdraws the provided amount of tokens from the stream to the `to` address."
          },
          "withdrawMax(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the provided address `to`."
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`."
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "notice": "Withdraws tokens from streams to the recipient of each stream."
          },
          "withdrawableAmountOf(uint256)": {
            "notice": "Calculates the amount that the recipient can withdraw from the stream, denoted in units of the token's decimals."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@arbitrum/=node_modules/@arbitrum/",
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@offchainlabs/=node_modules/@offchainlabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/=node_modules/@prb/",
        "@sablier/=node_modules/@sablier/",
        "@scroll-tech/=node_modules/@scroll-tech/",
        "@zksync/=node_modules/@zksync/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/",
        "solarray/=node_modules/solarray/"
      ],
      "optimizer": { "enabled": true, "runs": 500 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/SablierLockup.sol": "SablierLockup" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957",
        "urls": [
          "bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f",
          "dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a",
        "urls": [
          "bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09",
          "dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
        "urls": [
          "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
          "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
        "keccak256": "0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac",
        "urls": [
          "bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24",
          "dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99",
        "urls": [
          "bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05",
          "dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/SD59x18.sol": {
        "keccak256": "0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461",
        "urls": [
          "bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be",
          "dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/casting/Uint128.sol": {
        "keccak256": "0x2f0583df2d60ba24e4b6f33da2f6cbff6e3c9bed4b8b5a61c3d119779c722b3c",
        "urls": [
          "bzz-raw://f1ce4388be9b62b22a2ec342a3188e9207ddc480bbcb7e923289f6d343ca6359",
          "dweb:/ipfs/QmYwCs6WupGi1Per9yjsk7Vca6yAAgdt6DABMVofskiHYx"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/casting/Uint40.sol": {
        "keccak256": "0x650203bec71bcb70948163d173cbff19993ac1556b547a90b2dc293a87d2ccb6",
        "urls": [
          "bzz-raw://670b7d2cc10b06962370bccc8cf57e9b16b9db078023d0d45c0bce3281d7a579",
          "dweb:/ipfs/QmZMbcuHJMnz3xaiCnHE2r1Xrg4sSGdYovxecdSMbakb3g"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c",
        "urls": [
          "bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11",
          "dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8",
        "urls": [
          "bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab",
          "dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6",
        "urls": [
          "bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca",
          "dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0",
        "urls": [
          "bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353",
          "dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Casting.sol": {
        "keccak256": "0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36",
        "urls": [
          "bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2",
          "dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Constants.sol": {
        "keccak256": "0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4",
        "urls": [
          "bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396",
          "dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Errors.sol": {
        "keccak256": "0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a",
        "urls": [
          "bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee",
          "dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/ValueType.sol": {
        "keccak256": "0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092",
        "urls": [
          "bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880",
          "dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39",
        "urls": [
          "bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d",
          "dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Conversions.sol": {
        "keccak256": "0x1c2a91d7bec997ffa764046e504705be4382001835eea47f53909d5baedad481",
        "urls": [
          "bzz-raw://b11b48183878f5d909a45c6aa462f71a49b8fe0c89c51086f96a0e01b99fe2d5",
          "dweb:/ipfs/QmWj4UF6prH5RuGuxjrpuWBaRXkSt39zkUbiJkzngKigx6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2",
        "urls": [
          "bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf",
          "dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84",
        "urls": [
          "bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462",
          "dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d",
        "urls": [
          "bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919",
          "dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Casting.sol": {
        "keccak256": "0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65",
        "urls": [
          "bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09",
          "dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Constants.sol": {
        "keccak256": "0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601",
        "urls": [
          "bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60",
          "dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Errors.sol": {
        "keccak256": "0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415",
        "urls": [
          "bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80",
          "dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/ValueType.sol": {
        "keccak256": "0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25",
        "urls": [
          "bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af",
          "dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6",
        "urls": [
          "bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae",
          "dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd",
        "urls": [
          "bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437",
          "dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0",
        "urls": [
          "bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41",
          "dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6",
        "urls": [
          "bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780",
          "dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2",
        "urls": [
          "bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932",
          "dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044",
        "urls": [
          "bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8",
          "dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc",
        "urls": [
          "bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6",
          "dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3",
        "urls": [
          "bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47",
          "dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n"
        ],
        "license": "MIT"
      },
      "node_modules/@sablier/evm-utils/src/Batch.sol": {
        "keccak256": "0x489db1a48d7b4324aaf51ac81da759cf5cbe4926dff67aeff1eb355367a8006c",
        "urls": [
          "bzz-raw://c1211c417550aee8f255f9418ad27b19ef61c652b3d9c25c7b3d4854f0a57cc9",
          "dweb:/ipfs/QmSdqBUCVVSBZwdnSRgcYG8iG7YFwBoQSqqqnt4soNm9qN"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/Comptrollerable.sol": {
        "keccak256": "0x091133bb84e9002c202ae434dcf4efd5bdbf3219ea35bc9cbd68376b87dbc89c",
        "urls": [
          "bzz-raw://17743ed45b9adf6216d51a4ac2ccc41bad2de9a82d54abcb4c24cea6de5b2931",
          "dweb:/ipfs/QmSRH9LBY2WbdZJSwXFNK5piELAt9VENhscNKbdBCziTMo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/NoDelegateCall.sol": {
        "keccak256": "0xd03a61ec509ad031decabcc1f4e2cb1846eebbbac78a1b18a039d19f9045fb3d",
        "urls": [
          "bzz-raw://d47362745c490efa40bf33302542cdb5710cd76cca4fd3f60bc4eb5fc3431bc7",
          "dweb:/ipfs/QmNrjaHQthPJviT4j5DJeQJsEN2cSbW3hPTLqT28mZPhXm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IAdminable.sol": {
        "keccak256": "0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26",
        "urls": [
          "bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126",
          "dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IBatch.sol": {
        "keccak256": "0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4",
        "urls": [
          "bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758",
          "dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IComptrollerable.sol": {
        "keccak256": "0xdb541c2b423f15c309f6b0cff9b96897694bffb0e3ffeacab1c292e4681e6819",
        "urls": [
          "bzz-raw://d116fc3f5333621a07ffbbe79f202195dfcadf247b041a8e63e06dbc11c876cd",
          "dweb:/ipfs/QmPZxgLU4ajfNzYF3CvTDeLzrxVBDk446sNHfULcqwykQh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IRoleAdminable.sol": {
        "keccak256": "0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148",
        "urls": [
          "bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233",
          "dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/ISablierComptroller.sol": {
        "keccak256": "0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9",
        "urls": [
          "bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b",
          "dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/libraries/Errors.sol": {
        "keccak256": "0xedb89cb164fc16d162ac9ee5e8e649b10c577a78a76adcd6a2934d16263fd172",
        "urls": [
          "bzz-raw://e939b25bd82858dbbe1c25f13a4bdf48c75eecd9f4dda1be26f4dfee573fb16b",
          "dweb:/ipfs/QmTci8g82qV4r6XPQtYvvxMM6Cp5fS8tq37DtA9kVB5WoX"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/SablierLockup.sol": {
        "keccak256": "0xb1bc12b9e103ca9e73cc855344316e0124533081e995e093929e46e80be6e9e3",
        "urls": [
          "bzz-raw://7bc2a89575bc06443bdffa88e94d61f9bcf1ca701d69284dcf85154429f2e1a7",
          "dweb:/ipfs/QmUdaUs7xEYX5zJCKFu8GSVrGrmtgEGgEggTK7FwztGa3F"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/SablierLockupDynamic.sol": {
        "keccak256": "0x7f12378f1ff94838858229d6314c4e82e0d9a7f590f7f51ff7d10bc56d23d6c3",
        "urls": [
          "bzz-raw://98b629876ebc0a2a3aa45ebadedf8fd4ca13df0be41475af69c7bdc4df2e60c7",
          "dweb:/ipfs/QmatYVFWB5ggpofvSY11v6SySKYDHi1ZxkCi5KVfoAgDTA"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/SablierLockupLinear.sol": {
        "keccak256": "0x1742c834c3c11dc6361541973bbd6ea3f79dcef9cfdf906b8e60751fad40db01",
        "urls": [
          "bzz-raw://2c67b2821af62b61877c49df23130cfda37b1e66d989bcbb22fa3f32c4a08c8f",
          "dweb:/ipfs/QmSnPSNUHTEojqpDjYr9nBgzrDYx8pRcrNeP8YKj7dPYV5"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/SablierLockupState.sol": {
        "keccak256": "0x34fa72af49353f45bbb0256077019a3cebceb0125ba743d8f58614dfaa09ee83",
        "urls": [
          "bzz-raw://f489000ef44f98b1feb584650b31b2c52018c8586154ceaf682d6b1e5da2f070",
          "dweb:/ipfs/QmZ7NBnTTPHx1uac4LCEdCfNBbTaiM5wjaCUx5LC6ARZwu"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/SablierLockupTranched.sol": {
        "keccak256": "0x4876445b00efd8fda13ca0177110a9cc7f4685b1a3450453b8ed8d5758a00cb2",
        "urls": [
          "bzz-raw://17d9cd063ac2f425577cc7886d887cc7f15757b28d9d23d4232f673d709dc47f",
          "dweb:/ipfs/QmYyVqZBLe3AGPGozxxY4gjKd2bLzLBT3aSV2QGccp1jMk"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILockupNFTDescriptor.sol": {
        "keccak256": "0x3e1fb86bb2eaedf90a54188e40001f384a299ec4fbf035798e1cea8e16e7879b",
        "urls": [
          "bzz-raw://5143e01ff4d6cdce5b61111d6902cfa6f8fdc0951977c891ceb13125fdfb41a1",
          "dweb:/ipfs/QmebeHZ4hbVQchqCovZPhTPAQHBownj2JScty7GWsd6tAG"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockup.sol": {
        "keccak256": "0x0105b2d517be121519efb6fd36223e7f16b450992f855567547220402987956b",
        "urls": [
          "bzz-raw://37ebc75913fc3dc31815b9c02c27553d44f3ffe7ecc18a8e909b7a0b4dede160",
          "dweb:/ipfs/QmWxCksKdXFny7LWNSMFfwAgGV9BruUhyvqFGB49envDhx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupDynamic.sol": {
        "keccak256": "0x05b190c7d54505b098a06bd0b24c6b015ad0160e3e8507e9cb8abf236a023742",
        "urls": [
          "bzz-raw://93f435765070c48f1be87a0807c29f6be83cd5fb345698e0f5f4146830752746",
          "dweb:/ipfs/QmaLCDKVxfpwGNZoUHqpTyoikZCtJD4gBkT3wSMdJGsQbL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupLinear.sol": {
        "keccak256": "0x7b7aeb6670af054156b0b8c4abcac5a7acccc825c2187b543bf6ddbe24de42ea",
        "urls": [
          "bzz-raw://767e38680ea429db63449adb9d34b86af724c5263afe5981471065acad4b5e38",
          "dweb:/ipfs/QmT7S2ALb6ri5sEynCcnVG6poVXVpXmjT4XcyaYtu83pQH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupRecipient.sol": {
        "keccak256": "0x0558d4275d70438d53971bc87fe4af0665a3b3c8961bb0c7cad227b2ccb88a08",
        "urls": [
          "bzz-raw://6f72657bed39263273478d88b34e49e9c60805bf61468f1313ac8bb5e5c5cf86",
          "dweb:/ipfs/QmezvFtfwuDhqd4c1HedMt7vzfBJ5tJtUevRXnzRyxQEpS"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupState.sol": {
        "keccak256": "0x04840dedb0ce15cd2991cf1542616abf03d5b0f96829080cbb2a51a82227a460",
        "urls": [
          "bzz-raw://93d9200274cf51fa2c0cc4eb37b1764000e42adb8c3c6f5bbf8c5948e1ac3a0b",
          "dweb:/ipfs/QmbHa5CoFZXCednWtJxtmkoWhVfxk7NtrFijb9vBWqfknT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupTranched.sol": {
        "keccak256": "0xbdf18b57cbf3f346e367acc91928e90f83e6db3dfd0253d0e83b0853084c1d2b",
        "urls": [
          "bzz-raw://a71341966f92d1482c19b0d5b8ff88c6e4d0b7084808903bf58784f67d4669be",
          "dweb:/ipfs/QmaPRT6Mmbdi5DvCb4Jybe9EsXpeD3ZiYH3nCTbZoch5VZ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x9cd38f915d49ebf0616127c350e7002e817196cc6a9995af5d6c3d7658f0c065",
        "urls": [
          "bzz-raw://3e86cca751827baa2340c8a2cdbddcf64d9c4b17235b0efa597555f3fad32058",
          "dweb:/ipfs/QmWasWRVXdqYK3XLHKbPnGjYwU3hysokFejpYYiJRi1x7M"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Helpers.sol": {
        "keccak256": "0x490a66b526bf9372f19ec0c2f0d1271c76eb04d97d4fd62bd3150aca1df312ac",
        "urls": [
          "bzz-raw://3b8567c632ac53185a8038617a191e4fc0db25e7b5d43bcecb1d01957fbeee4c",
          "dweb:/ipfs/QmZXRP37Nw6jZUJJ1o1PiQwzPgEAvjPf7qcjobuDfhV4DN"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/LockupMath.sol": {
        "keccak256": "0x8b1617e7732302663d5fca20f2536f85126c5656de985415fdba166acd5f252a",
        "urls": [
          "bzz-raw://6b0c21f548d497936dcfb5202dd648aa8eaf98cec1230643f3b49a63128f0ba5",
          "dweb:/ipfs/QmNytfeYjqm4f3HsCbq62GmztC1hZw3dRYyoE3wT7oePht"
        ],
        "license": "BUSL-1.1"
      },
      "src/types/Lockup.sol": {
        "keccak256": "0x07febde3b460eea566102a7976718df501d3f5206583906f0144848dda0aea28",
        "urls": [
          "bzz-raw://3074795e845a994ebc08c92817e3a7dbd4a24458fbd245cb78ebc3128a809d3d",
          "dweb:/ipfs/QmRqxp6dBgt9hXnwD5HJW7NhcR24s8Yn7HZXykYa7FPkT4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/LockupDynamic.sol": {
        "keccak256": "0x3c5fbce95af3de27830d7f196a28de9eadae89f2d7dfe1f4cfbe7425d3fa2933",
        "urls": [
          "bzz-raw://23330570fe2520a47669431c11341af72bce4e7e64a6c440a67b93910d24a000",
          "dweb:/ipfs/QmS2DvMeXM3hHZoqsHze1DYRRVGKxqKcPu6s1y1VWbPshu"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/LockupLinear.sol": {
        "keccak256": "0x4392ba8a5f4892b391fb00e5531dd2bbc33ef27d59a053e3f75600d4331b0dcf",
        "urls": [
          "bzz-raw://4d61f0b43ec1e8c5c41d9b275c14fadf6e8757000b27b52c323c0334ab417141",
          "dweb:/ipfs/QmZWhQXjusT6X7AVMupoaLYzxNTgmsJkm32Jk2fuRvn3P4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/LockupTranched.sol": {
        "keccak256": "0xc2c7c41b7cfcb37dd10a5ab522c784e3236927056e870e111c866da3cbf7cc31",
        "urls": [
          "bzz-raw://9abba4dea165619e4ff2d6f46d1ca8e77b21bc7d3c964fc0a3f2fd57a8f57a1c",
          "dweb:/ipfs/Qmd1sLEuDbLJgqE8C8QoTahodbbTmazLFhCeoFvWE6EAJR"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 99
}
