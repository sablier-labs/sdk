{
  "abi": [
    {
      "type": "function",
      "name": "createWithDeltas",
      "inputs": [
        { "name": "lockupDynamic", "type": "address", "internalType": "contract ISablierV2LockupDynamic" },
        { "name": "asset", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct Batch.CreateWithDeltas[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            },
            {
              "name": "segments",
              "type": "tuple[]",
              "internalType": "struct LockupDynamic.SegmentWithDelta[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
                { "name": "delta", "type": "uint40", "internalType": "uint40" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithDurations",
      "inputs": [
        { "name": "lockupLinear", "type": "address", "internalType": "contract ISablierV2LockupLinear" },
        { "name": "asset", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct Batch.CreateWithDurations[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "durations",
              "type": "tuple",
              "internalType": "struct LockupLinear.Durations",
              "components": [
                { "name": "cliff", "type": "uint40", "internalType": "uint40" },
                { "name": "total", "type": "uint40", "internalType": "uint40" }
              ]
            },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithMilestones",
      "inputs": [
        { "name": "lockupDynamic", "type": "address", "internalType": "contract ISablierV2LockupDynamic" },
        { "name": "asset", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct Batch.CreateWithMilestones[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "startTime", "type": "uint40", "internalType": "uint40" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            },
            {
              "name": "segments",
              "type": "tuple[]",
              "internalType": "struct LockupDynamic.Segment[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
                { "name": "milestone", "type": "uint40", "internalType": "uint40" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithRange",
      "inputs": [
        { "name": "lockupLinear", "type": "address", "internalType": "contract ISablierV2LockupLinear" },
        { "name": "asset", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct Batch.CreateWithRange[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "range",
              "type": "tuple",
              "internalType": "struct LockupLinear.Range",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "cliff", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "createWithDeltas(address,address,(address,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": "bd4eb1a4",
    "createWithDurations(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(address,uint256))[])": "e8d34961",
    "createWithMilestones(address,address,(address,uint40,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": "8c72706e",
    "createWithRange(address,address,(address,address,uint128,bool,bool,(uint40,uint40,uint40),(address,uint256))[])": "9b38b39a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"lockupDynamic\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"delta\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDelta[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Batch.CreateWithDeltas[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithDeltas\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Batch.CreateWithDurations[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"lockupDynamic\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"milestone\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Batch.CreateWithMilestones[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithMilestones\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Range\",\"name\":\"range\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Batch.CreateWithRange[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithRange\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createWithDeltas(address,address,(address,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithDeltas} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithDeltas}.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithDurations(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithDurations} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithDurations}.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithMilestones(address,address,(address,uint40,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithMilestones} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithMilestones}.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithRange(address,address,(address,address,uint128,bool,bool,(uint40,uint40,uint40),(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithRange} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithRange}.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}}},\"title\":\"ISablierV2Batch\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createWithDeltas(address,address,(address,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithDeltas`.\"},\"createWithDurations(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithDurations`.\"},\"createWithMilestones(address,address,(address,uint40,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithMilestones`.\"},\"createWithRange(address,address,(address,address,uint128,bool,bool,(uint40,uint40,uint40),(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithRange`.\"}},\"notice\":\"Helper to batch create Sablier V2 Lockup streams.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISablierV2Batch.sol\":\"ISablierV2Batch\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@prb/test/=node_modules/@prb/test/\",\":@sablier/v2-core/=node_modules/@sablier/v2-core/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770\",\"dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8\",\"dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f\",\"dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787\",\"dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd\",\"dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b\",\"dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7\",\"dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885\",\"dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Base.sol\":{\"keccak256\":\"0xcb2807d2ae45eba27163e84f00ebf8448eddc01744e0747fa0683e1c70fce9f7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ac888839b252ea7b02d79f3b1d9d033f2d3fd6acfde5651e19af2481f55d0b24\",\"dweb:/ipfs/QmPJbtT36aexhEDysa9mkLogT8w6yAiJP1jNvA4rbmg2Dh\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Comptroller.sol\":{\"keccak256\":\"0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7\",\"dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol\":{\"keccak256\":\"0x61abd439ba9729781bb32bc6b267cbfdbdf66177e40ce449399054ffd57cdbea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0d1755902afd381ce579aad5d3958b6ca3715c60b6a4371995fba5586a870a88\",\"dweb:/ipfs/QmZDu3fqPpLxk9TXZPxSKbC9ACAujLVApQeoQZ7ZJE5b5r\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupDynamic.sol\":{\"keccak256\":\"0x76922554a37e03ea22a93e95f60b4fdaf5623519f6af573fd36aa898539268f0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c14c1701662d7b8dcc0e44260b149b8e4be172c3897331e35933329810edef72\",\"dweb:/ipfs/Qme6mbtV1ZNGoWSnEURzf4somUMgTcth3766ye614wjA4c\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol\":{\"keccak256\":\"0x9bbd77ed1d6c83e0f74cf4d6d77692e7ff85b2729df6cdba9daa68a1be1ea5dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5681dd74dd796021fcace26b009c10d87e1d6f33c594989488ad08fd113188a6\",\"dweb:/ipfs/QmR7KwUmGVmDZsxvn1oNwReDfTWc4EPFxLmvbFoTyWinRg\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol\":{\"keccak256\":\"0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73\",\"dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV\"]},\"node_modules/@sablier/v2-core/src/interfaces/blast/IBlast.sol\":{\"keccak256\":\"0x5941b44fdbfe59c228c3fa9e077c34022a940daa188721af875abfc8f9ae7809\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5fc5ee0721f5fa77732ee4ad48b166b3d7c3035fbc92d5273762842b46707c03\",\"dweb:/ipfs/QmWxCiJj5urmrSUZSvG63dTA39uUPsYPGQnZ3TBpTpFzgL\"]},\"node_modules/@sablier/v2-core/src/interfaces/blast/IERC20Rebasing.sol\":{\"keccak256\":\"0x2e0f0bd4eac9b69fc4a692b9602ecb113211ac6c3afb84812b7a14e437e207e9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://464c4490929165e06786b68c246a1e38cb8b2d85f6433aa0a9e2c6c128101b48\",\"dweb:/ipfs/QmRJgtQBVbrvZmkgaUMHLgYWjyYmbcz2omu7wR2A9ndmmj\"]},\"node_modules/@sablier/v2-core/src/interfaces/blast/ISablierV2Blast.sol\":{\"keccak256\":\"0xb9d344bbb111abc3af01a00640e4d00c2c356ea06bc57f510411e4f3faf385f4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6d3d785692c0cca4f15110a54de40e4deae76fb585775cdce6b0f39859a6e4f9\",\"dweb:/ipfs/QmNeggUj691b33fF6bgzEDZyS3Tuq1wothQR3U6jwdTkTZ\"]},\"node_modules/@sablier/v2-core/src/types/DataTypes.sol\":{\"keccak256\":\"0xa1f033b1cbfd52cc1de99b26d31a8b4b248b2e1aff01911327e676f56c5c5d6e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d30f3f24748180f359b6f15eee3f3fd75203063e09efbbbb710d36124911b833\",\"dweb:/ipfs/QmUviDQvbA2WFzYyhwMaHrjzSzZ1QEY7KbkNCbNGiPp2J1\"]},\"src/interfaces/ISablierV2Batch.sol\":{\"keccak256\":\"0x09886d4807ebdff039e98d0febc466ec92c05908d5df58a63509104c97595a7a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3c9ba2345143c01d24ad9e6463c1a078b8dd9a4f489e94e45840500dde4155af\",\"dweb:/ipfs/QmRciyG6TbDVCSrvjEL6PNxTmBy6JcvPrR9JHwweXrmm3C\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0xaed56ab5d830edd4db0fd16b74c08a4445b73a21366f247b1dca30077ccb287d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d4cbf111064ef6c4b1741d0ba6f4162db799b9ab26fe687923629d319020bfb7\",\"dweb:/ipfs/QmRNHeccy2fpLw2jNBSzfvQevvVB4tUSVkiTE5rkaqXL3n\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "contract ISablierV2LockupDynamic", "name": "lockupDynamic", "type": "address" },
            { "internalType": "contract IERC20", "name": "asset", "type": "address" },
            {
              "internalType": "struct Batch.CreateWithDeltas[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDelta[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                    { "internalType": "uint40", "name": "delta", "type": "uint40" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDeltas",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierV2LockupLinear", "name": "lockupLinear", "type": "address" },
            { "internalType": "contract IERC20", "name": "asset", "type": "address" },
            {
              "internalType": "struct Batch.CreateWithDurations[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                    { "internalType": "uint40", "name": "total", "type": "uint40" }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurations",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierV2LockupDynamic", "name": "lockupDynamic", "type": "address" },
            { "internalType": "contract IERC20", "name": "asset", "type": "address" },
            {
              "internalType": "struct Batch.CreateWithMilestones[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "uint40", "name": "startTime", "type": "uint40" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                    { "internalType": "uint40", "name": "milestone", "type": "uint40" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithMilestones",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierV2LockupLinear", "name": "lockupLinear", "type": "address" },
            { "internalType": "contract IERC20", "name": "asset", "type": "address" },
            {
              "internalType": "struct Batch.CreateWithRange[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupLinear.Range",
                  "name": "range",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithRange",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createWithDeltas(address,address,(address,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithDeltas} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithDeltas}.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithDurations(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithDurations} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithDurations}.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithMilestones(address,address,(address,uint40,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithMilestones} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithMilestones}.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithRange(address,address,(address,address,uint128,bool,bool,(uint40,uint40,uint40),(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithRange} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithRange}.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createWithDeltas(address,address,(address,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithDeltas`."
          },
          "createWithDurations(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithDurations`."
          },
          "createWithMilestones(address,address,(address,uint40,bool,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[])": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithMilestones`."
          },
          "createWithRange(address,address,(address,address,uint128,bool,bool,(uint40,uint40,uint40),(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithRange`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "@prb/test/=node_modules/@prb/test/",
        "@sablier/v2-core/=node_modules/@sablier/v2-core/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": { "enabled": true, "runs": 10000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/interfaces/ISablierV2Batch.sol": "ISablierV2Batch" },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f",
        "urls": [
          "bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770",
          "dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a",
        "urls": [
          "bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8",
          "dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4",
        "urls": [
          "bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f",
          "dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868",
        "urls": [
          "bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787",
          "dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07",
        "urls": [
          "bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd",
          "dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5",
        "urls": [
          "bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b",
          "dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09",
        "urls": [
          "bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7",
          "dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e",
        "urls": [
          "bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885",
          "dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Base.sol": {
        "keccak256": "0xcb2807d2ae45eba27163e84f00ebf8448eddc01744e0747fa0683e1c70fce9f7",
        "urls": [
          "bzz-raw://ac888839b252ea7b02d79f3b1d9d033f2d3fd6acfde5651e19af2481f55d0b24",
          "dweb:/ipfs/QmPJbtT36aexhEDysa9mkLogT8w6yAiJP1jNvA4rbmg2Dh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Comptroller.sol": {
        "keccak256": "0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3",
        "urls": [
          "bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7",
          "dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol": {
        "keccak256": "0x61abd439ba9729781bb32bc6b267cbfdbdf66177e40ce449399054ffd57cdbea",
        "urls": [
          "bzz-raw://0d1755902afd381ce579aad5d3958b6ca3715c60b6a4371995fba5586a870a88",
          "dweb:/ipfs/QmZDu3fqPpLxk9TXZPxSKbC9ACAujLVApQeoQZ7ZJE5b5r"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupDynamic.sol": {
        "keccak256": "0x76922554a37e03ea22a93e95f60b4fdaf5623519f6af573fd36aa898539268f0",
        "urls": [
          "bzz-raw://c14c1701662d7b8dcc0e44260b149b8e4be172c3897331e35933329810edef72",
          "dweb:/ipfs/Qme6mbtV1ZNGoWSnEURzf4somUMgTcth3766ye614wjA4c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol": {
        "keccak256": "0x9bbd77ed1d6c83e0f74cf4d6d77692e7ff85b2729df6cdba9daa68a1be1ea5dd",
        "urls": [
          "bzz-raw://5681dd74dd796021fcace26b009c10d87e1d6f33c594989488ad08fd113188a6",
          "dweb:/ipfs/QmR7KwUmGVmDZsxvn1oNwReDfTWc4EPFxLmvbFoTyWinRg"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol": {
        "keccak256": "0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a",
        "urls": [
          "bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73",
          "dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/blast/IBlast.sol": {
        "keccak256": "0x5941b44fdbfe59c228c3fa9e077c34022a940daa188721af875abfc8f9ae7809",
        "urls": [
          "bzz-raw://5fc5ee0721f5fa77732ee4ad48b166b3d7c3035fbc92d5273762842b46707c03",
          "dweb:/ipfs/QmWxCiJj5urmrSUZSvG63dTA39uUPsYPGQnZ3TBpTpFzgL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/blast/IERC20Rebasing.sol": {
        "keccak256": "0x2e0f0bd4eac9b69fc4a692b9602ecb113211ac6c3afb84812b7a14e437e207e9",
        "urls": [
          "bzz-raw://464c4490929165e06786b68c246a1e38cb8b2d85f6433aa0a9e2c6c128101b48",
          "dweb:/ipfs/QmRJgtQBVbrvZmkgaUMHLgYWjyYmbcz2omu7wR2A9ndmmj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/blast/ISablierV2Blast.sol": {
        "keccak256": "0xb9d344bbb111abc3af01a00640e4d00c2c356ea06bc57f510411e4f3faf385f4",
        "urls": [
          "bzz-raw://6d3d785692c0cca4f15110a54de40e4deae76fb585775cdce6b0f39859a6e4f9",
          "dweb:/ipfs/QmNeggUj691b33fF6bgzEDZyS3Tuq1wothQR3U6jwdTkTZ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/types/DataTypes.sol": {
        "keccak256": "0xa1f033b1cbfd52cc1de99b26d31a8b4b248b2e1aff01911327e676f56c5c5d6e",
        "urls": [
          "bzz-raw://d30f3f24748180f359b6f15eee3f3fd75203063e09efbbbb710d36124911b833",
          "dweb:/ipfs/QmUviDQvbA2WFzYyhwMaHrjzSzZ1QEY7KbkNCbNGiPp2J1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2Batch.sol": {
        "keccak256": "0x09886d4807ebdff039e98d0febc466ec92c05908d5df58a63509104c97595a7a",
        "urls": [
          "bzz-raw://3c9ba2345143c01d24ad9e6463c1a078b8dd9a4f489e94e45840500dde4155af",
          "dweb:/ipfs/QmRciyG6TbDVCSrvjEL6PNxTmBy6JcvPrR9JHwweXrmm3C"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0xaed56ab5d830edd4db0fd16b74c08a4445b73a21366f247b1dca30077ccb287d",
        "urls": [
          "bzz-raw://d4cbf111064ef6c4b1741d0ba6f4162db799b9ab26fe687923629d319020bfb7",
          "dweb:/ipfs/QmRNHeccy2fpLw2jNBSzfvQevvVB4tUSVkiTE5rkaqXL3n"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 98
}
