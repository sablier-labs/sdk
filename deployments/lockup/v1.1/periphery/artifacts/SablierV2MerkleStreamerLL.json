{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialAdmin", "type": "address", "internalType": "address" },
        { "name": "lockupLinear", "type": "address", "internalType": "contract ISablierV2LockupLinear" },
        { "name": "asset", "type": "address", "internalType": "contract IERC20" },
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
        { "name": "expiration", "type": "uint40", "internalType": "uint40" },
        {
          "name": "streamDurations_",
          "type": "tuple",
          "internalType": "struct LockupLinear.Durations",
          "components": [
            { "name": "cliff", "type": "uint40", "internalType": "uint40" },
            { "name": "total", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "cancelable", "type": "bool", "internalType": "bool" },
        { "name": "transferable", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ASSET",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "CANCELABLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "EXPIRATION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "LOCKUP",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ISablierV2Lockup" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "LOCKUP_LINEAR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ISablierV2LockupLinear" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MERKLE_ROOT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "TRANSFERABLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "merkleProof", "type": "bytes32[]", "internalType": "bytes32[]" }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clawback",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasClaimed",
      "inputs": [{ "name": "index", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasExpired",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "streamDurations",
      "inputs": [],
      "outputs": [
        { "name": "cliff", "type": "uint40", "internalType": "uint40" },
        { "name": "total", "type": "uint40", "internalType": "uint40" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [{ "name": "newAdmin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Claim",
      "inputs": [
        { "name": "index", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" },
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Clawback",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferAdmin",
      "inputs": [
        { "name": "oldAdmin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "CallerNotAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2MerkleStreamer_CampaignExpired",
      "inputs": [
        { "name": "currentTime", "type": "uint256", "internalType": "uint256" },
        { "name": "expiration", "type": "uint40", "internalType": "uint40" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2MerkleStreamer_CampaignNotExpired",
      "inputs": [
        { "name": "currentTime", "type": "uint256", "internalType": "uint256" },
        { "name": "expiration", "type": "uint40", "internalType": "uint40" }
      ]
    },
    { "type": "error", "name": "SablierV2MerkleStreamer_InvalidProof", "inputs": [] },
    { "type": "error", "name": "SablierV2MerkleStreamer_ProtocolFeeNotZero", "inputs": [] },
    {
      "type": "error",
      "name": "SablierV2MerkleStreamer_StreamClaimed",
      "inputs": [{ "name": "index", "type": "uint256", "internalType": "uint256" }]
    }
  ],
  "bytecode": {
    "object": "0x610160604081815234620002e0578162001788803803809162000023828562000301565b833981010361012091828212620002e05783516001600160a01b038082169391849003620002e057602090818701519481861693848703620002e0578589015192831692838103620002e05760608a015190876200008460808d0162000325565b93609f190112620002e0578751918289016001600160401b03811184821017620002ca578952620000b860a08d0162000325565b8352620000c860c08d0162000325565b83880190815293620000dd60e08e0162000338565b91610100809e01620000ef9062000338565b93600097600160a01b60019003198954161788556080528960e0528d5260c05260a05289526101409788525164ffffffffff16600254915160281b69ffffffffff00000000001691600160501b600190031916171760025584519280840191808063095ea7b360e01b948581528860248901526000196044890152604488526200017988620002e5565b87519082885af16200018a62000346565b8162000288575b50806200027d575b156200023b575b505050505050519161121b93846200056d8539608051848181610377015281816106460152610cc4015260a0518481816107320152610bb0015260c05184818161015101528181610afc01528181610f1b01526110b7015260e05184818161020e015281816105d00152610c63015251838181610327015261056801525182818161075a0152610b730152518181816101a201526108cd0152f35b62000271956200026b9388519384015260248301526044820152604481526200026481620002e5565b8262000389565b62000389565b388080808080620001a0565b50833b151562000199565b80915051838115918215620002a3575b505090503862000191565b8380929350010312620002c65782620002bd910162000338565b80833862000298565b5080fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b608081019081106001600160401b03821117620002ca57604052565b601f909101601f19168101906001600160401b03821190821017620002ca57604052565b519064ffffffffff82168203620002e057565b51908115158203620002e057565b3d1562000384573d906001600160401b038211620002ca576040519162000378601f8201601f19166020018462000301565b82523d6000602084013e565b606090565b60408051908101916001600160a01b03166001600160401b03831182841017620002ca57620003fd926040526000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1620003f662000346565b9162000492565b80518281159182156200046f575b5050905015620004185750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b8380929350010312620002e0578162000489910162000338565b8082386200040b565b91929015620004f75750815115620004a8575090565b3b15620004b25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156200050b5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851062000552575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506200052e56fe608080604052600436101561001357600080fd5b60003560e01c9081631686c90914610bd55750806316c3549d14610b985780631bfd681414610b5b5780633bfe03a814610b2c5780633f31ae3f1461039b5780634800d97f1461034a57806351e75e8b1461030f57806375829def14610232578063845aef4b146101e157806390e64d13146101c65780639e93e57714610175578063bb4b573414610133578063ce516507146100f25763f851a440146100b957600080fd5b346100ed5760006003193601126100ed57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b600080fd5b346100ed5760206003193601126100ed57602061012960043560ff6001918060081c60005282602052161b60406000205416151590565b6040519015158152f35b346100ed5760006003193601126100ed57602060405164ffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760006003193601126100ed5760206101296110af565b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760206003193601126100ed5761024b610fe7565b60005473ffffffffffffffffffffffffffffffffffffffff808216923384036102c2577fffffffffffffffffffffffff00000000000000000000000000000000000000009350169182911617600055337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80600080a3005b6040517fc6cce6a400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152336024820152604490fd5b346100ed5760006003193601126100ed5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760806003193601126100ed5760243573ffffffffffffffffffffffffffffffffffffffff811681036100ed57604435906fffffffffffffffffffffffffffffffff821682036100ed5767ffffffffffffffff606435116100ed573660236064350112156100ed5767ffffffffffffffff60643560040135116100ed573660246064356004013560051b6064350101116100ed576040516020810190600435825273ffffffffffffffffffffffffffffffffffffffff831660408201526fffffffffffffffffffffffffffffffff841660608201526060815261048181611026565b519020604051602081019182526020815261049b8161100a565b519020916104a76110af565b610ace576104cf60043560ff6001918060081c60005282602052161b60406000205416151590565b610a9c57604051926104ed60206064356004013560051b0185611042565b60643560048101358552602401602085015b60246064356004013560051b60643501018210610a8c575050906000915b84518310156105645760208360051b860101519081811060001461055157600052602052600160406000205b92019161051d565b9060005260205260016040600020610549565b83907f000000000000000000000000000000000000000000000000000000000000000003610a6257604051907f5fe3b56700000000000000000000000000000000000000000000000000000000825260208260048173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561099a57600092610a31575b506040517fdcf844a700000000000000000000000000000000000000000000000000000000815260208160248173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001697886004840152165afa90811561099a576000916109ff575b506109d55760043560081c60005260016020526040600020600160ff600435161b81541790556040516106b18161100a565b600081526000602082015273ffffffffffffffffffffffffffffffffffffffff600054169260405193610100850185811067ffffffffffffffff8211176109a657604052845273ffffffffffffffffffffffffffffffffffffffff831660208501526fffffffffffffffffffffffffffffffff8516604085015260608401527f0000000000000000000000000000000000000000000000000000000000000000151560808401527f0000000000000000000000000000000000000000000000000000000000000000151560a084015260405161078c8161100a565b64ffffffffff600254818116835260281c16602082015260c084015260e0830152602060e0604051937fab167ccc00000000000000000000000000000000000000000000000000000000855273ffffffffffffffffffffffffffffffffffffffff815116600486015273ffffffffffffffffffffffffffffffffffffffff838201511660248601526fffffffffffffffffffffffffffffffff604082015116604486015273ffffffffffffffffffffffffffffffffffffffff606082015116606486015260808101511515608486015260a0810151151560a486015264ffffffffff8360c08301518281511660c489015201511660e4860152015173ffffffffffffffffffffffffffffffffffffffff815116610104850152015161012483015260208261014481600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af191821561099a57600092610965575b506020927f28b58397e03322f670d6b223cc863f8c148e368b8b615412e6798a641a22842d604073ffffffffffffffffffffffffffffffffffffffff85946fffffffffffffffffffffffffffffffff835195600435875216888601521692a3604051908152f35b91506020823d602011610992575b8161098060209383611042565b810103126100ed5790519060206108fe565b3d9150610973565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60046040517fa4432b51000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610a29575b81610a1a60209383611042565b810103126100ed57518461067f565b3d9150610a0d565b610a5491925060203d602011610a5b575b610a4c8183611042565b810190611083565b9083610601565b503d610a42565b60046040517fb3f3b2a6000000000000000000000000000000000000000000000000000000008152fd5b81358152602091820191016104ff565b60246040517f3548783b0000000000000000000000000000000000000000000000000000000081526004356004820152fd5b6040517f74b43bd00000000000000000000000000000000000000000000000000000000081524260048201527f000000000000000000000000000000000000000000000000000000000000000064ffffffffff166024820152604490fd5b346100ed5760006003193601126100ed57604060025464ffffffffff825191818116835260281c166020820152f35b346100ed5760006003193601126100ed5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346100ed5760006003193601126100ed5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346100ed5760406003193601126100ed57610bee610fe7565b90602435906fffffffffffffffffffffffffffffffff82168092036100ed5773ffffffffffffffffffffffffffffffffffffffff908160005416338103610f9e575050604051907f5fe3b5670000000000000000000000000000000000000000000000000000000082526020918281600481857f0000000000000000000000000000000000000000000000000000000000000000165afa90811561099a57600091610f81575b506040517fdcf844a7000000000000000000000000000000000000000000000000000000008152838160248186807f00000000000000000000000000000000000000000000000000000000000000001696876004840152165afa90811561099a57600091610f54575b50610d066110af565b159081610f4b575b50610eed5760405160008084868401987fa9059cbb000000000000000000000000000000000000000000000000000000008a52169788602485015287604485015260448452610d5c84611026565b60405193610d698561100a565b8785527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488860152519082865af13d15610ee0573d9067ffffffffffffffff82116109a657610df59360405192610de7887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185611042565b83523d60008885013e6110ec565b8051838115918215610ec0575b5050905015610e3c57907f2e9d425ba8b27655048400b366d7b6a1f7180ebdb088e06bb7389704860ffe1f916000541692604051908152a3005b608482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b83809293500103126100ed5782015180151581036100ed57808387610e02565b91610df5926060916110ec565b6040517f1351f21d0000000000000000000000000000000000000000000000000000000081524260048201527f000000000000000000000000000000000000000000000000000000000000000064ffffffffff166024820152604490fd5b90501586610d0e565b90508381813d8311610f7a575b610f6b8183611042565b810103126100ed575186610cfd565b503d610f61565b610f989150833d8511610a5b57610a4c8183611042565b85610c94565b7fc6cce6a400000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff166004820152336024820152604490fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100ed57565b6040810190811067ffffffffffffffff8211176109a657604052565b6080810190811067ffffffffffffffff8211176109a657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109a657604052565b908160209103126100ed575173ffffffffffffffffffffffffffffffffffffffff811681036100ed5790565b64ffffffffff7f00000000000000000000000000000000000000000000000000000000000000001680151590816110e4575090565b905042101590565b919290156111675750815115611100575090565b3b156111095790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b82519091501561117a5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106111f7575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b8181018301518682016044015285935082016111b656fea164736f6c6343000817000a",
    "sourceMap": "816:3389:92:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;816:3389:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;816:3389:92;;;;;;;;;;-1:-1:-1;;;;;816:3389:92;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;;816:3389:92;;;;;;;;;;;;;;;2727:13:93;2750:15;816:3389:92;2750:15:93;2775:24;;816:3389:92;2809:23:93;816:3389:92;2842:23:93;2875:27;;2450:28:92;;;;816:3389;;;2488:34;816:3389;;;;;;;;;;;;;;;;;;2488:34;816:3389;;;3871:62:6;;;;816:3389:92;;;;;;3871:62:6;;;;;;;;816:3389:92;2661:17;;816:3389;;;;;3871:62:6;;;;;:::i;:::-;6742:25;;;;;;;;;:::i;:::-;6796:69;;;-1:-1:-1;6796:107:6;;;;-1:-1:-1;3948:45:6;3944:216;;-1:-1:-1;816:3389:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3944:216:6;4136:12;816:3389:92;4036:58:6;816:3389:92;;;4036:58:6;;;;3871:62;4036:58;;816:3389:92;;;;;;4036:58:6;;;;;:::i;:::-;;;:::i;:::-;4136:12;:::i;:::-;3944:216;;;;;;;;6796:107;1702:19:11;;;:23;;6796:107:6;;:69;816:3389:92;;;;6808:22:6;;;:56;;;;;6796:69;;;;;;;;6808:56;6834:30;;;;;;816:3389:92;;;;6834:30:6;816:3389:92;6834:30:6;;816:3389:92;:::i;:::-;6808:56:6;;;;;816:3389:92;;;;;;;;;;;;;;;;;-1:-1:-1;816:3389:92;;;;;;;;;-1:-1:-1;;;;;816:3389:92;;;;;;;:::o;:::-;;;;;-1:-1:-1;;816:3389:92;;;;-1:-1:-1;;;;;816:3389:92;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;816:3389:92;;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;:::i;:::-;;;;-1:-1:-1;816:3389:92;;;;:::o;:::-;;;:::o;5173:642:6:-;816:3389:92;;;;;;;-1:-1:-1;;;;;816:3389:92;-1:-1:-1;;;;;816:3389:92;;;;;;;;5535:69:11;816:3389:92;;;-1:-1:-1;816:3389:92;;;;;;;;;;;5487:31:11;;;;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;816:3389:92;;5705:22:6;;;:56;;;;;5173:642;816:3389:92;;;;;;;5173:642:6;:::o;816:3389:92:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;816:3389:92;;;;;5705:56:6;5731:30;;;;;;816:3389:92;;;;5731:30:6;816:3389:92;5731:30:6;;816:3389:92;:::i;:::-;5705:56:6;;;;;7671:628:11;;;;7875:418;;;816:3389:92;;;7906:22:11;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;816:3389:92;;8201:17:11;:::o;816:3389:92:-;;;-1:-1:-1;;;816:3389:92;;;;;;;;;;;;;;;;;;;;7875:418:11;816:3389:92;;;;-1:-1:-1;8980:21:11;:17;;9152:142;;;;;;;8976:379;816:3389:92;;;;;;9324:20:11;;816:3389:92;;;9324:20:11;;;816:3389:92;;;;;;;;;9000:1:11;816:3389:92;;;;;;;;;;;;9000:1:11;816:3389:92;;;;;;;;;;;;;;9324:20:11;;;;816:3389:92;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:3389:92;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c9081631686c90914610bd55750806316c3549d14610b985780631bfd681414610b5b5780633bfe03a814610b2c5780633f31ae3f1461039b5780634800d97f1461034a57806351e75e8b1461030f57806375829def14610232578063845aef4b146101e157806390e64d13146101c65780639e93e57714610175578063bb4b573414610133578063ce516507146100f25763f851a440146100b957600080fd5b346100ed5760006003193601126100ed57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b600080fd5b346100ed5760206003193601126100ed57602061012960043560ff6001918060081c60005282602052161b60406000205416151590565b6040519015158152f35b346100ed5760006003193601126100ed57602060405164ffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760006003193601126100ed5760206101296110af565b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760206003193601126100ed5761024b610fe7565b60005473ffffffffffffffffffffffffffffffffffffffff808216923384036102c2577fffffffffffffffffffffffff00000000000000000000000000000000000000009350169182911617600055337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80600080a3005b6040517fc6cce6a400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152336024820152604490fd5b346100ed5760006003193601126100ed5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346100ed5760006003193601126100ed57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100ed5760806003193601126100ed5760243573ffffffffffffffffffffffffffffffffffffffff811681036100ed57604435906fffffffffffffffffffffffffffffffff821682036100ed5767ffffffffffffffff606435116100ed573660236064350112156100ed5767ffffffffffffffff60643560040135116100ed573660246064356004013560051b6064350101116100ed576040516020810190600435825273ffffffffffffffffffffffffffffffffffffffff831660408201526fffffffffffffffffffffffffffffffff841660608201526060815261048181611026565b519020604051602081019182526020815261049b8161100a565b519020916104a76110af565b610ace576104cf60043560ff6001918060081c60005282602052161b60406000205416151590565b610a9c57604051926104ed60206064356004013560051b0185611042565b60643560048101358552602401602085015b60246064356004013560051b60643501018210610a8c575050906000915b84518310156105645760208360051b860101519081811060001461055157600052602052600160406000205b92019161051d565b9060005260205260016040600020610549565b83907f000000000000000000000000000000000000000000000000000000000000000003610a6257604051907f5fe3b56700000000000000000000000000000000000000000000000000000000825260208260048173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561099a57600092610a31575b506040517fdcf844a700000000000000000000000000000000000000000000000000000000815260208160248173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001697886004840152165afa90811561099a576000916109ff575b506109d55760043560081c60005260016020526040600020600160ff600435161b81541790556040516106b18161100a565b600081526000602082015273ffffffffffffffffffffffffffffffffffffffff600054169260405193610100850185811067ffffffffffffffff8211176109a657604052845273ffffffffffffffffffffffffffffffffffffffff831660208501526fffffffffffffffffffffffffffffffff8516604085015260608401527f0000000000000000000000000000000000000000000000000000000000000000151560808401527f0000000000000000000000000000000000000000000000000000000000000000151560a084015260405161078c8161100a565b64ffffffffff600254818116835260281c16602082015260c084015260e0830152602060e0604051937fab167ccc00000000000000000000000000000000000000000000000000000000855273ffffffffffffffffffffffffffffffffffffffff815116600486015273ffffffffffffffffffffffffffffffffffffffff838201511660248601526fffffffffffffffffffffffffffffffff604082015116604486015273ffffffffffffffffffffffffffffffffffffffff606082015116606486015260808101511515608486015260a0810151151560a486015264ffffffffff8360c08301518281511660c489015201511660e4860152015173ffffffffffffffffffffffffffffffffffffffff815116610104850152015161012483015260208261014481600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af191821561099a57600092610965575b506020927f28b58397e03322f670d6b223cc863f8c148e368b8b615412e6798a641a22842d604073ffffffffffffffffffffffffffffffffffffffff85946fffffffffffffffffffffffffffffffff835195600435875216888601521692a3604051908152f35b91506020823d602011610992575b8161098060209383611042565b810103126100ed5790519060206108fe565b3d9150610973565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60046040517fa4432b51000000000000000000000000000000000000000000000000000000008152fd5b90506020813d602011610a29575b81610a1a60209383611042565b810103126100ed57518461067f565b3d9150610a0d565b610a5491925060203d602011610a5b575b610a4c8183611042565b810190611083565b9083610601565b503d610a42565b60046040517fb3f3b2a6000000000000000000000000000000000000000000000000000000008152fd5b81358152602091820191016104ff565b60246040517f3548783b0000000000000000000000000000000000000000000000000000000081526004356004820152fd5b6040517f74b43bd00000000000000000000000000000000000000000000000000000000081524260048201527f000000000000000000000000000000000000000000000000000000000000000064ffffffffff166024820152604490fd5b346100ed5760006003193601126100ed57604060025464ffffffffff825191818116835260281c166020820152f35b346100ed5760006003193601126100ed5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346100ed5760006003193601126100ed5760206040517f000000000000000000000000000000000000000000000000000000000000000015158152f35b346100ed5760406003193601126100ed57610bee610fe7565b90602435906fffffffffffffffffffffffffffffffff82168092036100ed5773ffffffffffffffffffffffffffffffffffffffff908160005416338103610f9e575050604051907f5fe3b5670000000000000000000000000000000000000000000000000000000082526020918281600481857f0000000000000000000000000000000000000000000000000000000000000000165afa90811561099a57600091610f81575b506040517fdcf844a7000000000000000000000000000000000000000000000000000000008152838160248186807f00000000000000000000000000000000000000000000000000000000000000001696876004840152165afa90811561099a57600091610f54575b50610d066110af565b159081610f4b575b50610eed5760405160008084868401987fa9059cbb000000000000000000000000000000000000000000000000000000008a52169788602485015287604485015260448452610d5c84611026565b60405193610d698561100a565b8785527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656488860152519082865af13d15610ee0573d9067ffffffffffffffff82116109a657610df59360405192610de7887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185611042565b83523d60008885013e6110ec565b8051838115918215610ec0575b5050905015610e3c57907f2e9d425ba8b27655048400b366d7b6a1f7180ebdb088e06bb7389704860ffe1f916000541692604051908152a3005b608482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b83809293500103126100ed5782015180151581036100ed57808387610e02565b91610df5926060916110ec565b6040517f1351f21d0000000000000000000000000000000000000000000000000000000081524260048201527f000000000000000000000000000000000000000000000000000000000000000064ffffffffff166024820152604490fd5b90501586610d0e565b90508381813d8311610f7a575b610f6b8183611042565b810103126100ed575186610cfd565b503d610f61565b610f989150833d8511610a5b57610a4c8183611042565b85610c94565b7fc6cce6a400000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff166004820152336024820152604490fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100ed57565b6040810190811067ffffffffffffffff8211176109a657604052565b6080810190811067ffffffffffffffff8211176109a657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109a657604052565b908160209103126100ed575173ffffffffffffffffffffffffffffffffffffffff811681036100ed5790565b64ffffffffff7f00000000000000000000000000000000000000000000000000000000000000001680151590816110e4575090565b905042101590565b919290156111675750815115611100575090565b3b156111095790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b82519091501561117a5750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106111f7575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b8181018301518682016044015285935082016111b656fea164736f6c6343000817000a",
    "sourceMap": "816:3389:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;3269:25:93;816:3389:92;;;5308:14:93;568:217:20;816:3389:92;684:1:20;816:3389:92;-1:-1:-1;816:3389:92;;;;716:12:20;816:3389:92;;-1:-1:-1;816:3389:92;;746:27:20;:32;;568:217;;3269:25:93;816:3389:92;;;;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;1516:43:93;816:3389:92;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;1306:62;816:3389;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;1611:49:93;816:3389:92;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;:::i;:::-;;;;;;;905:10:53;;896:19;;892:116;;816:3389:92;;;;;;;;;;;905:10:53;1482:70;816:3389:92;1482:70:53;;816:3389:92;892:116:53;816:3389:92;;938:59:53;;;816:3389:92;;;;938:59:53;;816:3389:92;905:10:53;816:3389:92;;;;;;938:59:53;816:3389:92;;;;;-1:-1:-1;;816:3389:92;;;;;;;;1712:45:93;816:3389:92;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;1333:38:93;816:3389:92;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3369:36;;816:3389;;;;;;;;;;;;;;;;;;;;3369:36;;;;;:::i;:::-;816:3389;3359:47;;816:3389;;;;;;;;;;;;;;:::i;:::-;;3336:72;;5049:12:93;;;:::i;:::-;5045:198;;5308:25;816:3389:92;;;5308:14:93;568:217:20;816:3389:92;684:1:20;816:3389:92;-1:-1:-1;816:3389:92;;;;716:12:20;816:3389:92;;-1:-1:-1;816:3389:92;;746:27:20;:32;;568:217;;5308:25:93;5304:114;;816:3389:92;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:27:15;;2078:13;816:3389:92;2073:116:15;2111:3;816:3389:92;;2093:16:15;;;;;816:3389:92;;;;;;;;9294:51:15;:5;;;:51;:5;;;816:3389:92;9494:119:15;816:3389:92;9494:119:15;816:3389:92;;;9494:119:15;9294:51;2111:3;816:3389:92;2078:13:15;;;9294:51;9494:119;816:3389:92;9494:119:15;816:3389:92;9494:119:15;816:3389:92;;;9494:119:15;9294:51;;2093:16;;;5532:11:93;1270:33:15;5495:134:93;;816:3389:92;;5821:20:93;816:3389:92;5821:20:93;;816:3389:92;5821:6:93;816:3389:92;5821:6:93;816:3389:92;5821:6:93;816:3389:92;5821:20:93;;;;;;;816:3389:92;5821:20:93;;;2073:116:15;816:3389:92;;;;5821:40:93;;816:3389:92;5855:5:93;816:3389:92;5855:5:93;816:3389:92;5855:5:93;;816:3389:92;5821:40:93;;816:3389:92;5821:40:93;;816:3389:92;;5821:40:93;;;;;;;816:3389:92;5821:40:93;;;2073:116:15;1033:23:46;5917:110:93;;816:3389:92;;1217:1:20;816:3389:92;;;;;;;;;;;;;1249:12:20;816:3389:92;;;1272:28:20;816:3389:92;;;;;;;:::i;:::-;;;;;;3811:43;;816:3389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3722:381;;816:3389;;;;;3722:381;;816:3389;;3722:381;;816:3389;3884:10;816:3389;;;3722:381;;816:3389;4076:12;816:3389;;3722:381;;;816:3389;;;;;;:::i;:::-;;3923:15;816:3389;;;;;;;;;;;;;3722:381;;;816:3389;;3722:381;;816:3389;;;;;3675:438;816:3389;3675:438;;816:3389;;;;;3675:438;;816:3389;;3722:381;;;816:3389;;;;;;;;3722:381;;816:3389;;;;;;;;3722:381;;816:3389;;;;;;;3722:381;;816:3389;;;;;;;3722:381;;;816:3389;;;;;;;;3722:381;;;;816:3389;;;;;;;;;;;;;;;;3722:381;816:3389;;;;;;;;;;;;;;;;3675:13;816:3389;3675:13;816:3389;;3675:13;816:3389;3675:438;;;;;;;816:3389;3675:438;;;2073:116:15;816:3389:92;;;4155:41;816:3389;;;;;;;;;;;;;;;;;;4155:41;;816:3389;;;;;;3675:438;;;816:3389;3675:438;;816:3389;3675:438;;;;;;816:3389;3675:438;;;:::i;:::-;;;816:3389;;;;;;;;3675:438;;;;;-1:-1:-1;3675:438:92;;;816:3389;;;;;;;;;;;;;;;;;;;5917:110:93;816:3389:92;;;5965:51:93;;;;5821:40;;;816:3389:92;5821:40:93;;816:3389:92;5821:40:93;;;;;;816:3389:92;5821:40:93;;;:::i;:::-;;;816:3389:92;;;;;5821:40:93;;;;;;-1:-1:-1;5821:40:93;;:20;;;;;816:3389:92;5821:20:93;816:3389:92;5821:20:93;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;5495:134;816:3389:92;;;5573:45:93;;;;816:3389:92;;;;;;;;;;;;;5304:114:93;816:3389:92;;;5356:51:93;;;816:3389:92;;;5356:51:93;;816:3389:92;5356:51:93;5045:198;816:3389:92;;5084:148:93;;;5162:15;816:3389:92;5084:148:93;;816:3389:92;5207:10:93;816:3389:92;;;;;;;;938:59:53;816:3389:92;;;;;-1:-1:-1;;816:3389:92;;;;;;1637:54;816:3389;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;1809:43:93;816:3389:92;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;;1423:41:93;816:3389:92;;;;;;;;;;-1:-1:-1;;816:3389:92;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;905:10:53;896:19;;892:116;;816:3389:92;;;;4021:20:93;816:3389:92;4021:20:93;;816:3389:92;4021:6:93;;;816:3389:92;4021:6:93;;;816:3389:92;4021:20:93;;;;;;;816:3389:92;4021:20:93;;;816:3389:92;;;;;4021:40:93;;4055:5;;816:3389:92;4055:5:93;;;;816:3389:92;4021:40:93;;816:3389:92;4021:40:93;;816:3389:92;;4021:40:93;;;;;;;816:3389:92;4021:40:93;;;816:3389:92;4154:12:93;;;:::i;:::-;4153:13;:39;;;;816:3389:92;4149:228:93;;;816:3389:92;;;1050:58:6;;;;;;816:3389:92;1050:58:6;;816:3389:92;1050:58:6;;816:3389:92;1050:58:6;;816:3389:92;;;;;;;1050:58:6;;;;;:::i;:::-;816:3389:92;;;;;;:::i;:::-;;;;;;;;;5487:31:11;;;;;;816:3389:92;;;;;;;;;;;5535:69:11;816:3389:92;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5535:69:11;:::i;:::-;816:3389:92;;5705:22:6;;;:56;;;;;816:3389:92;;;;;;;;;4527:27:93;816:3389:92;;;;;;;;;;4527:27:93;816:3389:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5705:56:6;5731:30;;;;;;816:3389:92;;;;5731:30:6;;816:3389:92;;;;;;;;5705:56:6;;;;;816:3389:92;;5535:69:11;816:3389:92;;;5535:69:11;:::i;4149:228:93:-;816:3389:92;;4215:151:93;;;4296:15;816:3389:92;4215:151:93;;816:3389:92;4341:10:93;816:3389:92;;;;;;;;938:59:53;4153:39:93;1033:23:46;;;4153:39:93;;;4021:40;;;;;;;;;;;;;;;;:::i;:::-;;;816:3389:92;;;;;4021:40:93;;;;;;;;:20;;;;;;;;;;;;;;:::i;:::-;;;;892:116:53;938:59;;;816:3389:92;;;938:59:53;;816:3389:92;905:10:53;816:3389:92;;;;;;938:59:53;816:3389:92;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;3352:129:93:-;816:3389:92;3427:10:93;816:3389:92;3427:14:93;;;:47;;;;3420:54;3352:129;:::o;3427:47::-;3459:15;;;-1:-1:-1;3445:29:93;3352:129;:::o;7671:628:11:-;;;;7875:418;;;816:3389:92;;;7906:22:11;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;816:3389:92;;8201:17:11;:::o;816:3389:92:-;;;;;;;;;;;;;;;;;;;;;;;7875:418:11;816:3389:92;;;;-1:-1:-1;8980:21:11;:17;;9152:142;;;;;;;8976:379;816:3389:92;;9324:20:11;;;;816:3389:92;;;9324:20:11;;;816:3389:92;;;;;;;;;9000:1:11;816:3389:92;;;;;;;;;;;;9000:1:11;816:3389:92;;;;;;;;;;;9324:20:11;;;;816:3389:92;;;;;;;;;;;;;;;-1:-1:-1;816:3389:92;;;",
    "linkReferences": {},
    "immutableReferences": {
      "44195": [{ "start": 418, "length": 32 }, { "start": 2253, "length": 32 }],
      "44373": [{ "start": 887, "length": 32 }, { "start": 1606, "length": 32 }, { "start": 3268, "length": 32 }],
      "44377": [{ "start": 1842, "length": 32 }, { "start": 2992, "length": 32 }],
      "44381": [
        { "start": 337, "length": 32 },
        { "start": 2812, "length": 32 },
        { "start": 3867, "length": 32 },
        { "start": 4279, "length": 32 }
      ],
      "44386": [{ "start": 526, "length": 32 }, { "start": 1488, "length": 32 }, { "start": 3171, "length": 32 }],
      "44390": [{ "start": 807, "length": 32 }, { "start": 1384, "length": 32 }],
      "44394": [{ "start": 1882, "length": 32 }, { "start": 2931, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "ASSET()": "4800d97f",
    "CANCELABLE()": "16c3549d",
    "EXPIRATION()": "bb4b5734",
    "LOCKUP()": "845aef4b",
    "LOCKUP_LINEAR()": "9e93e577",
    "MERKLE_ROOT()": "51e75e8b",
    "TRANSFERABLE()": "1bfd6814",
    "admin()": "f851a440",
    "claim(uint256,address,uint128,bytes32[])": "3f31ae3f",
    "clawback(address,uint128)": "1686c909",
    "hasClaimed(uint256)": "ce516507",
    "hasExpired()": "90e64d13",
    "streamDurations()": "3bfe03a8",
    "transferAdmin(address)": "75829def"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"streamDurations_\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"}],\"name\":\"SablierV2MerkleStreamer_CampaignExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"}],\"name\":\"SablierV2MerkleStreamer_CampaignNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2MerkleStreamer_InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2MerkleStreamer_ProtocolFeeNotZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"SablierV2MerkleStreamer_StreamClaimed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"Clawback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CANCELABLE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EXPIRATION\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCKUP\",\"outputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCKUP_LINEAR\",\"outputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MERKLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFERABLE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"clawback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"streamDurations\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}}},\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,uint128,bytes32[])\":{\"details\":\"Emits a {Claim} event. Requirements: - The campaign must not have expired. - The stream must not have been claimed already. - The protocol fee must be zero. - The Merkle proof must be valid.\",\"params\":{\"amount\":\"The amount of tokens to be streamed.\",\"index\":\"The index of the recipient in the Merkle tree.\",\"merkleProof\":\"The Merkle proof of inclusion in the stream.\",\"recipient\":\"The address of the stream holder.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"clawback(address,uint128)\":{\"details\":\"Emits a {Clawback} event. Notes: - If the protocol is not zero, the expiration check is not made. Requirements: - The caller must be the admin. - The campaign must either be expired or not have an expiration.\",\"params\":{\"amount\":\"The amount of tokens to claw back.\",\"to\":\"The address to receive the tokens.\"}},\"constructor\":{\"details\":\"Constructs the contract by initializing the immutable state variables, and max approving the Sablier contract.\"},\"hasClaimed(uint256)\":{\"details\":\"Uses a bitmap to save gas.\",\"params\":{\"index\":\"The index of the recipient to check.\"}},\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}}},\"title\":\"SablierV2MerkleStreamerLL\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotAdmin(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the admin.\"}],\"SablierV2MerkleStreamer_CampaignExpired(uint256,uint40)\":[{\"notice\":\"Thrown when trying to claim after the campaign has expired.\"}],\"SablierV2MerkleStreamer_CampaignNotExpired(uint256,uint40)\":[{\"notice\":\"Thrown when trying to clawback when the campaign has not expired.\"}],\"SablierV2MerkleStreamer_InvalidProof()\":[{\"notice\":\"Thrown when trying to claim with an invalid Merkle proof.\"}],\"SablierV2MerkleStreamer_ProtocolFeeNotZero()\":[{\"notice\":\"Thrown when trying to claim when the protocol fee is not zero.\"}],\"SablierV2MerkleStreamer_StreamClaimed(uint256)\":[{\"notice\":\"Thrown when trying to claim the same stream more than once.\"}]},\"events\":{\"Claim(uint256,address,uint128,uint256)\":{\"notice\":\"Emitted when a recipient claims a stream.\"},\"Clawback(address,address,uint128)\":{\"notice\":\"Emitted when the admin claws back the unclaimed tokens.\"},\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"}},\"kind\":\"user\",\"methods\":{\"ASSET()\":{\"notice\":\"The streamed ERC-20 asset.\"},\"CANCELABLE()\":{\"notice\":\"A flag indicating whether the streams can be canceled.\"},\"EXPIRATION()\":{\"notice\":\"The cut-off point for the Merkle streamer, as a Unix timestamp. A value of zero means there is no expiration.\"},\"LOCKUP()\":{\"notice\":\"The address of the {SablierV2Lockup} contract.\"},\"LOCKUP_LINEAR()\":{\"notice\":\"The address of the {SablierV2LockupLinear} contract.\"},\"MERKLE_ROOT()\":{\"notice\":\"The root of the Merkle tree used to validate the claims.\"},\"TRANSFERABLE()\":{\"notice\":\"A flag indicating whether the stream NFTs are transferable.\"},\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"claim(uint256,address,uint128,bytes32[])\":{\"notice\":\"Makes the claim by creating a Lockup Linear stream to the recipient.\"},\"clawback(address,uint128)\":{\"notice\":\"Claws back the unclaimed tokens from the Merkle streamer.\"},\"hasClaimed(uint256)\":{\"notice\":\"Returns a flag indicating whether a claim has been made for a given index.\"},\"hasExpired()\":{\"notice\":\"Returns a flag indicating whether the Merkle streamer has expired.\"},\"streamDurations()\":{\"notice\":\"The total streaming duration of each stream.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"}},\"notice\":\"See the documentation in {ISablierV2MerkleStreamerLL}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierV2MerkleStreamerLL.sol\":\"SablierV2MerkleStreamerLL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@prb/test/=node_modules/@prb/test/\",\":@sablier/v2-core/=node_modules/@sablier/v2-core/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/structs/BitMaps.sol\":{\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6\",\"dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770\",\"dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8\",\"dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f\",\"dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787\",\"dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd\",\"dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b\",\"dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7\",\"dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"node_modules/@sablier/v2-core/src/abstracts/Adminable.sol\":{\"keccak256\":\"0x09c8d04b0bc0a11c63cecf76623dc3dd514933ee532a5ded0043885b5b8f708e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dbd56beac58c35d06a1992434075795e0b2e1e730bb6e9de4e78d01d7035fc32\",\"dweb:/ipfs/QmfSaYVV6nxtoLKn7LsbkwiNn4zYATco2Ufb34mWoaFCpD\"]},\"node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885\",\"dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Base.sol\":{\"keccak256\":\"0xb12e58a05389c958f79ebe1667e167c1e0bb681a18ae534f5e454abbd66f6821\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1c57fabd0290e38c73c88cbf09ffe1675f3d9367fbba72ad647fbe729f5fd9f7\",\"dweb:/ipfs/QmZ2ybkhNR8CzqMi5fwSUZodZ9otYBGR4pVDp7fk78KpAM\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Comptroller.sol\":{\"keccak256\":\"0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7\",\"dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol\":{\"keccak256\":\"0x61abd439ba9729781bb32bc6b267cbfdbdf66177e40ce449399054ffd57cdbea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0d1755902afd381ce579aad5d3958b6ca3715c60b6a4371995fba5586a870a88\",\"dweb:/ipfs/QmZDu3fqPpLxk9TXZPxSKbC9ACAujLVApQeoQZ7ZJE5b5r\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol\":{\"keccak256\":\"0x9bbd77ed1d6c83e0f74cf4d6d77692e7ff85b2729df6cdba9daa68a1be1ea5dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5681dd74dd796021fcace26b009c10d87e1d6f33c594989488ad08fd113188a6\",\"dweb:/ipfs/QmR7KwUmGVmDZsxvn1oNwReDfTWc4EPFxLmvbFoTyWinRg\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol\":{\"keccak256\":\"0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73\",\"dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV\"]},\"node_modules/@sablier/v2-core/src/libraries/Errors.sol\":{\"keccak256\":\"0xd05154f8f45037bebc9adfb76736bd40718b336f290154723e527530e1f58e5b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fcda227e6ce52ecc3de6238b01c4a44d86615b6b661b1f7975e15d6b20a68287\",\"dweb:/ipfs/Qmby3mnb7srVJfx2aXq24JrrPBBbj7k6Z9tVy5zspvRdHh\"]},\"node_modules/@sablier/v2-core/src/types/DataTypes.sol\":{\"keccak256\":\"0xe9f7db9149a892c339d0c72c26c322fe0f336061559bcd5fe761ed4add85b87f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://862268b89b1e8cdfd019e4aecd6c136231f0569b045b7a2bef6166195c4c23d0\",\"dweb:/ipfs/QmWVKoyWpq1fFZ8c2AbzBYJxmcvTLnW3o3BVRaFT2FncpK\"]},\"src/SablierV2MerkleStreamerLL.sol\":{\"keccak256\":\"0xffa8b2c153b23f57604b3e6ac424b795df2bf7b556ebbb020af4dcd2d01d9017\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://77cac0e20e86cb2528b68dd8b076b334cb4cabd95354db9a8e24df9568f662a9\",\"dweb:/ipfs/QmRrFDvbmA2MULV2Rzzz7WMaGrFknQavcvTHNns1p8B3B8\"]},\"src/abstracts/SablierV2MerkleStreamer.sol\":{\"keccak256\":\"0x50f4b4f98ce1df0410da269fb3792ffe7428c88b53da0bd10ae0587e6736e741\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84340136ef7e6014aacf1643ea6cc8087b3f28dcf6afc3535f83a64be586a3f1\",\"dweb:/ipfs/QmZr7E5vkuPrhoAZjUKngmrtBkmc3CwG559xrVutV5fwSd\"]},\"src/interfaces/ISablierV2MerkleStreamer.sol\":{\"keccak256\":\"0x1e21ea119678ffbb7a0773cee669a2e17bef747e5432217256f529bfd092784b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d41050ed8004e70024f63373c3b2bb39ffc167bc4aff7c19e364c7daf043333b\",\"dweb:/ipfs/QmaY42NhdXG4L2u9eQi1iMUW4hx1MFhQzPrgzAJynPeTWa\"]},\"src/interfaces/ISablierV2MerkleStreamerLL.sol\":{\"keccak256\":\"0x41f130d0d6dd0765c8171bf32dd964b8eb205f9c184404c17be944b5586082bf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6c8cf29d06f683b5703c2177bb624bfb5bc457302ad6167eadd19991d00ca2be\",\"dweb:/ipfs/QmcAxaUoNpKsJzgssz5RxPyGtHigZ9mVtxaUgDNyi4FvEi\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x2708778e69afcbbaa6963139b2df10dd06ebec06278d8dedee915d01d8c25cc4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://20f365f7608963351bfbcc93c150f9b04221a3fa93430d80dcbcd264c5eede8b\",\"dweb:/ipfs/QmcHnjsxeTEbEKkgyNXEzybbjb6KZXFEA5Yw3y52txZ372\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "initialAdmin", "type": "address" },
            { "internalType": "contract ISablierV2LockupLinear", "name": "lockupLinear", "type": "address" },
            { "internalType": "contract IERC20", "name": "asset", "type": "address" },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
            { "internalType": "uint40", "name": "expiration", "type": "uint40" },
            {
              "internalType": "struct LockupLinear.Durations",
              "name": "streamDurations_",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                { "internalType": "uint40", "name": "total", "type": "uint40" }
              ]
            },
            { "internalType": "bool", "name": "cancelable", "type": "bool" },
            { "internalType": "bool", "name": "transferable", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "CallerNotAdmin"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "currentTime", "type": "uint256" },
            { "internalType": "uint40", "name": "expiration", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierV2MerkleStreamer_CampaignExpired"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "currentTime", "type": "uint256" },
            { "internalType": "uint40", "name": "expiration", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierV2MerkleStreamer_CampaignNotExpired"
        },
        { "inputs": [], "type": "error", "name": "SablierV2MerkleStreamer_InvalidProof" },
        { "inputs": [], "type": "error", "name": "SablierV2MerkleStreamer_ProtocolFeeNotZero" },
        {
          "inputs": [{ "internalType": "uint256", "name": "index", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2MerkleStreamer_StreamClaimed"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false },
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "Clawback",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldAdmin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newAdmin", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ASSET",
          "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CANCELABLE",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EXPIRATION",
          "outputs": [{ "internalType": "uint40", "name": "", "type": "uint40" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LOCKUP",
          "outputs": [{ "internalType": "contract ISablierV2Lockup", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LOCKUP_LINEAR",
          "outputs": [{ "internalType": "contract ISablierV2LockupLinear", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MERKLE_ROOT",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFERABLE",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" },
            { "internalType": "address", "name": "recipient", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "bytes32[]", "name": "merkleProof", "type": "bytes32[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clawback"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "index", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "hasClaimed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hasExpired",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "streamDurations",
          "outputs": [
            { "internalType": "uint40", "name": "cliff", "type": "uint40" },
            { "internalType": "uint40", "name": "total", "type": "uint40" }
          ]
        },
        {
          "inputs": [{ "internalType": "address", "name": "newAdmin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim(uint256,address,uint128,bytes32[])": {
            "details": "Emits a {Claim} event. Requirements: - The campaign must not have expired. - The stream must not have been claimed already. - The protocol fee must be zero. - The Merkle proof must be valid.",
            "params": {
              "amount": "The amount of tokens to be streamed.",
              "index": "The index of the recipient in the Merkle tree.",
              "merkleProof": "The Merkle proof of inclusion in the stream.",
              "recipient": "The address of the stream holder."
            },
            "returns": { "streamId": "The id of the newly created stream." }
          },
          "clawback(address,uint128)": {
            "details": "Emits a {Clawback} event. Notes: - If the protocol is not zero, the expiration check is not made. Requirements: - The caller must be the admin. - The campaign must either be expired or not have an expiration.",
            "params": { "amount": "The amount of tokens to claw back.", "to": "The address to receive the tokens." }
          },
          "constructor": {
            "details": "Constructs the contract by initializing the immutable state variables, and max approving the Sablier contract."
          },
          "hasClaimed(uint256)": {
            "details": "Uses a bitmap to save gas.",
            "params": { "index": "The index of the recipient to check." }
          },
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newAdmin": "The address of the new admin." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ASSET()": { "notice": "The streamed ERC-20 asset." },
          "CANCELABLE()": { "notice": "A flag indicating whether the streams can be canceled." },
          "EXPIRATION()": {
            "notice": "The cut-off point for the Merkle streamer, as a Unix timestamp. A value of zero means there is no expiration."
          },
          "LOCKUP()": { "notice": "The address of the {SablierV2Lockup} contract." },
          "LOCKUP_LINEAR()": { "notice": "The address of the {SablierV2LockupLinear} contract." },
          "MERKLE_ROOT()": { "notice": "The root of the Merkle tree used to validate the claims." },
          "TRANSFERABLE()": { "notice": "A flag indicating whether the stream NFTs are transferable." },
          "admin()": { "notice": "The address of the admin account or contract." },
          "claim(uint256,address,uint128,bytes32[])": {
            "notice": "Makes the claim by creating a Lockup Linear stream to the recipient."
          },
          "clawback(address,uint128)": { "notice": "Claws back the unclaimed tokens from the Merkle streamer." },
          "hasClaimed(uint256)": {
            "notice": "Returns a flag indicating whether a claim has been made for a given index."
          },
          "hasExpired()": { "notice": "Returns a flag indicating whether the Merkle streamer has expired." },
          "streamDurations()": { "notice": "The total streaming duration of each stream." },
          "transferAdmin(address)": { "notice": "Transfers the contract admin to a new address." }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "@prb/test/=node_modules/@prb/test/",
        "@sablier/v2-core/=node_modules/@sablier/v2-core/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": { "enabled": true, "runs": 10000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/SablierV2MerkleStreamerLL.sol": "SablierV2MerkleStreamerLL" },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/BitMaps.sol": {
        "keccak256": "0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6",
        "urls": [
          "bzz-raw://4f6d9467f83ad116296f5d3f16734fa997cf333a6bc57b494b9d4771e7618fa6",
          "dweb:/ipfs/QmS5T3j2ijQQXv9QtQGMngekqdSRJSad4VEyeszRwDurMS"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f",
        "urls": [
          "bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770",
          "dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a",
        "urls": [
          "bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8",
          "dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4",
        "urls": [
          "bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f",
          "dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868",
        "urls": [
          "bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787",
          "dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07",
        "urls": [
          "bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd",
          "dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5",
        "urls": [
          "bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b",
          "dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09",
        "urls": [
          "bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7",
          "dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "node_modules/@sablier/v2-core/src/abstracts/Adminable.sol": {
        "keccak256": "0x09c8d04b0bc0a11c63cecf76623dc3dd514933ee532a5ded0043885b5b8f708e",
        "urls": [
          "bzz-raw://dbd56beac58c35d06a1992434075795e0b2e1e730bb6e9de4e78d01d7035fc32",
          "dweb:/ipfs/QmfSaYVV6nxtoLKn7LsbkwiNn4zYATco2Ufb34mWoaFCpD"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e",
        "urls": [
          "bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885",
          "dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Base.sol": {
        "keccak256": "0xb12e58a05389c958f79ebe1667e167c1e0bb681a18ae534f5e454abbd66f6821",
        "urls": [
          "bzz-raw://1c57fabd0290e38c73c88cbf09ffe1675f3d9367fbba72ad647fbe729f5fd9f7",
          "dweb:/ipfs/QmZ2ybkhNR8CzqMi5fwSUZodZ9otYBGR4pVDp7fk78KpAM"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Comptroller.sol": {
        "keccak256": "0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3",
        "urls": [
          "bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7",
          "dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol": {
        "keccak256": "0x61abd439ba9729781bb32bc6b267cbfdbdf66177e40ce449399054ffd57cdbea",
        "urls": [
          "bzz-raw://0d1755902afd381ce579aad5d3958b6ca3715c60b6a4371995fba5586a870a88",
          "dweb:/ipfs/QmZDu3fqPpLxk9TXZPxSKbC9ACAujLVApQeoQZ7ZJE5b5r"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol": {
        "keccak256": "0x9bbd77ed1d6c83e0f74cf4d6d77692e7ff85b2729df6cdba9daa68a1be1ea5dd",
        "urls": [
          "bzz-raw://5681dd74dd796021fcace26b009c10d87e1d6f33c594989488ad08fd113188a6",
          "dweb:/ipfs/QmR7KwUmGVmDZsxvn1oNwReDfTWc4EPFxLmvbFoTyWinRg"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol": {
        "keccak256": "0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a",
        "urls": [
          "bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73",
          "dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/libraries/Errors.sol": {
        "keccak256": "0xd05154f8f45037bebc9adfb76736bd40718b336f290154723e527530e1f58e5b",
        "urls": [
          "bzz-raw://fcda227e6ce52ecc3de6238b01c4a44d86615b6b661b1f7975e15d6b20a68287",
          "dweb:/ipfs/Qmby3mnb7srVJfx2aXq24JrrPBBbj7k6Z9tVy5zspvRdHh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/types/DataTypes.sol": {
        "keccak256": "0xe9f7db9149a892c339d0c72c26c322fe0f336061559bcd5fe761ed4add85b87f",
        "urls": [
          "bzz-raw://862268b89b1e8cdfd019e4aecd6c136231f0569b045b7a2bef6166195c4c23d0",
          "dweb:/ipfs/QmWVKoyWpq1fFZ8c2AbzBYJxmcvTLnW3o3BVRaFT2FncpK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/SablierV2MerkleStreamerLL.sol": {
        "keccak256": "0xffa8b2c153b23f57604b3e6ac424b795df2bf7b556ebbb020af4dcd2d01d9017",
        "urls": [
          "bzz-raw://77cac0e20e86cb2528b68dd8b076b334cb4cabd95354db9a8e24df9568f662a9",
          "dweb:/ipfs/QmRrFDvbmA2MULV2Rzzz7WMaGrFknQavcvTHNns1p8B3B8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/SablierV2MerkleStreamer.sol": {
        "keccak256": "0x50f4b4f98ce1df0410da269fb3792ffe7428c88b53da0bd10ae0587e6736e741",
        "urls": [
          "bzz-raw://84340136ef7e6014aacf1643ea6cc8087b3f28dcf6afc3535f83a64be586a3f1",
          "dweb:/ipfs/QmZr7E5vkuPrhoAZjUKngmrtBkmc3CwG559xrVutV5fwSd"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleStreamer.sol": {
        "keccak256": "0x1e21ea119678ffbb7a0773cee669a2e17bef747e5432217256f529bfd092784b",
        "urls": [
          "bzz-raw://d41050ed8004e70024f63373c3b2bb39ffc167bc4aff7c19e364c7daf043333b",
          "dweb:/ipfs/QmaY42NhdXG4L2u9eQi1iMUW4hx1MFhQzPrgzAJynPeTWa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleStreamerLL.sol": {
        "keccak256": "0x41f130d0d6dd0765c8171bf32dd964b8eb205f9c184404c17be944b5586082bf",
        "urls": [
          "bzz-raw://6c8cf29d06f683b5703c2177bb624bfb5bc457302ad6167eadd19991d00ca2be",
          "dweb:/ipfs/QmcAxaUoNpKsJzgssz5RxPyGtHigZ9mVtxaUgDNyi4FvEi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x2708778e69afcbbaa6963139b2df10dd06ebec06278d8dedee915d01d8c25cc4",
        "urls": [
          "bzz-raw://20f365f7608963351bfbcc93c150f9b04221a3fa93430d80dcbcd264c5eede8b",
          "dweb:/ipfs/QmcHnjsxeTEbEKkgyNXEzybbjb6KZXFEA5Yw3y52txZ372"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SablierV2MerkleStreamerLL.sol",
    "id": 44335,
    "exportedSymbols": {
      "BitMaps": [3931],
      "Broker": [18666],
      "IERC20": [105],
      "ISablierV2LockupLinear": [17049],
      "ISablierV2MerkleStreamerLL": [44896],
      "LockupLinear": [18875],
      "SablierV2MerkleStreamer": [44609],
      "SablierV2MerkleStreamerLL": [44334],
      "SafeERC20": [542],
      "ud": [9505]
    },
    "nodeType": "SourceUnit",
    "src": "45:4161:92",
    "nodes": [
      {
        "id": 44160,
        "nodeType": "PragmaDirective",
        "src": "45:25:92",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".19"]
      },
      {
        "id": 44162,
        "nodeType": "ImportDirective",
        "src": "72:76:92",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/structs/BitMaps.sol",
        "file": "@openzeppelin/contracts/utils/structs/BitMaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 3932,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44161,
              "name": "BitMaps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3931,
              "src": "81:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44164,
        "nodeType": "ImportDirective",
        "src": "149:72:92",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 106,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44163,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 105,
              "src": "158:6:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44166,
        "nodeType": "ImportDirective",
        "src": "222:84:92",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 543,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44165,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 542,
              "src": "231:9:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44168,
        "nodeType": "ImportDirective",
        "src": "307:100:92",
        "nodes": [],
        "absolutePath": "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol",
        "file": "@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 17050,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44167,
              "name": "ISablierV2LockupLinear",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17049,
              "src": "316:22:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44171,
        "nodeType": "ImportDirective",
        "src": "408:80:92",
        "nodes": [],
        "absolutePath": "node_modules/@sablier/v2-core/src/types/DataTypes.sol",
        "file": "@sablier/v2-core/src/types/DataTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 18876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44169,
              "name": "Broker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18666,
              "src": "417:6:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44170,
              "name": "LockupLinear",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18875,
              "src": "425:12:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44173,
        "nodeType": "ImportDirective",
        "src": "489:47:92",
        "nodes": [],
        "absolutePath": "node_modules/@prb/math/src/UD60x18.sol",
        "file": "@prb/math/src/UD60x18.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 5684,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44172,
              "name": "ud",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9505,
              "src": "498:2:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44175,
        "nodeType": "ImportDirective",
        "src": "538:82:92",
        "nodes": [],
        "absolutePath": "src/abstracts/SablierV2MerkleStreamer.sol",
        "file": "./abstracts/SablierV2MerkleStreamer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 44610,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44174,
              "name": "SablierV2MerkleStreamer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44609,
              "src": "547:23:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44177,
        "nodeType": "ImportDirective",
        "src": "621:89:92",
        "nodes": [],
        "absolutePath": "src/interfaces/ISablierV2MerkleStreamerLL.sol",
        "file": "./interfaces/ISablierV2MerkleStreamerLL.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44335,
        "sourceUnit": 44897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44176,
              "name": "ISablierV2MerkleStreamerLL",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44896,
              "src": "630:26:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44334,
        "nodeType": "ContractDefinition",
        "src": "816:3389:92",
        "nodes": [
          {
            "id": 44186,
            "nodeType": "UsingForDirective",
            "src": "972:33:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44183,
              "name": "BitMaps",
              "nameLocations": ["978:7:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3931,
              "src": "978:7:92"
            },
            "typeName": {
              "id": 44185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44184,
                "name": "BitMaps.BitMap",
                "nameLocations": ["990:7:92", "998:6:92"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3801,
                "src": "990:14:92"
              },
              "referencedDeclaration": 3801,
              "src": "990:14:92",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$3801_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            }
          },
          {
            "id": 44190,
            "nodeType": "UsingForDirective",
            "src": "1010:27:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44187,
              "name": "SafeERC20",
              "nameLocations": ["1016:9:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 542,
              "src": "1016:9:92"
            },
            "typeName": {
              "id": 44189,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44188,
                "name": "IERC20",
                "nameLocations": ["1030:6:92"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 105,
                "src": "1030:6:92"
              },
              "referencedDeclaration": 105,
              "src": "1030:6:92",
              "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$105", "typeString": "contract IERC20" }
            }
          },
          {
            "id": 44195,
            "nodeType": "VariableDeclaration",
            "src": "1306:62:92",
            "nodes": [],
            "baseFunctions": [44872],
            "constant": false,
            "documentation": {
              "id": 44191,
              "nodeType": "StructuredDocumentation",
              "src": "1259:42:92",
              "text": "@inheritdoc ISablierV2MerkleStreamerLL"
            },
            "functionSelector": "9e93e577",
            "mutability": "immutable",
            "name": "LOCKUP_LINEAR",
            "nameLocation": "1355:13:92",
            "overrides": { "id": 44194, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1346:8:92" },
            "scope": 44334,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
              "typeString": "contract ISablierV2LockupLinear"
            },
            "typeName": {
              "id": 44193,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44192,
                "name": "ISablierV2LockupLinear",
                "nameLocations": ["1306:22:92"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17049,
                "src": "1306:22:92"
              },
              "referencedDeclaration": 17049,
              "src": "1306:22:92",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                "typeString": "contract ISablierV2LockupLinear"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44200,
            "nodeType": "VariableDeclaration",
            "src": "1637:54:92",
            "nodes": [],
            "baseFunctions": [44880],
            "constant": false,
            "documentation": {
              "id": 44196,
              "nodeType": "StructuredDocumentation",
              "src": "1590:42:92",
              "text": "@inheritdoc ISablierV2MerkleStreamerLL"
            },
            "functionSelector": "3bfe03a8",
            "mutability": "mutable",
            "name": "streamDurations",
            "nameLocation": "1676:15:92",
            "overrides": { "id": 44199, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1667:8:92" },
            "scope": 44334,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Durations_$18840_storage",
              "typeString": "struct LockupLinear.Durations"
            },
            "typeName": {
              "id": 44198,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44197,
                "name": "LockupLinear.Durations",
                "nameLocations": ["1637:12:92", "1650:9:92"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18840,
                "src": "1637:22:92"
              },
              "referencedDeclaration": 18840,
              "src": "1637:22:92",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Durations_$18840_storage_ptr",
                "typeString": "struct LockupLinear.Durations"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44255,
            "nodeType": "FunctionDefinition",
            "src": "2041:645:92",
            "nodes": [],
            "body": {
              "id": 44254,
              "nodeType": "Block",
              "src": "2440:246:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44232,
                      "name": "LOCKUP_LINEAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44195,
                      "src": "2450:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                        "typeString": "contract ISablierV2LockupLinear"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44233,
                      "name": "lockupLinear",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44206,
                      "src": "2466:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                        "typeString": "contract ISablierV2LockupLinear"
                      }
                    },
                    "src": "2450:28:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                      "typeString": "contract ISablierV2LockupLinear"
                    }
                  },
                  "id": 44235,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:28:92"
                },
                {
                  "expression": {
                    "id": 44238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44236,
                      "name": "streamDurations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44200,
                      "src": "2488:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Durations_$18840_storage",
                        "typeString": "struct LockupLinear.Durations storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44237,
                      "name": "streamDurations_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44216,
                      "src": "2506:16:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Durations_$18840_memory_ptr",
                        "typeString": "struct LockupLinear.Durations memory"
                      }
                    },
                    "src": "2488:34:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Durations_$18840_storage",
                      "typeString": "struct LockupLinear.Durations storage ref"
                    }
                  },
                  "id": 44239,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:34:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44245,
                            "name": "LOCKUP_LINEAR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44195,
                            "src": "2645:13:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                              "typeString": "contract ISablierV2LockupLinear"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                              "typeString": "contract ISablierV2LockupLinear"
                            }
                          ],
                          "id": 44244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2637:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44243,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2637:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2637:22:92",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2666:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 44248,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2666:7:92",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 44247,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2661:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 44250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2661:13:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 44251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2675:3:92",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2661:17:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 44240,
                        "name": "ASSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44373,
                        "src": "2618:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$105",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 44242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2624:12:92",
                      "memberName": "forceApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "2618:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$105_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$105_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 44252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:61:92",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 44253,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:61:92"
                }
              ]
            },
            "documentation": {
              "id": 44201,
              "nodeType": "StructuredDocumentation",
              "src": "1909:127:92",
              "text": "@dev Constructs the contract by initializing the immutable state variables, and max approving the Sablier\n contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 44223,
                    "name": "initialAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44203,
                    "src": "2351:12:92",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  {
                    "id": 44224,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44209,
                    "src": "2365:5:92",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$105", "typeString": "contract IERC20" }
                  },
                  {
                    "id": 44225,
                    "name": "lockupLinear",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44206,
                    "src": "2372:12:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                      "typeString": "contract ISablierV2LockupLinear"
                    }
                  },
                  {
                    "id": 44226,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44211,
                    "src": "2386:10:92",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  {
                    "id": 44227,
                    "name": "expiration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44213,
                    "src": "2398:10:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint40", "typeString": "uint40" }
                  },
                  {
                    "id": 44228,
                    "name": "cancelable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44218,
                    "src": "2410:10:92",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  {
                    "id": 44229,
                    "name": "transferable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44220,
                    "src": "2422:12:92",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  }
                ],
                "id": 44230,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44222,
                  "name": "SablierV2MerkleStreamer",
                  "nameLocations": ["2327:23:92"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44609,
                  "src": "2327:23:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "2327:108:92"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44203,
                  "mutability": "mutable",
                  "name": "initialAdmin",
                  "nameLocation": "2070:12:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2062:20:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 44202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44206,
                  "mutability": "mutable",
                  "name": "lockupLinear",
                  "nameLocation": "2115:12:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2092:35:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                    "typeString": "contract ISablierV2LockupLinear"
                  },
                  "typeName": {
                    "id": 44205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44204,
                      "name": "ISablierV2LockupLinear",
                      "nameLocations": ["2092:22:92"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17049,
                      "src": "2092:22:92"
                    },
                    "referencedDeclaration": 17049,
                    "src": "2092:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                      "typeString": "contract ISablierV2LockupLinear"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44209,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "2144:5:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2137:12:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$105", "typeString": "contract IERC20" },
                  "typeName": {
                    "id": 44208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44207,
                      "name": "IERC20",
                      "nameLocations": ["2137:6:92"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 105,
                      "src": "2137:6:92"
                    },
                    "referencedDeclaration": 105,
                    "src": "2137:6:92",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$105", "typeString": "contract IERC20" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44211,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "2167:10:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2159:18:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 44210,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:92",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44213,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "2194:10:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2187:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint40", "typeString": "uint40" },
                  "typeName": {
                    "id": 44212,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:6:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint40", "typeString": "uint40" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44216,
                  "mutability": "mutable",
                  "name": "streamDurations_",
                  "nameLocation": "2244:16:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2214:46:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Durations_$18840_memory_ptr",
                    "typeString": "struct LockupLinear.Durations"
                  },
                  "typeName": {
                    "id": 44215,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44214,
                      "name": "LockupLinear.Durations",
                      "nameLocations": ["2214:12:92", "2227:9:92"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18840,
                      "src": "2214:22:92"
                    },
                    "referencedDeclaration": 18840,
                    "src": "2214:22:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Durations_$18840_storage_ptr",
                      "typeString": "struct LockupLinear.Durations"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44218,
                  "mutability": "mutable",
                  "name": "cancelable",
                  "nameLocation": "2275:10:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2270:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 44217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:4:92",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44220,
                  "mutability": "mutable",
                  "name": "transferable",
                  "nameLocation": "2300:12:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44255,
                  "src": "2295:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 44219,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:4:92",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:266:92"
            },
            "returnParameters": { "id": 44231, "nodeType": "ParameterList", "parameters": [], "src": "2440:0:92" },
            "scope": 44334,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44333,
            "nodeType": "FunctionDefinition",
            "src": "2962:1241:92",
            "nodes": [],
            "body": {
              "id": 44332,
              "nodeType": "Block",
              "src": "3170:1033:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [44272],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44272,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3329:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 44332,
                      "src": "3321:12:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "typeName": {
                        "id": 44271,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3321:7:92",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44287,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 44280,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44258,
                                    "src": "3380:5:92",
                                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                  },
                                  {
                                    "id": 44281,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44260,
                                    "src": "3387:9:92",
                                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                  },
                                  {
                                    "id": 44282,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44262,
                                    "src": "3398:6:92",
                                    "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                    { "typeIdentifier": "t_address", "typeString": "address" },
                                    { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                                  ],
                                  "expression": {
                                    "id": 44278,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3369:3:92",
                                    "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                  },
                                  "id": 44279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3373:6:92",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3369:10:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 44283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3369:36:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                              ],
                              "id": 44277,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3359:9:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 44284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3359:47:92",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }],
                          "expression": {
                            "id": 44275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3346:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 44274,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3346:5:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3352:6:92",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "3346:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3346:61:92",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }],
                      "id": 44273,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3336:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:72:92",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3321:87:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44289,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44258,
                        "src": "3473:5:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 44290,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44272,
                        "src": "3480:4:92",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "id": 44291,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44265,
                        "src": "3486:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata" }
                      ],
                      "id": 44288,
                      "name": "_checkClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44608,
                      "src": "3461:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes32,bytes32[] calldata) view"
                      }
                    },
                    "id": 44292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:37:92",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 44293,
                  "nodeType": "ExpressionStatement",
                  "src": "3461:37:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44297,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44258,
                        "src": "3575:5:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                      "expression": {
                        "id": 44294,
                        "name": "_claimedBitMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44398,
                        "src": "3556:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BitMap_$3801_storage",
                          "typeString": "struct BitMaps.BitMap storage ref"
                        }
                      },
                      "id": 44296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3571:3:92",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3896,
                      "src": "3556:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BitMap_$3801_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_BitMap_$3801_storage_ptr_$",
                        "typeString": "function (struct BitMaps.BitMap storage pointer,uint256)"
                      }
                    },
                    "id": 44298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:25:92",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 44299,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:25:92"
                },
                {
                  "expression": {
                    "id": 44323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44300,
                      "name": "streamId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44269,
                      "src": "3664:8:92",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44305,
                              "name": "ASSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44373,
                              "src": "3780:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$105",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 44309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3837:1:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                                    ],
                                    "id": 44308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3829:7:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 44307,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3829:7:92",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 44310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3829:10:92",
                                  "tryCall": false,
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 44312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3849:1:92",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                                    ],
                                    "id": 44311,
                                    "name": "ud",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9505,
                                    "src": "3846:2:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_userDefinedValueType$_UD60x18_$11046_$",
                                      "typeString": "function (uint256) pure returns (UD60x18)"
                                    }
                                  },
                                  "id": 44313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3846:5:92",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_UD60x18_$11046",
                                    "typeString": "UD60x18"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  {
                                    "typeIdentifier": "t_userDefinedValueType$_UD60x18_$11046",
                                    "typeString": "UD60x18"
                                  }
                                ],
                                "id": 44306,
                                "name": "Broker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18666,
                                "src": "3811:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Broker_$18666_storage_ptr_$",
                                  "typeString": "type(struct Broker storage pointer)"
                                }
                              },
                              "id": 44314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": ["3820:7:92", "3841:3:92"],
                              "names": ["account", "fee"],
                              "nodeType": "FunctionCall",
                              "src": "3811:43:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Broker_$18666_memory_ptr",
                                "typeString": "struct Broker memory"
                              }
                            },
                            {
                              "id": 44315,
                              "name": "CANCELABLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44377,
                              "src": "3884:10:92",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "id": 44316,
                              "name": "streamDurations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44200,
                              "src": "3923:15:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Durations_$18840_storage",
                                "typeString": "struct LockupLinear.Durations storage ref"
                              }
                            },
                            {
                              "id": 44317,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44260,
                              "src": "3967:9:92",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 44318,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15156,
                              "src": "4002:5:92",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 44319,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44262,
                              "src": "4038:6:92",
                              "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                            },
                            {
                              "id": 44320,
                              "name": "TRANSFERABLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44394,
                              "src": "4076:12:92",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IERC20_$105", "typeString": "contract IERC20" },
                              {
                                "typeIdentifier": "t_struct$_Broker_$18666_memory_ptr",
                                "typeString": "struct Broker memory"
                              },
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_struct$_Durations_$18840_storage",
                                "typeString": "struct LockupLinear.Durations storage ref"
                              },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_uint128", "typeString": "uint128" },
                              { "typeIdentifier": "t_bool", "typeString": "bool" }
                            ],
                            "expression": {
                              "id": 44303,
                              "name": "LockupLinear",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18875,
                              "src": "3722:12:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LockupLinear_$18875_$",
                                "typeString": "type(library LockupLinear)"
                              }
                            },
                            "id": 44304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3735:19:92",
                            "memberName": "CreateWithDurations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18813,
                            "src": "3722:32:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CreateWithDurations_$18813_storage_ptr_$",
                              "typeString": "type(struct LockupLinear.CreateWithDurations storage pointer)"
                            }
                          },
                          "id": 44321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3773:5:92",
                            "3803:6:92",
                            "3872:10:92",
                            "3912:9:92",
                            "3956:9:92",
                            "3994:6:92",
                            "4025:11:92",
                            "4062:12:92"
                          ],
                          "names": [
                            "asset",
                            "broker",
                            "cancelable",
                            "durations",
                            "recipient",
                            "sender",
                            "totalAmount",
                            "transferable"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3722:381:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateWithDurations_$18813_memory_ptr",
                            "typeString": "struct LockupLinear.CreateWithDurations memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_CreateWithDurations_$18813_memory_ptr",
                            "typeString": "struct LockupLinear.CreateWithDurations memory"
                          }
                        ],
                        "expression": {
                          "id": 44301,
                          "name": "LOCKUP_LINEAR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44195,
                          "src": "3675:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISablierV2LockupLinear_$17049",
                            "typeString": "contract ISablierV2LockupLinear"
                          }
                        },
                        "id": 44302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3689:19:92",
                        "memberName": "createWithDurations",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17039,
                        "src": "3675:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_CreateWithDurations_$18813_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct LockupLinear.CreateWithDurations memory) external returns (uint256)"
                        }
                      },
                      "id": 44322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3675:438:92",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "3664:449:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 44324,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:449:92"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44326,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44258,
                        "src": "4161:5:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 44327,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44260,
                        "src": "4168:9:92",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 44328,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44262,
                        "src": "4179:6:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                      },
                      {
                        "id": 44329,
                        "name": "streamId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44269,
                        "src": "4187:8:92",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint128", "typeString": "uint128" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 44325,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44711,
                      "src": "4155:5:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint128_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint128,uint256)"
                      }
                    },
                    "id": 44330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4155:41:92",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 44331,
                  "nodeType": "EmitStatement",
                  "src": "4150:46:92"
                }
              ]
            },
            "baseFunctions": [44895],
            "documentation": {
              "id": 44256,
              "nodeType": "StructuredDocumentation",
              "src": "2915:42:92",
              "text": "@inheritdoc ISablierV2MerkleStreamerLL"
            },
            "functionSelector": "3f31ae3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "2971:5:92",
            "overrides": { "id": 44267, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3122:8:92" },
            "parameters": {
              "id": 44266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44258,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2994:5:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44333,
                  "src": "2986:13:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 44257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44260,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3017:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44333,
                  "src": "3009:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 44259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44262,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3044:6:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44333,
                  "src": "3036:14:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" },
                  "typeName": {
                    "id": 44261,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44265,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "3079:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44333,
                  "src": "3060:30:92",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44263,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3060:7:92",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "id": 44264,
                    "nodeType": "ArrayTypeName",
                    "src": "3060:9:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2976:120:92"
            },
            "returnParameters": {
              "id": 44270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44269,
                  "mutability": "mutable",
                  "name": "streamId",
                  "nameLocation": "3156:8:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 44333,
                  "src": "3148:16:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 44268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:7:92",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3147:18:92"
            },
            "scope": 44334,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44179,
              "name": "ISablierV2MerkleStreamerLL",
              "nameLocations": ["858:26:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44896,
              "src": "858:26:92"
            },
            "id": 44180,
            "nodeType": "InheritanceSpecifier",
            "src": "858:26:92"
          },
          {
            "baseName": {
              "id": 44181,
              "name": "SablierV2MerkleStreamer",
              "nameLocations": ["916:23:92"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44609,
              "src": "916:23:92"
            },
            "id": 44182,
            "nodeType": "InheritanceSpecifier",
            "src": "916:23:92"
          }
        ],
        "canonicalName": "SablierV2MerkleStreamerLL",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44178,
          "nodeType": "StructuredDocumentation",
          "src": "712:104:92",
          "text": "@title SablierV2MerkleStreamerLL\n @notice See the documentation in {ISablierV2MerkleStreamerLL}."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [44334, 44609, 15198, 44896, 44781, 16394],
        "name": "SablierV2MerkleStreamerLL",
        "nameLocation": "825:25:92",
        "scope": 44335,
        "usedErrors": [17116, 44908, 44915, 44918, 44921, 44926],
        "usedEvents": [16381, 44711, 44720]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 92
}
