{
  "abi": [
    {
      "type": "function",
      "name": "createWithDurationsLD",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithDurationsLD[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "segmentsWithDuration",
              "type": "tuple[]",
              "internalType": "struct LockupDynamic.SegmentWithDuration[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
                { "name": "duration", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLL",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithDurationsLL[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "durations",
              "type": "tuple",
              "internalType": "struct LockupLinear.Durations",
              "components": [
                { "name": "cliff", "type": "uint40", "internalType": "uint40" },
                { "name": "total", "type": "uint40", "internalType": "uint40" }
              ]
            },
            {
              "name": "unlockAmounts",
              "type": "tuple",
              "internalType": "struct LockupLinear.UnlockAmounts",
              "components": [
                { "name": "start", "type": "uint128", "internalType": "uint128" },
                { "name": "cliff", "type": "uint128", "internalType": "uint128" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLT",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithDurationsLT[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "tranchesWithDuration",
              "type": "tuple[]",
              "internalType": "struct LockupTranched.TrancheWithDuration[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "duration", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLD",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithTimestampsLD[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "startTime", "type": "uint40", "internalType": "uint40" },
            {
              "name": "segments",
              "type": "tuple[]",
              "internalType": "struct LockupDynamic.Segment[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
                { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLL",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithTimestampsLL[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "cliffTime", "type": "uint40", "internalType": "uint40" },
            {
              "name": "unlockAmounts",
              "type": "tuple",
              "internalType": "struct LockupLinear.UnlockAmounts",
              "components": [
                { "name": "start", "type": "uint128", "internalType": "uint128" },
                { "name": "cliff", "type": "uint128", "internalType": "uint128" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLT",
      "inputs": [
        { "name": "lockup", "type": "address", "internalType": "contract ISablierLockup" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        {
          "name": "batch",
          "type": "tuple[]",
          "internalType": "struct BatchLockup.CreateWithTimestampsLT[]",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "startTime", "type": "uint40", "internalType": "uint40" },
            {
              "name": "tranches",
              "type": "tuple[]",
              "internalType": "struct LockupTranched.Tranche[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [{ "name": "target", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "SablierBatchLockup_BatchSizeZero", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x60808060405234601557611922908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806320462ba514610e225780634739fa8d14610b255780635e449ca814610813578063848c706c1461056c5780638f331574146102f95763bf4bb0dd1461005b575f80fd5b346102805761006936611098565b9283929192156102ea579092905f90815b8381106102b957506001600160a01b03610097911691858361166f565b6100a082611228565b926001600160a01b035f9516945b8381106100c757604051806100c38782611114565b0390f35b6100d281858461114d565b6100db9061125a565b906100e781868561114d565b6020016100f39061125a565b6100fe82878661114d565b60400161010a90611170565b61011583888761114d565b6060016101219061126e565b61012c84898861114d565b6080016101389061126e565b610143858a8961114d565b60c081016101509161127b565b92909361015e878c8b61114d565b60e001956040519861016f8a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b031660408801528b606088015215156080870152151560a086015236906101b5926112ca565b60c0840152366101c491611300565b60e08301526101d481868561114d565b60a081016101e1916114da565b9290604051938492630aef443360e01b8452600484016040905260448401610208916113ae565b83810360031901602485015281815260200191905f905b80821061029757505050908060209203815f885af1801561028c575f90610256575b6001925061024f82886114a3565b52016100ae565b506020823d8211610284575b8161026f602093836111ee565b810103126102805760019151610241565b5f80fd5b3d9150610262565b6040513d5f823e3d90fd5b91935091606080826102ab600194886115c3565b01940192018593929161021f565b916001906001600160801b036102de60406102d887898b9c9a9c61114d565b01611170565b1601920194929461007a565b630d86189d60e21b5f5260045ffd5b346102805761030736611098565b9283929192156102ea579091905f90815b85811061054257506001600160a01b03610335911691848361166f565b61033e84611228565b926001600160a01b03165f5b85811061035f57604051806100c38782611114565b61036a81878661164c565b6103739061125a565b9061037f81888761164c565b60200161038b9061125a565b61039682898861164c565b6040016103a290611170565b906103ae838a8961164c565b6060016103ba9061126e565b916103c6848b8a61164c565b6080016103d29061126e565b6103dd858c8b61164c565b61014001936103ed868d8c61164c565b61012081016103fb9161127b565b9390946040519861040b8a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b0316604088015287606088015215156080870152151560a08601523690610451926112ca565b60c08401523661046091611300565b60e08301528361047182898861164c565b60e00192610480838a8961164c565b604051626dd14360e11b815260a060048201529485928392906104a79060a48501906113ae565b91602484016104b59161162a565b6104c160a08201611464565b64ffffffffff16606484015260c0016104d990611464565b64ffffffffff16608483015203815a6020945f91f1801561028c575f90610510575b6001925061050982886114a3565b520161034a565b506020823d821161053a575b81610529602093836111ee565b8101031261028057600191516104fb565b3d915061051c565b916001906001600160801b0361056060406102d8878b8a9b9a61164c565b16019201939293610318565b346102805761057a36611098565b80929192156102ea57905f935f5b8381106107e857506001600160a01b036105a5911694828661166f565b6105ae82611228565b936001600160a01b035f9216915b8381106105d157604051806100c38882611114565b6105dc818587611607565b6105e59061125a565b906105f1818688611607565b6020016105fd9061125a565b918661060a838883611607565b60400161061690611170565b9187610623858285611607565b60600161062f9061126e565b61063a868386611607565b6080016106469061126e565b90610652878487611607565b958761065f818689611607565b610140810161066d9161127b565b95610679929198611607565b61016001986040519561068b876111d1565b6001600160a01b031686526001600160a01b031660208601526001600160801b0316604085015289606085015215156080840152151560a0830152609f1984360301604013610280576107889561071c61077d946107289360209761070c60c0604051926106f8846111b5565b61070460a08201611464565b845201611464565b8982015260c087015236916112ca565b60e08401523690611300565b6101008201528864ffffffffff61075a60e0610754888d61010061074d83838a611607565b0196611607565b01611510565b604051637a69584160e01b81526080600482015297889586956084870190611522565b93602486019061162a565b16606483015203815f875af1801561028c575f906107b6575b600192506107af82896114a3565b52016105bc565b506020823d82116107e0575b816107cf602093836111ee565b8101031261028057600191516107a1565b3d91506107c2565b946001906001600160801b0361080760406102d88a898b9a999a611607565b16019501929192610588565b346102805761082136611098565b9283929192156102ea579092905f90815b838110610afa57506001600160a01b0361084f911691858361166f565b61085882611228565b926001600160a01b035f9516945b83811061087b57604051806100c38782611114565b6108936108898286856114b7565b60c0810190611339565b6108a16108898488876114b7565b5f1901918210159050610ae65760061b016020016108be90611510565b906108ca8186856114b7565b6108d39061125a565b916108df8287866114b7565b6020016108eb9061125a565b906108f78388876114b7565b60400161090390611170565b9061090f8489886114b7565b60600161091b9061126e565b90610927858a896114b7565b6080016109339061126e565b61093e868b8a6114b7565b60a00161094a90611510565b9160405192610958846111b5565b64ffffffffff16835264ffffffffff166020830152610978868b8a6114b7565b60e081016109859161127b565b939094610993888d8c6114b7565b6101000196604051996109a58b6111d1565b6001600160a01b03168a526001600160a01b031660208a01526001600160801b031660408901528c606089015215156080880152151560a087015260c086015236906109f0926112ca565b60e0840152366109ff91611300565b610100830152610a108186856114b7565b60c08101610a1d91611339565b9290604051938492637ee2139160e01b8452600484016040905260448401610a4491611522565b83810360031901602485015281815260200191905f905b808210610ac457505050908060209203815f885af1801561028c575f90610a92575b60019250610a8b82886114a3565b5201610866565b506020823d8211610abc575b81610aab602093836111ee565b810103126102805760019151610a7d565b3d9150610a9e565b9193509160408082610ad860019488611476565b019401920185939291610a5b565b634e487b7160e01b5f52603260045260245ffd5b916001906001600160801b03610b1960406102d887898b9c9a9c6114b7565b16019201949294610832565b3461028057610b3336611098565b9283929192156102ea579092905f90815b838110610df757506001600160a01b03610b61911691858361166f565b610b6a82611228565b926001600160a01b035f9516945b838110610b8d57604051806100c38782611114565b610ba5610b9b8286856114b7565b60c08101906114da565b610bb3610b9b8488876114b7565b5f1901918210159050610ae65760600201604001610bd090611510565b90610bdc8186856114b7565b610be59061125a565b91610bf18287866114b7565b602001610bfd9061125a565b90610c098388876114b7565b604001610c1590611170565b90610c218489886114b7565b606001610c2d9061126e565b90610c39858a896114b7565b608001610c459061126e565b610c50868b8a6114b7565b60a001610c5c90611510565b9160405192610c6a846111b5565b64ffffffffff16835264ffffffffff166020830152610c8a868b8a6114b7565b60e08101610c979161127b565b939094610ca5888d8c6114b7565b610100019660405199610cb78b6111d1565b6001600160a01b03168a526001600160a01b031660208a01526001600160801b031660408901528c606089015215156080880152151560a087015260c08601523690610d02926112ca565b60e084015236610d1191611300565b610100830152610d228186856114b7565b60c08101610d2f916114da565b92906040519384926245781560e71b8452600484016040905260448401610d5591611522565b83810360031901602485015281815260200191905f905b808210610dd557505050908060209203815f885af1801561028c575f90610da3575b60019250610d9c82886114a3565b5201610b78565b506020823d8211610dcd575b81610dbc602093836111ee565b810103126102805760019151610d8e565b3d9150610daf565b9193509160608082610de9600194886115c3565b019401920185939291610d6c565b916001906001600160801b03610e1660406102d887898b9c9a9c6114b7565b16019201949294610b44565b3461028057610e3036611098565b9283929192156102ea579092905f90815b83811061106d57506001600160a01b03610e5e911691858361166f565b610e6782611228565b926001600160a01b035f9516945b838110610e8a57604051806100c38782611114565b610e9581858461114d565b610e9e9061125a565b90610eaa81868561114d565b602001610eb69061125a565b610ec182878661114d565b604001610ecd90611170565b610ed883888761114d565b606001610ee49061126e565b610eef84898861114d565b608001610efb9061126e565b610f06858a8961114d565b60c08101610f139161127b565b929093610f21878c8b61114d565b60e0019560405198610f328a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b031660408801528b606088015215156080870152151560a08601523690610f78926112ca565b60c084015236610f8791611300565b60e0830152610f9781868561114d565b60a08101610fa491611339565b929060405193849263deecd64f60e01b8452600484016040905260448401610fcb916113ae565b83810360031901602485015281815260200191905f905b80821061104b57505050908060209203815f885af1801561028c575f90611019575b6001925061101282886114a3565b5201610e75565b506020823d8211611043575b81611032602093836111ee565b810103126102805760019151611004565b3d9150611025565b919350916040808261105f60019488611476565b019401920185939291610fe2565b916001906001600160801b0361108c60406102d887898b9c9a9c61114d565b16019201949294610e41565b906060600319830112610280576004356001600160a01b038116810361028057916024356001600160a01b0381168103610280579160443567ffffffffffffffff81116102805760040182601f820112156102805780359267ffffffffffffffff8411610280576020808301928560051b010111610280579190565b60206040818301928281528451809452019201905f5b8181106111375750505090565b825184526020938401939092019160010161112a565b9190811015610ae65760051b8101359061011e1981360301821215610280570190565b356001600160801b03811681036102805790565b610100810190811067ffffffffffffffff8211176111a157604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff8211176111a157604052565b610120810190811067ffffffffffffffff8211176111a157604052565b90601f8019910116810190811067ffffffffffffffff8211176111a157604052565b67ffffffffffffffff81116111a15760051b60200190565b9061123282611210565b61123f60405191826111ee565b8281528092611250601f1991611210565b0190602036910137565b356001600160a01b03811681036102805790565b3580151581036102805790565b903590601e1981360301821215610280570180359067ffffffffffffffff82116102805760200191813603831361028057565b67ffffffffffffffff81116111a157601f01601f191660200190565b9291926112d6826112ae565b916112e460405193846111ee565b829481845281830111610280578281602093845f960137010152565b919082604091031261028057604051611318816111b5565b809280356001600160a01b0381168103610280578252602090810135910152565b903590601e1981360301821215610280570180359067ffffffffffffffff821161028057602001918160061b3603831361028057565b91908251928382525f5b848110611399575050825f602080949584010152601f8019910116010190565b80602080928401015182828601015201611379565b9061144d906001600160a01b0383511681526001600160a01b0360208401511660208201526001600160801b0360408401511660408201526001600160a01b03606084015116606082015260808301511515608082015260a0830151151560a082015260e08061142f60c086015161012060c086015261012085019061136f565b940151910190602080916001600160a01b0381511684520151910152565b90565b35906001600160801b038216820361028057565b359064ffffffffff8216820361028057565b64ffffffffff61149d602080936001600160801b0361149482611450565b16865201611464565b16910152565b8051821015610ae65760209160051b010190565b9190811015610ae65760051b8101359061013e1981360301821215610280570190565b903590601e1981360301821215610280570180359067ffffffffffffffff82116102805760200191606082023603831361028057565b3564ffffffffff811681036102805790565b9061144d906001600160a01b0383511681526001600160a01b0360208401511660208201526001600160801b0360408401511660408201526001600160a01b03606084015116606082015260808301511515608082015260a0830151151560a082015264ffffffffff602060c08501518281511660c085015201511660e082015261012061010061142f60e08601516101608386015261016085019061136f565b6001600160801b036115d482611450565b168252602081013567ffffffffffffffff81168091036102805761149d6040809364ffffffffff93602087015201611464565b9190811015610ae65760051b8101359061019e1981360301821215610280570190565b6001600160801b0361149d602080938361164382611450565b16865201611450565b9190811015610ae65760051b8101359061017e1981360301821215610280570190565b91906116ab6040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526116a56084826111ee565b82611820565b6001600160a01b0381166001600160a01b0360405194636eb1769f60e11b86523060048701521693846024820152602081604481855afa801561028c5784915f916117d3575b50106116fe575b50505050565b5f8060405194602086019063095ea7b360e01b825287602488015260448701526044865261172d6064876111ee565b85519082855af19061173d61188c565b826117a1575b5081611796575b5015611757575b806116f8565b61178961178e936040519063095ea7b360e01b602083015260248201525f6044820152604481526116a56064826111ee565b611820565b5f8080611751565b90503b15155f61174a565b805191925081159182156117b9575b5050905f611743565b6117cc9250602080918301019101611808565b5f806117b0565b9150506020813d602011611800575b816117ef602093836111ee565b81010312610280578390515f6116f1565b3d91506117e2565b90816020910312610280575180151581036102805790565b5f806001600160a01b0361184993169360208151910182865af161184261188c565b90836118bb565b8051908115159182611871575b505061185f5750565b635274afe760e01b5f5260045260245ffd5b6118849250602080918301019101611808565b155f80611856565b3d156118b6573d9061189d826112ae565b916118ab60405193846111ee565b82523d5f602084013e565b606090565b906118df57508051156118d057805190602001fd5b630a12f52160e11b5f5260045ffd5b8151158061190c575b6118f0575090565b6001600160a01b0390639996b31560e01b5f521660045260245ffd5b50803b156118e856fea164736f6c634300081a000a",
    "sourceMap": "2832:13497:78:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806320462ba514610e225780634739fa8d14610b255780635e449ca814610813578063848c706c1461056c5780638f331574146102f95763bf4bb0dd1461005b575f80fd5b346102805761006936611098565b9283929192156102ea579092905f90815b8381106102b957506001600160a01b03610097911691858361166f565b6100a082611228565b926001600160a01b035f9516945b8381106100c757604051806100c38782611114565b0390f35b6100d281858461114d565b6100db9061125a565b906100e781868561114d565b6020016100f39061125a565b6100fe82878661114d565b60400161010a90611170565b61011583888761114d565b6060016101219061126e565b61012c84898861114d565b6080016101389061126e565b610143858a8961114d565b60c081016101509161127b565b92909361015e878c8b61114d565b60e001956040519861016f8a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b031660408801528b606088015215156080870152151560a086015236906101b5926112ca565b60c0840152366101c491611300565b60e08301526101d481868561114d565b60a081016101e1916114da565b9290604051938492630aef443360e01b8452600484016040905260448401610208916113ae565b83810360031901602485015281815260200191905f905b80821061029757505050908060209203815f885af1801561028c575f90610256575b6001925061024f82886114a3565b52016100ae565b506020823d8211610284575b8161026f602093836111ee565b810103126102805760019151610241565b5f80fd5b3d9150610262565b6040513d5f823e3d90fd5b91935091606080826102ab600194886115c3565b01940192018593929161021f565b916001906001600160801b036102de60406102d887898b9c9a9c61114d565b01611170565b1601920194929461007a565b630d86189d60e21b5f5260045ffd5b346102805761030736611098565b9283929192156102ea579091905f90815b85811061054257506001600160a01b03610335911691848361166f565b61033e84611228565b926001600160a01b03165f5b85811061035f57604051806100c38782611114565b61036a81878661164c565b6103739061125a565b9061037f81888761164c565b60200161038b9061125a565b61039682898861164c565b6040016103a290611170565b906103ae838a8961164c565b6060016103ba9061126e565b916103c6848b8a61164c565b6080016103d29061126e565b6103dd858c8b61164c565b61014001936103ed868d8c61164c565b61012081016103fb9161127b565b9390946040519861040b8a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b0316604088015287606088015215156080870152151560a08601523690610451926112ca565b60c08401523661046091611300565b60e08301528361047182898861164c565b60e00192610480838a8961164c565b604051626dd14360e11b815260a060048201529485928392906104a79060a48501906113ae565b91602484016104b59161162a565b6104c160a08201611464565b64ffffffffff16606484015260c0016104d990611464565b64ffffffffff16608483015203815a6020945f91f1801561028c575f90610510575b6001925061050982886114a3565b520161034a565b506020823d821161053a575b81610529602093836111ee565b8101031261028057600191516104fb565b3d915061051c565b916001906001600160801b0361056060406102d8878b8a9b9a61164c565b16019201939293610318565b346102805761057a36611098565b80929192156102ea57905f935f5b8381106107e857506001600160a01b036105a5911694828661166f565b6105ae82611228565b936001600160a01b035f9216915b8381106105d157604051806100c38882611114565b6105dc818587611607565b6105e59061125a565b906105f1818688611607565b6020016105fd9061125a565b918661060a838883611607565b60400161061690611170565b9187610623858285611607565b60600161062f9061126e565b61063a868386611607565b6080016106469061126e565b90610652878487611607565b958761065f818689611607565b610140810161066d9161127b565b95610679929198611607565b61016001986040519561068b876111d1565b6001600160a01b031686526001600160a01b031660208601526001600160801b0316604085015289606085015215156080840152151560a0830152609f1984360301604013610280576107889561071c61077d946107289360209761070c60c0604051926106f8846111b5565b61070460a08201611464565b845201611464565b8982015260c087015236916112ca565b60e08401523690611300565b6101008201528864ffffffffff61075a60e0610754888d61010061074d83838a611607565b0196611607565b01611510565b604051637a69584160e01b81526080600482015297889586956084870190611522565b93602486019061162a565b16606483015203815f875af1801561028c575f906107b6575b600192506107af82896114a3565b52016105bc565b506020823d82116107e0575b816107cf602093836111ee565b8101031261028057600191516107a1565b3d91506107c2565b946001906001600160801b0361080760406102d88a898b9a999a611607565b16019501929192610588565b346102805761082136611098565b9283929192156102ea579092905f90815b838110610afa57506001600160a01b0361084f911691858361166f565b61085882611228565b926001600160a01b035f9516945b83811061087b57604051806100c38782611114565b6108936108898286856114b7565b60c0810190611339565b6108a16108898488876114b7565b5f1901918210159050610ae65760061b016020016108be90611510565b906108ca8186856114b7565b6108d39061125a565b916108df8287866114b7565b6020016108eb9061125a565b906108f78388876114b7565b60400161090390611170565b9061090f8489886114b7565b60600161091b9061126e565b90610927858a896114b7565b6080016109339061126e565b61093e868b8a6114b7565b60a00161094a90611510565b9160405192610958846111b5565b64ffffffffff16835264ffffffffff166020830152610978868b8a6114b7565b60e081016109859161127b565b939094610993888d8c6114b7565b6101000196604051996109a58b6111d1565b6001600160a01b03168a526001600160a01b031660208a01526001600160801b031660408901528c606089015215156080880152151560a087015260c086015236906109f0926112ca565b60e0840152366109ff91611300565b610100830152610a108186856114b7565b60c08101610a1d91611339565b9290604051938492637ee2139160e01b8452600484016040905260448401610a4491611522565b83810360031901602485015281815260200191905f905b808210610ac457505050908060209203815f885af1801561028c575f90610a92575b60019250610a8b82886114a3565b5201610866565b506020823d8211610abc575b81610aab602093836111ee565b810103126102805760019151610a7d565b3d9150610a9e565b9193509160408082610ad860019488611476565b019401920185939291610a5b565b634e487b7160e01b5f52603260045260245ffd5b916001906001600160801b03610b1960406102d887898b9c9a9c6114b7565b16019201949294610832565b3461028057610b3336611098565b9283929192156102ea579092905f90815b838110610df757506001600160a01b03610b61911691858361166f565b610b6a82611228565b926001600160a01b035f9516945b838110610b8d57604051806100c38782611114565b610ba5610b9b8286856114b7565b60c08101906114da565b610bb3610b9b8488876114b7565b5f1901918210159050610ae65760600201604001610bd090611510565b90610bdc8186856114b7565b610be59061125a565b91610bf18287866114b7565b602001610bfd9061125a565b90610c098388876114b7565b604001610c1590611170565b90610c218489886114b7565b606001610c2d9061126e565b90610c39858a896114b7565b608001610c459061126e565b610c50868b8a6114b7565b60a001610c5c90611510565b9160405192610c6a846111b5565b64ffffffffff16835264ffffffffff166020830152610c8a868b8a6114b7565b60e08101610c979161127b565b939094610ca5888d8c6114b7565b610100019660405199610cb78b6111d1565b6001600160a01b03168a526001600160a01b031660208a01526001600160801b031660408901528c606089015215156080880152151560a087015260c08601523690610d02926112ca565b60e084015236610d1191611300565b610100830152610d228186856114b7565b60c08101610d2f916114da565b92906040519384926245781560e71b8452600484016040905260448401610d5591611522565b83810360031901602485015281815260200191905f905b808210610dd557505050908060209203815f885af1801561028c575f90610da3575b60019250610d9c82886114a3565b5201610b78565b506020823d8211610dcd575b81610dbc602093836111ee565b810103126102805760019151610d8e565b3d9150610daf565b9193509160608082610de9600194886115c3565b019401920185939291610d6c565b916001906001600160801b03610e1660406102d887898b9c9a9c6114b7565b16019201949294610b44565b3461028057610e3036611098565b9283929192156102ea579092905f90815b83811061106d57506001600160a01b03610e5e911691858361166f565b610e6782611228565b926001600160a01b035f9516945b838110610e8a57604051806100c38782611114565b610e9581858461114d565b610e9e9061125a565b90610eaa81868561114d565b602001610eb69061125a565b610ec182878661114d565b604001610ecd90611170565b610ed883888761114d565b606001610ee49061126e565b610eef84898861114d565b608001610efb9061126e565b610f06858a8961114d565b60c08101610f139161127b565b929093610f21878c8b61114d565b60e0019560405198610f328a611184565b6001600160a01b031689526001600160a01b031660208901526001600160801b031660408801528b606088015215156080870152151560a08601523690610f78926112ca565b60c084015236610f8791611300565b60e0830152610f9781868561114d565b60a08101610fa491611339565b929060405193849263deecd64f60e01b8452600484016040905260448401610fcb916113ae565b83810360031901602485015281815260200191905f905b80821061104b57505050908060209203815f885af1801561028c575f90611019575b6001925061101282886114a3565b5201610e75565b506020823d8211611043575b81611032602093836111ee565b810103126102805760019151611004565b3d9150611025565b919350916040808261105f60019488611476565b019401920185939291610fe2565b916001906001600160801b0361108c60406102d887898b9c9a9c61114d565b16019201949294610e41565b906060600319830112610280576004356001600160a01b038116810361028057916024356001600160a01b0381168103610280579160443567ffffffffffffffff81116102805760040182601f820112156102805780359267ffffffffffffffff8411610280576020808301928560051b010111610280579190565b60206040818301928281528451809452019201905f5b8181106111375750505090565b825184526020938401939092019160010161112a565b9190811015610ae65760051b8101359061011e1981360301821215610280570190565b356001600160801b03811681036102805790565b610100810190811067ffffffffffffffff8211176111a157604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff8211176111a157604052565b610120810190811067ffffffffffffffff8211176111a157604052565b90601f8019910116810190811067ffffffffffffffff8211176111a157604052565b67ffffffffffffffff81116111a15760051b60200190565b9061123282611210565b61123f60405191826111ee565b8281528092611250601f1991611210565b0190602036910137565b356001600160a01b03811681036102805790565b3580151581036102805790565b903590601e1981360301821215610280570180359067ffffffffffffffff82116102805760200191813603831361028057565b67ffffffffffffffff81116111a157601f01601f191660200190565b9291926112d6826112ae565b916112e460405193846111ee565b829481845281830111610280578281602093845f960137010152565b919082604091031261028057604051611318816111b5565b809280356001600160a01b0381168103610280578252602090810135910152565b903590601e1981360301821215610280570180359067ffffffffffffffff821161028057602001918160061b3603831361028057565b91908251928382525f5b848110611399575050825f602080949584010152601f8019910116010190565b80602080928401015182828601015201611379565b9061144d906001600160a01b0383511681526001600160a01b0360208401511660208201526001600160801b0360408401511660408201526001600160a01b03606084015116606082015260808301511515608082015260a0830151151560a082015260e08061142f60c086015161012060c086015261012085019061136f565b940151910190602080916001600160a01b0381511684520151910152565b90565b35906001600160801b038216820361028057565b359064ffffffffff8216820361028057565b64ffffffffff61149d602080936001600160801b0361149482611450565b16865201611464565b16910152565b8051821015610ae65760209160051b010190565b9190811015610ae65760051b8101359061013e1981360301821215610280570190565b903590601e1981360301821215610280570180359067ffffffffffffffff82116102805760200191606082023603831361028057565b3564ffffffffff811681036102805790565b9061144d906001600160a01b0383511681526001600160a01b0360208401511660208201526001600160801b0360408401511660408201526001600160a01b03606084015116606082015260808301511515608082015260a0830151151560a082015264ffffffffff602060c08501518281511660c085015201511660e082015261012061010061142f60e08601516101608386015261016085019061136f565b6001600160801b036115d482611450565b168252602081013567ffffffffffffffff81168091036102805761149d6040809364ffffffffff93602087015201611464565b9190811015610ae65760051b8101359061019e1981360301821215610280570190565b6001600160801b0361149d602080938361164382611450565b16865201611450565b9190811015610ae65760051b8101359061017e1981360301821215610280570190565b91906116ab6040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526116a56084826111ee565b82611820565b6001600160a01b0381166001600160a01b0360405194636eb1769f60e11b86523060048701521693846024820152602081604481855afa801561028c5784915f916117d3575b50106116fe575b50505050565b5f8060405194602086019063095ea7b360e01b825287602488015260448701526044865261172d6064876111ee565b85519082855af19061173d61188c565b826117a1575b5081611796575b5015611757575b806116f8565b61178961178e936040519063095ea7b360e01b602083015260248201525f6044820152604481526116a56064826111ee565b611820565b5f8080611751565b90503b15155f61174a565b805191925081159182156117b9575b5050905f611743565b6117cc9250602080918301019101611808565b5f806117b0565b9150506020813d602011611800575b816117ef602093836111ee565b81010312610280578390515f6116f1565b3d91506117e2565b90816020910312610280575180151581036102805790565b5f806001600160a01b0361184993169360208151910182865af161184261188c565b90836118bb565b8051908115159182611871575b505061185f5750565b635274afe760e01b5f5260045260245ffd5b6118849250602080918301019101611808565b155f80611856565b3d156118b6573d9061189d826112ae565b916118ab60405193846111ee565b82523d5f602084013e565b606090565b906118df57508051156118d057805190602001fd5b630a12f52160e11b5f5260045ffd5b8151158061190c575b6118f0575090565b6001600160a01b0390639996b31560e01b5f521660045260245ffd5b50803b156118e856fea164736f6c634300081a000a",
    "sourceMap": "2832:13497:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3518:14;;;;;;3514:93;;3793:9;;;2832:13497;;;3856:13;;;;;;2832:13497;-1:-1:-1;;;;;4129:14:78;2832:13497;;4129:14;;;;:::i;:::-;4235:24;;;:::i;:::-;4274:5;-1:-1:-1;;;;;2832:13497:78;;;4269:642;4281:13;;;;;;2832:13497;;;;;;;:::i;:::-;;;;4296:3;4467:8;;;;;:::i;:::-;:15;;;:::i;:::-;4515:8;;;;;;:::i;:::-;:18;;;;;:::i;:::-;4568:8;;;;;:::i;:::-;2832:13497;4568:20;;;;:::i;:::-;4656:8;;;;;:::i;:::-;:19;;;;;:::i;:::-;4711:8;;;;;:::i;:::-;:21;;;;;:::i;:::-;4761:8;;;;;:::i;:::-;:14;;;;;;:::i;:::-;4805:8;;;;;;;;:::i;:::-;2832:13497;4805:15;2832:13497;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;4515:18;4410:429;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;4410:429;;2832:13497;4410:429;4656:19;4410:429;;2832:13497;;;4711:21;4410:429;;2832:13497;;;4410:429;;;2832:13497;;;;;;:::i;:::-;4761:14;4410:429;;2832:13497;;;;;:::i;:::-;;4410:429;;2832:13497;4857:8;;;;;:::i;:::-;4410:429;4857:29;;;;;:::i;:::-;2832:13497;;;;;;;;;;4364:536;;2832:13497;4364:536;;2832:13497;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2832:13497:78;;;;;;;;4515:18;2832:13497;;;;;;;;;;;4364:536;;;;;4515:18;4364:536;;;2832:13497;4364:536;;;;;;;2832:13497;4364:536;;;2832:13497;;4349:551;;;;;;:::i;:::-;2832:13497;;4274:5;;4364:536;;4515:18;4364:536;;;;;;;;;2832:13497;4364:536;;;:::i;:::-;;;2832:13497;;;;;;;4364:536;;2832:13497;;;;4364:536;;;-1:-1:-1;4364:536:78;;;2832:13497;;;;;;;;;;;;;;4656:19;2832:13497;;;;;;;:::i;:::-;;;;;;;;;;;;3871:3;3936:8;2832:13497;3936:8;-1:-1:-1;;;;;3936:20:78;2832:13497;3936:8;;;;;;;;:::i;:::-;:20;;:::i;:::-;2832:13497;;3871:3;2832:13497;3849:5;;;;;3514:93;11525:41;;;2832:13497;3555:41;2832:13497;;3555:41;2832:13497;;;;;;;:::i;:::-;7592:14;;;;;;7588:93;;7867:9;;;2832:13497;;;7930:13;;;;;;2832:13497;-1:-1:-1;;;;;8203:14:78;2832:13497;;8203:14;;;;:::i;:::-;8309:24;;;:::i;:::-;8348:5;-1:-1:-1;;;;;2832:13497:78;;8355:13;;;;;;2832:13497;;;;;;;:::i;8370:3::-;8541:8;;;;;:::i;:::-;:15;;;:::i;:::-;8589:8;;;;;;:::i;:::-;:18;;;;;:::i;:::-;8642:8;;;;;:::i;:::-;2832:13497;8642:20;;;;:::i;:::-;8730:8;;;;;;:::i;:::-;:19;;;;;:::i;:::-;8785:8;;;;;;:::i;:::-;:21;;;;;:::i;:::-;8836:8;;;;;:::i;:::-;:15;;8880:8;;;;;;:::i;:::-;:14;;;;;;:::i;:::-;2832:13497;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;8589:18;8484:429;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;8484:429;;2832:13497;8484:429;8730:19;8484:429;;2832:13497;;;8785:21;8484:429;;2832:13497;;;8484:429;;;2832:13497;;;;;;:::i;:::-;8484:429;;;2832:13497;;;;;:::i;:::-;;8484:429;;2832:13497;8931:8;;;;;;:::i;:::-;2832:13497;8931:22;8971:8;;;;;;:::i;:::-;2832:13497;;-1:-1:-1;;;8438:565:78;;8484:429;2832:13497;8438:565;;2832:13497;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;8484:429;8971:18;;2832:13497;:::i;:::-;;;;;;;8484:429;2832:13497;;;;:::i;:::-;;;;;;;8438:565;;;8589:18;8438:565;2832:13497;8438:565;;;;;;2832:13497;8438:565;;;8370:3;2832:13497;8423:580;;;;;;:::i;:::-;2832:13497;;8348:5;;8438:565;;8589:18;8438:565;;;;;;;;;2832:13497;8438:565;;;:::i;:::-;;;2832:13497;;;;;;;8438:565;;;;;-1:-1:-1;8438:565:78;;7945:3;8010:8;2832:13497;8010:8;-1:-1:-1;;;;;8010:20:78;2832:13497;8010:8;;;;;;;:::i;:20::-;2832:13497;;7945:3;2832:13497;7923:5;;;;;2832:13497;;;;;;;:::i;:::-;9403:14;;;;;9399:93;;9678:9;2832:13497;9734:5;2832:13497;9741:13;;;;;;2832:13497;-1:-1:-1;;;;;10014:14:78;2832:13497;;10014:14;;;;:::i;:::-;10120:24;;;:::i;:::-;10159:5;-1:-1:-1;;;;;2832:13497:78;;;10154:726;10166:13;;;;;;2832:13497;;;;;;;:::i;10181:3::-;10354:8;;;;;:::i;:::-;:15;;;:::i;:::-;10402:8;;;;;;:::i;:::-;:18;;;;;:::i;:::-;10455:8;;;;;;;:::i;:::-;2832:13497;10455:20;;;;:::i;:::-;10543:8;;;;;;;:::i;:::-;:19;;;;;:::i;:::-;10598:8;;;;;:::i;:::-;:21;;;;;:::i;:::-;10653:8;;;;;;:::i;:::-;10701;;;;;;;:::i;:::-;:14;;;;;;:::i;:::-;10745:8;;;;;;:::i;:::-;:15;;2832:13497;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;10402:18;10296:483;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;10296:483;;2832:13497;10296:483;10543:19;10296:483;;2832:13497;;;10598:21;10296:483;;2832:13497;;;10653:19;10296:483;;2832:13497;;;;;;;;-1:-1:-1;2832:13497:78;;;;;;;;;10402:18;2832:13497;;10296:483;2832:13497;;;;;;:::i;:::-;;10653:19;;;2832:13497;:::i;:::-;;;;;:::i;:::-;;;;;10296:483;;;2832:13497;;;;:::i;:::-;;10296:483;;2832:13497;;;;:::i;:::-;10296:483;;;2832:13497;10797:8;2832:13497;10837:18;2832:13497;10837:8;10797;;10296:483;10797:8;;;;;:::i;:::-;:22;10837:8;;:::i;:::-;:18;;:::i;:::-;2832:13497;;-1:-1:-1;;;10249:620:78;;10598:21;2832:13497;10249:620;;2832:13497;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;10249:620;;2832:13497;10249:620;;;;;;;2832:13497;10249:620;;;10181:3;2832:13497;10234:635;;;;;;:::i;:::-;2832:13497;;10159:5;;10249:620;;10402:18;10249:620;;;;;;;;;2832:13497;10249:620;;;:::i;:::-;;;2832:13497;;;;;;;10249:620;;;;;-1:-1:-1;10249:620:78;;9756:3;9821:8;2832:13497;9821:8;-1:-1:-1;;;;;9821:20:78;2832:13497;9821:8;;;;;;;;:::i;:20::-;2832:13497;;9756:3;2832:13497;9734:5;;;;;2832:13497;;;;;;;:::i;:::-;13274:14;;;;;;13270:93;;13549:9;;;2832:13497;;;13612:13;;;;;;2832:13497;-1:-1:-1;;;;;13885:14:78;2832:13497;;13885:14;;;;:::i;:::-;14016:24;;;:::i;:::-;14055:5;-1:-1:-1;;;;;2832:13497:78;;;14050:905;14062:13;;;;;;2832:13497;;;;;;;:::i;14077:3::-;14187:17;:8;;;;;:::i;:::-;:17;;;;;:::i;:::-;14205;:8;;;;;:::i;:17::-;-1:-1:-1;;2832:13497:78;;;;;;-1:-1:-1;2832:13497:78;;;;;14187:57;;;;;:::i;:::-;14427:8;;;;;;:::i;:::-;:15;;;:::i;:::-;14475:8;;;;;;:::i;:::-;14187:57;14475:18;;;;:::i;:::-;14528:8;;;;;;:::i;:::-;2832:13497;14528:20;;;;:::i;:::-;14616:8;;;;;;:::i;:::-;:19;;;;;:::i;:::-;14671:8;;;;;;:::i;:::-;:21;;;;;:::i;:::-;14753:8;;;;;:::i;:::-;:18;;;;;:::i;:::-;2832:13497;;;;;;;:::i;:::-;;;;;;;14187:57;14726:62;;2832:13497;14817:8;;;;;:::i;:::-;2832:13497;14817:14;;;;;:::i;:::-;14861:8;;;;;;;;:::i;:::-;:15;;2832:13497;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;14187:57;14369:526;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;14369:526;;2832:13497;14369:526;14616:19;14369:526;;2832:13497;;;14671:21;14369:526;;2832:13497;;;14753:18;14369:526;;2832:13497;14187:17;14369:526;;2832:13497;;;;;;:::i;:::-;;14369:526;;2832:13497;;;;;:::i;:::-;14861:15;14369:526;;2832:13497;14913:8;;;;;:::i;:::-;14187:17;14913;;;;;:::i;:::-;2832:13497;;;;;;;;;;14322:622;;2832:13497;14322:622;;2832:13497;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2832:13497:78;;;;;;;;14187:57;2832:13497;;;;;;;;;;;14322:622;;;;;14187:57;14322:622;;;2832:13497;14322:622;;;;;;;2832:13497;14322:622;;;2832:13497;;14307:637;;;;;;:::i;:::-;2832:13497;;14055:5;;14322:622;;14187:57;14322:622;;;;;;;;;2832:13497;14322:622;;;:::i;:::-;;;2832:13497;;;;;;;14322:622;;;;;-1:-1:-1;14322:622:78;;2832:13497;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;13627:3;13692:8;2832:13497;13692:8;-1:-1:-1;;;;;13692:20:78;2832:13497;13692:8;;;;;;;;:::i;:20::-;2832:13497;;13627:3;2832:13497;13605:5;;;;;2832:13497;;;;;;;:::i;:::-;5304:14;;;;;;5300:93;;5579:9;;;2832:13497;;;5642:13;;;;;;2832:13497;-1:-1:-1;;;;;5915:14:78;2832:13497;;5915:14;;;;:::i;:::-;6046:24;;;:::i;:::-;6085:5;-1:-1:-1;;;;;2832:13497:78;;;6080:905;6092:13;;;;;;2832:13497;;;;;;;:::i;6107:3::-;6217:17;:8;;;;;:::i;:::-;:17;;;;;:::i;:::-;6235;:8;;;;;:::i;:17::-;-1:-1:-1;;2832:13497:78;;;;;;-1:-1:-1;2832:13497:78;;;;;;6217:57;;;;:::i;:::-;6457:8;;;;;;:::i;:::-;:15;;;:::i;:::-;6505:8;;;;;;:::i;:::-;:18;;;;;:::i;:::-;6558:8;;;;;;:::i;:::-;2832:13497;6558:20;;;;:::i;:::-;6646:8;;;;;;:::i;:::-;2832:13497;6646:19;;;;:::i;:::-;6701:8;;;;;;:::i;:::-;:21;;;;;:::i;:::-;6783:8;;;;;:::i;:::-;:18;;;;;:::i;:::-;2832:13497;;;;;;;:::i;:::-;;;;;;;6505:18;6756:62;;2832:13497;6847:8;;;;;:::i;:::-;2832:13497;6847:14;;;;;:::i;:::-;6891:8;;;;;;;;:::i;:::-;:15;;2832:13497;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;6505:18;6399:526;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;6399:526;;2832:13497;6399:526;2832:13497;6399:526;;2832:13497;;;6701:21;6399:526;;2832:13497;;;6783:18;6399:526;;2832:13497;6217:17;6399:526;;2832:13497;;;;;;:::i;:::-;;6399:526;;2832:13497;;;;;:::i;:::-;6891:15;6399:526;;2832:13497;6943:8;;;;;:::i;:::-;6217:17;6943;;;;;:::i;:::-;2832:13497;;;;;;;;;;6352:622;;2832:13497;6352:622;;2832:13497;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2832:13497:78;;;;;;;;6505:18;2832:13497;;;;;;;;;;;6352:622;;;;;6505:18;6352:622;;;2832:13497;6352:622;;;;;;;2832:13497;6352:622;;;2832:13497;;6337:637;;;;;;:::i;:::-;2832:13497;;6085:5;;6352:622;;6505:18;6352:622;;;;;;;;;2832:13497;6352:622;;;:::i;:::-;;;2832:13497;;;;;;;6352:622;;;;;-1:-1:-1;6352:622:78;;2832:13497;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5657:3;5722:8;2832:13497;5722:8;-1:-1:-1;;;;;5722:20:78;2832:13497;5722:8;;;;;;;;:::i;:20::-;2832:13497;;5657:3;2832:13497;5635:5;;;;;2832:13497;;;;;;;:::i;:::-;11488:14;;;;;;11484:93;;11763:9;;;2832:13497;;;11826:13;;;;;;2832:13497;-1:-1:-1;;;;;12099:14:78;2832:13497;;12099:14;;;;:::i;:::-;12205:24;;;:::i;:::-;12244:5;-1:-1:-1;;;;;2832:13497:78;;;12239:642;12251:13;;;;;;2832:13497;;;;;;;:::i;12266:3::-;12437:8;;;;;:::i;:::-;:15;;;:::i;:::-;12485:8;;;;;;:::i;:::-;:18;;;;;:::i;:::-;12538:8;;;;;:::i;:::-;2832:13497;12538:20;;;;:::i;:::-;12626:8;;;;;:::i;:::-;:19;;;;;:::i;:::-;12681:8;;;;;:::i;:::-;:21;;;;;:::i;:::-;12731:8;;;;;:::i;:::-;:14;;;;;;:::i;:::-;12775:8;;;;;;;;:::i;:::-;2832:13497;12775:15;2832:13497;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;-1:-1:-1;;;;;2832:13497:78;12485:18;12380:429;;2832:13497;-1:-1:-1;;;;;2832:13497:78;;12380:429;;2832:13497;12380:429;12626:19;12380:429;;2832:13497;;;12681:21;12380:429;;2832:13497;;;12380:429;;;2832:13497;;;;;;:::i;:::-;12731:14;12380:429;;2832:13497;;;;;:::i;:::-;;12380:429;;2832:13497;12827:8;;;;;:::i;:::-;12380:429;12827:29;;;;;:::i;:::-;2832:13497;;;;;;;;;;12334:536;;2832:13497;12334:536;;2832:13497;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2832:13497:78;;;;;;;;12485:18;2832:13497;;;;;;;;;;;12334:536;;;;;12485:18;12334:536;;;2832:13497;12334:536;;;;;;;2832:13497;12334:536;;;2832:13497;;12319:551;;;;;;:::i;:::-;2832:13497;;12244:5;;12334:536;;12485:18;12334:536;;;;;;;;;2832:13497;12334:536;;;:::i;:::-;;;2832:13497;;;;;;;12334:536;;;;;-1:-1:-1;12334:536:78;;2832:13497;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;11841:3;11906:8;2832:13497;11906:8;-1:-1:-1;;;;;11906:20:78;2832:13497;11906:8;;;;;;;;:::i;:20::-;2832:13497;;11841:3;2832:13497;11819:5;;;;;2832:13497;;;-1:-1:-1;;2832:13497:78;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;2832:13497:78;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;2832:13497:78;;;;;-1:-1:-1;2832:13497:78;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;2832:13497:78;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;2832:13497:78;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2832:13497:78;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;2832:13497:78;;;;;;;;;-1:-1:-1;2832:13497:78;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2832:13497:78;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;;;;2832:13497:78;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2832:13497:78;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;-1:-1:-1;;;;;2832:13497:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;2832:13497:78;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15995:332::-;;;1829:53:7;2832:13497:78;;;;;1829:53:7;;;;16176:10:78;1829:53:7;;;2832:13497:78;16200:4;2832:13497;;;;;;;;;;1829:53:7;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;2832:13497:78;;-1:-1:-1;;;;;2832:13497:78;;;;;;15679:58;;16200:4;15679:58;;;2832:13497;;;;1829:53:7;2832:13497:78;;;1829:53:7;15679:58:78;2832:13497;15679:58;;;;;;;;;;-1:-1:-1;15679:58:78;;;15995:332;15751:18;;15747:103;;15995:332;;;;;:::o;15747:103::-;-1:-1:-1;2832:13497:78;;;3411:47:7;1829:53;3411:47;;2832:13497:78;;;;3411:47:7;;;1829:53;3411:47;;2832:13497:78;;;;;;3411:47:7;;;2832:13497:78;3411:47:7;;:::i;:::-;5615:25;;;;;;;;;;:::i;:::-;5657:69;;;15747:103:78;5657::7;;;;15747::78;3473:45:7;;3469:201;;15747:103:78;;;;3469:201:7;3561:43;3646:12;2832:13497:78;;;;;;;1829:53:7;3561:43;;;1829:53;3561:43;;2832:13497:78;-1:-1:-1;2832:13497:78;;;;;3561:43:7;;;2832:13497:78;3561:43:7;;:::i;:::-;3646:12;:::i;:::-;3469:201;;;;;5657:103;5730:26;;;:30;;5657:103;;;:69;2832:13497:78;;;;-1:-1:-1;5669:22:7;;;:56;;;;5657:69;;;;;;;5669:56;5695:30;;;1829:53;5695:30;;;;;;;;:::i;:::-;5669:56;;;;15679:58:78;;;;1829:53:7;15679:58:78;;1829:53:7;15679:58:78;;;;;;2832:13497;15679:58;;;:::i;:::-;;;2832:13497;;;;;;;15679:58;;;;;;-1:-1:-1;15679:58:78;;2832:13497;;;;;;;;;;;;;;;;;;:::o;4059:629:7:-;2847:1:12;4059:629:7;-1:-1:-1;;;;;3510:55:12;4059:629:7;2832:13497:78;3462:31:12;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;2832:13497:78;;4551:22:7;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;4631:40;;;2847:1:12;4631:40:7;;2832:13497:78;;2847:1:12;4631:40:7;4551:57;4578:30;;;3462:31:12;4578:30:7;;;;;;;;:::i;:::-;4577:31;4551:57;;;;2832:13497:78;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;2832:13497:78;;;;:::o;:::-;;;:::o;4625:582:12:-;;4797:8;;-1:-1:-1;2832:13497:78;;5874:21:12;:17;;6046:142;;;;;;5870:383;6225:17;;;5894:1;6225:17;;5894:1;6225:17;4793:408;2832:13497:78;;5045:22:12;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;-1:-1:-1;;;;;5121:24:12;;;;5066:1;5121:24;2832:13497:78;5121:24:12;2832:13497:78;;5066:1:12;5121:24;5045:49;5071:18;;;:23;5045:49;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createWithDurationsLD(address,address,(address,address,uint128,bool,bool,(uint128,uint64,uint40)[],string,(address,uint256))[])": "bf4bb0dd",
    "createWithDurationsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(uint128,uint128),string,(address,uint256))[])": "8f331574",
    "createWithDurationsLT(address,address,(address,address,uint128,bool,bool,(uint128,uint40)[],string,(address,uint256))[])": "20462ba5",
    "createWithTimestampsLD(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint64,uint40)[],string,(address,uint256))[])": "4739fa8d",
    "createWithTimestampsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),uint40,(uint128,uint128),string,(address,uint256))[])": "848c706c",
    "createWithTimestampsLT(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint40)[],string,(address,uint256))[])": "5e449ca8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierBatchLockup_BatchSizeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDuration[]\",\"name\":\"segmentsWithDuration\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithDurationsLD[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLD\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithDurationsLL[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLL\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.TrancheWithDuration[]\",\"name\":\"tranchesWithDuration\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithDurationsLT[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithTimestampsLD[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLD\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithTimestampsLL[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLL\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierLockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct BatchLockup.CreateWithTimestampsLT[]\",\"name\":\"batch\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLT\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"createWithDurationsLD(address,address,(address,address,uint128,bool,bool,(uint128,uint64,uint40)[],string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLD} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLD}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithDurationsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(uint128,uint128),string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLL} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLL}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithDurationsLT(address,address,(address,address,uint128,bool,bool,(uint128,uint40)[],string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLT} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLT}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithTimestampsLD(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint64,uint40)[],string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLD} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLD}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithTimestampsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),uint40,(uint128,uint128),string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLL} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLL}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"createWithTimestampsLT(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint40)[],string,(address,uint256))[])\":{\"details\":\"Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLT} must be met for each stream.\",\"params\":{\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLT}.\",\"lockup\":\"The address of the {SablierLockup} contract.\",\"token\":\"The contract address of the ERC-20 token to be distributed.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}}},\"title\":\"SablierBatchLockup\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createWithDurationsLD(address,address,(address,address,uint128,bool,bool,(uint128,uint64,uint40)[],string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithDurationsLD`.\"},\"createWithDurationsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(uint128,uint128),string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithDurationsLL`.\"},\"createWithDurationsLT(address,address,(address,address,uint128,bool,bool,(uint128,uint40)[],string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Tranched streams using `createWithDurationsLT`.\"},\"createWithTimestampsLD(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint64,uint40)[],string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithTimestampsLD`.\"},\"createWithTimestampsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),uint40,(uint128,uint128),string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithTimestampsLL`.\"},\"createWithTimestampsLT(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint40)[],string,(address,uint256))[])\":{\"notice\":\"Creates a batch of Lockup Tranched streams using `createWithTimestampsLT`.\"}},\"notice\":\"See the documentation in {ISablierBatchLockup}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierBatchLockup.sol\":\"SablierBatchLockup\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":570},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05\",\"dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11\",\"dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab\",\"dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca\",\"dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353\",\"dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6\"]},\"node_modules/@prb/math/src/sd21x18/Casting.sol\":{\"keccak256\":\"0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2\",\"dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd\"]},\"node_modules/@prb/math/src/sd21x18/Constants.sol\":{\"keccak256\":\"0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396\",\"dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3\"]},\"node_modules/@prb/math/src/sd21x18/Errors.sol\":{\"keccak256\":\"0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee\",\"dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML\"]},\"node_modules/@prb/math/src/sd21x18/ValueType.sol\":{\"keccak256\":\"0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880\",\"dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d\",\"dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf\",\"dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462\",\"dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919\",\"dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb\"]},\"node_modules/@prb/math/src/ud21x18/Casting.sol\":{\"keccak256\":\"0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09\",\"dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL\"]},\"node_modules/@prb/math/src/ud21x18/Constants.sol\":{\"keccak256\":\"0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60\",\"dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV\"]},\"node_modules/@prb/math/src/ud21x18/Errors.sol\":{\"keccak256\":\"0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80\",\"dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq\"]},\"node_modules/@prb/math/src/ud21x18/ValueType.sol\":{\"keccak256\":\"0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af\",\"dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae\",\"dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437\",\"dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41\",\"dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780\",\"dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932\",\"dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8\",\"dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6\",\"dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47\",\"dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n\"]},\"src/SablierBatchLockup.sol\":{\"keccak256\":\"0x82266cfda9ee33988433e36fbcd789173c78112cb1c30dd6d238318d44f63ce4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4941b4f027eb8072799163bb96558a4a89799493bc7adc2a4829f47ec16ae4d8\",\"dweb:/ipfs/QmUp7J6MRQLG5E7Q6tsykFyznPj7YFJ9881BdeyZXnkEtD\"]},\"src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f\",\"dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z\"]},\"src/interfaces/IBatch.sol\":{\"keccak256\":\"0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758\",\"dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh\"]},\"src/interfaces/ILockupNFTDescriptor.sol\":{\"keccak256\":\"0x49c9d9f68d025c3e735de68ca53b7b3144bf29f9b5890706847da0f1667f111e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7588bdbb3057462744661468632847a469e13cb1da581a8b75a813cb6223c49e\",\"dweb:/ipfs/QmbynwaivForuftTtya4Lxwu78KA5LCgmVCHk3k4st9uC2\"]},\"src/interfaces/ISablierBatchLockup.sol\":{\"keccak256\":\"0xe4277cb7fff96518320f48abde8ae2f9a0ffa828db08c6309e7ef0559e275c74\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://27cbc46bb6c6cd963a6adc1b2e4c0cab54bf5aec96036e8e72037d5bec2ecfa4\",\"dweb:/ipfs/QmYzYkM5XY266ACXGhiU9FeyF4uCKJCqf4HiurgpjGu7vS\"]},\"src/interfaces/ISablierLockup.sol\":{\"keccak256\":\"0x625ba75d5b893749ceacf197c92b7ba684de7fb68bb9d0a21e75456a48785e3e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://300c011e17907d218eeb3a4c3d9559f86b12b44633dcbfe546439ea9d012705e\",\"dweb:/ipfs/QmT8WNAUhN5ftC68fHyUL1dhbgvUv9bC8raHLcAXWiLYyP\"]},\"src/interfaces/ISablierLockupBase.sol\":{\"keccak256\":\"0xb455bccf9814079427cdd5abc44fe0e1d754a011dcf03ec4a9d50b74be2b8a86\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f9b0ba7c8bab4a7168c6c5fb9535ca580807ae631e0680a7b450250c95d87\",\"dweb:/ipfs/QmcaDTt36Q7AC4iMpUikkZTYGxqRBNAcauewiocmHWqUad\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x07331361c03f6204955c4723549055b8165f33c687b8e4b43339bd94b54536a4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://346c7ac9d1c9205d4218058133e09177740db5326b2b31ffb961ffaf5468e0eb\",\"dweb:/ipfs/QmNwRXn5qwnRRfYPRrBq9dS9NKxQ5zyiZorBYZAQXZGkHu\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x54b0a47578fd242f218becd8d74c785eccf5ef45ea524465c625a81f64fb50ed\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://88193d0336532dfd3671e1259be5257dcf9f58662276e29083073071cd421d00\",\"dweb:/ipfs/QmWxBgMtnuGp9gKx8FAFBtc1rvbboyPRgW6n5hQGqVdhWf\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "address", "name": "target", "type": "address" }],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "SablierBatchLockup_BatchSizeZero" },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithDurationsLD[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDuration[]",
                  "name": "segmentsWithDuration",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                    { "internalType": "uint40", "name": "duration", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurationsLD",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithDurationsLL[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                    { "internalType": "uint40", "name": "total", "type": "uint40" }
                  ]
                },
                {
                  "internalType": "struct LockupLinear.UnlockAmounts",
                  "name": "unlockAmounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "start", "type": "uint128" },
                    { "internalType": "uint128", "name": "cliff", "type": "uint128" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurationsLL",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithDurationsLT[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupTranched.TrancheWithDuration[]",
                  "name": "tranchesWithDuration",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "uint40", "name": "duration", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurationsLT",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithTimestampsLD[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "uint40", "name": "startTime", "type": "uint40" },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                    { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithTimestampsLD",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithTimestampsLL[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "uint40", "name": "cliffTime", "type": "uint40" },
                {
                  "internalType": "struct LockupLinear.UnlockAmounts",
                  "name": "unlockAmounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "start", "type": "uint128" },
                    { "internalType": "uint128", "name": "cliff", "type": "uint128" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithTimestampsLL",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        },
        {
          "inputs": [
            { "internalType": "contract ISablierLockup", "name": "lockup", "type": "address" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            {
              "internalType": "struct BatchLockup.CreateWithTimestampsLT[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "uint40", "name": "startTime", "type": "uint40" },
                {
                  "internalType": "struct LockupTranched.Tranche[]",
                  "name": "tranches",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithTimestampsLT",
          "outputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createWithDurationsLD(address,address,(address,address,uint128,bool,bool,(uint128,uint64,uint40)[],string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLD} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLD}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithDurationsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(uint128,uint128),string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLL} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLL}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithDurationsLT(address,address,(address,address,uint128,bool,bool,(uint128,uint40)[],string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithDurationsLT} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithDurationsLT}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithTimestampsLD(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint64,uint40)[],string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLD} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLD}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithTimestampsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),uint40,(uint128,uint128),string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLL} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLL}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          },
          "createWithTimestampsLT(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint40)[],string,(address,uint256))[])": {
            "details": "Requirements: - There must be at least one element in `batch`. - All requirements from {ISablierLockup.createWithTimestampsLT} must be met for each stream.",
            "params": {
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierLockup.createWithTimestampsLT}.",
              "lockup": "The address of the {SablierLockup} contract.",
              "token": "The contract address of the ERC-20 token to be distributed."
            },
            "returns": { "streamIds": "The ids of the newly created streams." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createWithDurationsLD(address,address,(address,address,uint128,bool,bool,(uint128,uint64,uint40)[],string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithDurationsLD`."
          },
          "createWithDurationsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),(uint128,uint128),string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithDurationsLL`."
          },
          "createWithDurationsLT(address,address,(address,address,uint128,bool,bool,(uint128,uint40)[],string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Tranched streams using `createWithDurationsLT`."
          },
          "createWithTimestampsLD(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint64,uint40)[],string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithTimestampsLD`."
          },
          "createWithTimestampsLL(address,address,(address,address,uint128,bool,bool,(uint40,uint40),uint40,(uint128,uint128),string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithTimestampsLL`."
          },
          "createWithTimestampsLT(address,address,(address,address,uint128,bool,bool,uint40,(uint128,uint40)[],string,(address,uint256))[])": {
            "notice": "Creates a batch of Lockup Tranched streams using `createWithTimestampsLT`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=node_modules/forge-std/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solady/=node_modules/solady/",
        "solarray/=node_modules/solarray/"
      ],
      "optimizer": { "enabled": true, "runs": 570 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/SablierBatchLockup.sol": "SablierBatchLockup" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99",
        "urls": [
          "bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05",
          "dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c",
        "urls": [
          "bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11",
          "dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8",
        "urls": [
          "bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab",
          "dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6",
        "urls": [
          "bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca",
          "dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0",
        "urls": [
          "bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353",
          "dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Casting.sol": {
        "keccak256": "0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36",
        "urls": [
          "bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2",
          "dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Constants.sol": {
        "keccak256": "0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4",
        "urls": [
          "bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396",
          "dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Errors.sol": {
        "keccak256": "0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a",
        "urls": [
          "bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee",
          "dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/ValueType.sol": {
        "keccak256": "0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092",
        "urls": [
          "bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880",
          "dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39",
        "urls": [
          "bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d",
          "dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2",
        "urls": [
          "bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf",
          "dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84",
        "urls": [
          "bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462",
          "dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d",
        "urls": [
          "bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919",
          "dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Casting.sol": {
        "keccak256": "0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65",
        "urls": [
          "bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09",
          "dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Constants.sol": {
        "keccak256": "0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601",
        "urls": [
          "bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60",
          "dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Errors.sol": {
        "keccak256": "0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415",
        "urls": [
          "bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80",
          "dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/ValueType.sol": {
        "keccak256": "0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25",
        "urls": [
          "bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af",
          "dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6",
        "urls": [
          "bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae",
          "dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd",
        "urls": [
          "bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437",
          "dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0",
        "urls": [
          "bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41",
          "dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6",
        "urls": [
          "bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780",
          "dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2",
        "urls": [
          "bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932",
          "dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044",
        "urls": [
          "bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8",
          "dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc",
        "urls": [
          "bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6",
          "dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3",
        "urls": [
          "bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47",
          "dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n"
        ],
        "license": "MIT"
      },
      "src/SablierBatchLockup.sol": {
        "keccak256": "0x82266cfda9ee33988433e36fbcd789173c78112cb1c30dd6d238318d44f63ce4",
        "urls": [
          "bzz-raw://4941b4f027eb8072799163bb96558a4a89799493bc7adc2a4829f47ec16ae4d8",
          "dweb:/ipfs/QmUp7J6MRQLG5E7Q6tsykFyznPj7YFJ9881BdeyZXnkEtD"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IAdminable.sol": {
        "keccak256": "0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b",
        "urls": [
          "bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f",
          "dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IBatch.sol": {
        "keccak256": "0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4",
        "urls": [
          "bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758",
          "dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ILockupNFTDescriptor.sol": {
        "keccak256": "0x49c9d9f68d025c3e735de68ca53b7b3144bf29f9b5890706847da0f1667f111e",
        "urls": [
          "bzz-raw://7588bdbb3057462744661468632847a469e13cb1da581a8b75a813cb6223c49e",
          "dweb:/ipfs/QmbynwaivForuftTtya4Lxwu78KA5LCgmVCHk3k4st9uC2"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierBatchLockup.sol": {
        "keccak256": "0xe4277cb7fff96518320f48abde8ae2f9a0ffa828db08c6309e7ef0559e275c74",
        "urls": [
          "bzz-raw://27cbc46bb6c6cd963a6adc1b2e4c0cab54bf5aec96036e8e72037d5bec2ecfa4",
          "dweb:/ipfs/QmYzYkM5XY266ACXGhiU9FeyF4uCKJCqf4HiurgpjGu7vS"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockup.sol": {
        "keccak256": "0x625ba75d5b893749ceacf197c92b7ba684de7fb68bb9d0a21e75456a48785e3e",
        "urls": [
          "bzz-raw://300c011e17907d218eeb3a4c3d9559f86b12b44633dcbfe546439ea9d012705e",
          "dweb:/ipfs/QmT8WNAUhN5ftC68fHyUL1dhbgvUv9bC8raHLcAXWiLYyP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupBase.sol": {
        "keccak256": "0xb455bccf9814079427cdd5abc44fe0e1d754a011dcf03ec4a9d50b74be2b8a86",
        "urls": [
          "bzz-raw://7d8f9b0ba7c8bab4a7168c6c5fb9535ca580807ae631e0680a7b450250c95d87",
          "dweb:/ipfs/QmcaDTt36Q7AC4iMpUikkZTYGxqRBNAcauewiocmHWqUad"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x07331361c03f6204955c4723549055b8165f33c687b8e4b43339bd94b54536a4",
        "urls": [
          "bzz-raw://346c7ac9d1c9205d4218058133e09177740db5326b2b31ffb961ffaf5468e0eb",
          "dweb:/ipfs/QmNwRXn5qwnRRfYPRrBq9dS9NKxQ5zyiZorBYZAQXZGkHu"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0x54b0a47578fd242f218becd8d74c785eccf5ef45ea524465c625a81f64fb50ed",
        "urls": [
          "bzz-raw://88193d0336532dfd3671e1259be5257dcf9f58662276e29083073071cd421d00",
          "dweb:/ipfs/QmWxBgMtnuGp9gKx8FAFBtc1rvbboyPRgW6n5hQGqVdhWf"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 78
}
