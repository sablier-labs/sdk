{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialAdmin", "type": "address", "internalType": "address" },
        { "name": "initialNFTDescriptor", "type": "address", "internalType": "contract ILockupNFTDescriptor" },
        { "name": "maxCount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BROKER_FEE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "UD60x18" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_COUNT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batch",
      "inputs": [{ "name": "calls", "type": "bytes[]", "internalType": "bytes[]" }],
      "outputs": [{ "name": "results", "type": "bytes[]", "internalType": "bytes[]" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "cancel",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "cancelMultiple",
      "inputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    { "type": "function", "name": "collectFees", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "createWithDurationsLD",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "segmentsWithDuration",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.SegmentWithDuration[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLL",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        },
        {
          "name": "durations",
          "type": "tuple",
          "internalType": "struct LockupLinear.Durations",
          "components": [
            { "name": "cliff", "type": "uint40", "internalType": "uint40" },
            { "name": "total", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithDurationsLT",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "tranchesWithDuration",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.TrancheWithDuration[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLD",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "segments",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLL",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        },
        { "name": "cliffTime", "type": "uint40", "internalType": "uint40" }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createWithTimestampsLT",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct Lockup.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        },
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCliffTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "cliffTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDepositedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "depositedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEndTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "endTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLockupModel",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "lockupModel", "type": "uint8", "internalType": "enum Lockup.Model" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipient",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRefundedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSegments",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "segments",
          "type": "tuple[]",
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSender",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "sender", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStartTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "startTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTranches",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUnderlyingToken",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "token", "type": "address", "internalType": "contract IERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUnlockAmounts",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawnAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAllowedToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCold",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransferable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWarm",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextStreamId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nftDescriptor",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ILockupNFTDescriptor" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounce",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "renounceMultiple",
      "inputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNFTDescriptor",
      "inputs": [{ "name": "newNFTDescriptor", "type": "address", "internalType": "contract ILockupNFTDescriptor" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "statusOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "status", "type": "uint8", "internalType": "enum Lockup.Status" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "streamedAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "streamedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "uri", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [{ "name": "newAdmin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "wasCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMax",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMaxAndTransfer",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "newRecipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMultiple",
      "inputs": [
        { "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "amounts", "type": "uint128[]", "internalType": "uint128[]" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AllowToHook",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchMetadataUpdate",
      "inputs": [
        { "name": "_fromTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "_toTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CancelLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "senderAmount", "type": "uint128", "indexed": false, "internalType": "uint128" },
        { "name": "recipientAmount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CollectFees",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "feeAmount", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupDynamicStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            {
              "name": "amounts",
              "type": "tuple",
              "internalType": "struct Lockup.CreateAmounts",
              "components": [
                { "name": "deposit", "type": "uint128", "internalType": "uint128" },
                { "name": "brokerFee", "type": "uint128", "internalType": "uint128" }
              ]
            },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            { "name": "broker", "type": "address", "internalType": "address" }
          ]
        },
        {
          "name": "segments",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct LockupDynamic.Segment[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "exponent", "type": "uint64", "internalType": "UD2x18" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupLinearStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            {
              "name": "amounts",
              "type": "tuple",
              "internalType": "struct Lockup.CreateAmounts",
              "components": [
                { "name": "deposit", "type": "uint128", "internalType": "uint128" },
                { "name": "brokerFee", "type": "uint128", "internalType": "uint128" }
              ]
            },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            { "name": "broker", "type": "address", "internalType": "address" }
          ]
        },
        { "name": "cliffTime", "type": "uint40", "indexed": false, "internalType": "uint40" },
        {
          "name": "unlockAmounts",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct LockupLinear.UnlockAmounts",
          "components": [
            { "name": "start", "type": "uint128", "internalType": "uint128" },
            { "name": "cliff", "type": "uint128", "internalType": "uint128" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupTranchedStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "commonParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateEventCommon",
          "components": [
            { "name": "funder", "type": "address", "internalType": "address" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            {
              "name": "amounts",
              "type": "tuple",
              "internalType": "struct Lockup.CreateAmounts",
              "components": [
                { "name": "deposit", "type": "uint128", "internalType": "uint128" },
                { "name": "brokerFee", "type": "uint128", "internalType": "uint128" }
              ]
            },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "timestamps",
              "type": "tuple",
              "internalType": "struct Lockup.Timestamps",
              "components": [
                { "name": "start", "type": "uint40", "internalType": "uint40" },
                { "name": "end", "type": "uint40", "internalType": "uint40" }
              ]
            },
            { "name": "shape", "type": "string", "internalType": "string" },
            { "name": "broker", "type": "address", "internalType": "address" }
          ]
        },
        {
          "name": "tranches",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InvalidWithdrawalInWithdrawMultiple",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "revertData", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MetadataUpdate",
      "inputs": [{ "name": "_tokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RenounceLockupStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNFTDescriptor",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        {
          "name": "oldNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract ILockupNFTDescriptor"
        },
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract ILockupNFTDescriptor"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferAdmin",
      "inputs": [
        { "name": "oldAdmin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawFromLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [{ "name": "target", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "CallerNotAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "DelegateCall", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [{ "name": "operator", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    {
      "type": "error",
      "name": "SablierLockupBase_AllowToHookUnsupportedInterface",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_AllowToHookZeroCodeSize",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_FeeTransferFail",
      "inputs": [
        { "name": "admin", "type": "address", "internalType": "address" },
        { "name": "feeAmount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_InvalidHookSelector",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_NotTransferable",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_Null",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_Overdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_StreamCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_StreamDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_StreamNotCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_StreamNotDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_StreamSettled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_WithdrawAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_WithdrawArrayCountsNotEqual",
      "inputs": [
        { "name": "streamIdsCount", "type": "uint256", "internalType": "uint256" },
        { "name": "amountsCount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_WithdrawToZeroAddress",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierLockupBase_WithdrawalAddressNotRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierLockup_NotExpectedModel",
      "inputs": [
        { "name": "actualLockupModel", "type": "uint8", "internalType": "enum Lockup.Model" },
        { "name": "expectedLockupModel", "type": "uint8", "internalType": "enum Lockup.Model" }
      ]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x60c0604052346103ce576163b26060813803918261001c816103d2565b9384928339810103126103ce5780516001600160a01b038116908190036103ce5760208201516001600160a01b03811692908390036103ce576040015161006360406103d2565b92601284527114d8589b1a595c88131bd8dadd5c0813919560721b602085015261008d60406103d2565b600a81526905341422d4c4f434b55560b41b6020820152306080525f80546001600160a01b031916851781559093907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf808180a383516001600160401b0381116102df57600154600181811c911680156103c4575b60208210146102c157601f8111610361575b50602094601f82116001146102fe579481929394955f926102f3575b50508160011b915f199060031b1c1916176001555b82516001600160401b0381116102df57600254600181811c911680156102d5575b60208210146102c157601f811161025e575b506020601f82116001146101fb57819293945f926101f0575b50508160011b915f199060031b1c1916176002555b600880546001600160a01b03191691909117905560a0526001600755604051615fba90816103f8823960805181613d17015260a0518181816117cc015281816143b0015261515d0152f35b015190505f80610190565b601f1982169060025f52805f20915f5b8181106102465750958360019596971061022e575b505050811b016002556101a5565b01515f1960f88460031b161c191690555f8080610220565b9192602060018192868b01518155019401920161020b565b60025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f830160051c810191602084106102b7575b601f0160051c01905b8181106102ac5750610177565b5f815560010161029f565b9091508190610296565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610165565b634e487b7160e01b5f52604160045260245ffd5b015190505f8061012f565b601f1982169560015f52805f20915f5b88811061034957508360019596979810610331575b505050811b01600155610144565b01515f1960f88460031b161c191690555f8080610323565b9192602060018192868501518155019401920161030e565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c810191602084106103ba575b601f0160051c01905b8181106103af5750610113565b5f81556001016103a2565b9091508190610399565b90607f1690610101565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176102df5760405256fe60806040526004361015610011575f80fd5b5f3560e01c8062dba286146103fe57806301ffc9a7146103f9578063027b6744146103f457806306fdde03146103ef578063081812fc146103ea578063095ea7b3146103e55780630aef4433146103e05780631400ecec146103db5780631c1cdd4c146103d65780631e897afb146103d15780631e99d569146103cc57806322bc0a80146103c757806323b872dd146103c2578063303acc85146103bd578063406887cb146103b857806340e58ee5146103b3578063425d30dd146103ae57806342842e0e146103a957806342966c68146103a4578063442675701461039f5780634857501f1461039a5780634869e12d146103955780634cc55e11146103905780636352211e1461038b5780636d0cee751461038b57806370a0823114610386578063727b3b0a1461038157806375829def1461037c57806377163c1d14610377578063780a82c8146103725780637a6958411461036d5780637cad6cd1146103685780637de6b1db146103635780637ee213911461035e5780637f5799f9146103595780638659c270146103545780638f69b9931461034f5780639067b6771461034a57806395d89b4114610345578063a22cb46514610340578063a47757721461033b578063a80fc07114610336578063ad35efd414610331578063b25645691461032c578063b637b86514610327578063b88d4fde14610322578063b8a3be661461031d578063b971302a14610318578063bc2be1be14610313578063c156a11d1461030e578063c879657214610309578063c87b56dd14610304578063d4dbd20b146102ff578063d511609f146102fa578063d975dfed146102f5578063deecd64f146102f0578063df2a848c146102eb578063e6c417eb146102e6578063e985e9c5146102e1578063ea5ead19146102dc578063f590c176146102d7578063f851a440146102d25763fdd46d60146102cd575f80fd5b613178565b613137565b6130e1565b612e7c565b612e16565b612dc3565b612d22565b612b18565b612ae0565b612a80565b612a1a565b612934565b6128b0565b61256c565b61250a565b6124a7565b612472565b61240a565b61224b565b612173565b612122565b61209e565b612038565b611f80565b611eb6565b611e54565b611dcb565b611cfb565b611c4f565b611b12565b6119f7565b611924565b6118b9565b6117ef565b6117b5565b611744565b61160d565b6115b8565b61159a565b611420565b6113d3565b611361565b61133b565b6112a6565b61127d565b611221565b611147565b610fef565b610fae565b610f97565b610e60565b610e34565b610d78565b610c47565b610b71565b610988565b61084c565b6107ff565b610710565b610694565b61060b565b610438565b90816101209103126104125790565b5f80fd5b604090602319011261041257602490565b604090606319011261041257606490565b60a03660031901126104125760043567ffffffffffffffff811161041257610464903690600401610403565b61046d36610416565b61047636610427565b9061047f613d0d565b61048761236a565b4264ffffffffff16815292602084015f81525f936104b16104a7826133c6565b64ffffffffff1690565b6105d0575b855164ffffffffff16906020016104cc906133c6565b6104d5916133e4565b64ffffffffff1690526104e781613405565b936104f460208301613405565b906105016040840161340f565b9061050e60608501613405565b61051a60808601613419565b61052660a08701613419565b9161053460c0880188613423565b95909661053f612379565b6001600160a01b03909c168c526001600160a01b031660208c01526001600160801b031660408b01526001600160a01b031660608a015215156080890152151560a088015260c08701523690610594926123d4565b60e0850152369060e001906105a891613456565b610100840152366105b891613487565b6105c192613f4d565b604051908152602090f35b0390f35b93506105f36105e4865164ffffffffff1690565b6105ed866133c6565b906133e4565b936104b6565b6001600160e01b031981160361041257565b3461041257602036600319011261041257600435610628816105f9565b63ffffffff60e01b16632483248360e11b8114908115610651575b506040519015158152602090f35b6380ac58cd60e01b811491508115610683575b8115610672575b505f610643565b6301ffc9a760e01b1490505f61066b565b635b5e139f60e01b81149150610664565b34610412575f36600319011261041257602060405167016345785d8a00008152f35b5f5b8381106106c75750505f910152565b81810151838201526020016106b8565b906020916106f0815180928185528580860191016106b6565b601f01601f1916010190565b90602061070d9281815201906106d7565b90565b34610412575f366003190112610412576040515f6001548060011c90600181169081156107f5575b6020831082146107e15782855260208501919081156107c85750600114610776575b6105cc8461076a81860382612348565b604051918291826106fc565b60015f9081529250907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8184106107b45750500161076a8261075a565b8054848401526020909301926001016107a1565b60ff191682525090151560051b01905061076a8261075a565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610738565b3461041257602036600319011261041257602061081d6004356134c1565b6001600160a01b0360405191168152f35b6001600160a01b0381160361041257565b359061084a8261082e565b565b34610412576040366003190112610412576004356108698161082e565b6024359061087682614152565b33151580610944575b80610904575b6108ee57826108ec936108d1926001600160a01b0380861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f52600560205260405f2090565b906001600160a01b03166001600160a01b0319825416179055565b005b63a9fbf51f60e01b5f523360045260245ffd5b5ffd5b5060ff61093c33610926846001600160a01b03165f52600660205260405f2090565b906001600160a01b03165f5260205260405f2090565b541615610885565b50336001600160a01b038216141561087f565b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501946060850201011161041257565b60403660031901126104125760043567ffffffffffffffff8111610412576109b4903690600401610403565b60243567ffffffffffffffff8111610412576109d4903690600401610957565b916109dd613d0d565b5f64ffffffffff4216938493610a07604051958693849363f0b95e0960e01b8552600485016135d0565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4918215610b6c575f92610b48575b508151610a3a90613670565b610a449083613692565b516040015164ffffffffff16610a5861236a565b64ffffffffff909416845264ffffffffff166020840152610a7881613405565b92610a8560208301613405565b90610a926040840161340f565b90610a9f60608501613405565b610aab60808601613419565b610ab760a08701613419565b91610ac560c0880188613423565b959096610ad0612379565b6001600160a01b03909b168b526001600160a01b031660208b01526001600160801b031660408a01526001600160a01b0316606089015215156080880152151560a087015260c08601523690610b25926123d4565b60e0840152369060e00190610b3991613456565b6101008301526105c19161435b565b610b659192503d805f833e610b5d8183612348565b81019061350d565b905f610a2e565b613665565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35576105cc905f90805f52600a60205260ff60405f205460f01c1680610c18575b610bdf575b506040516001600160801b0390911681529081906020820190565b610c129150805f52600a602052610c0c610c06600260405f2001546001600160801b031690565b91614671565b906136ab565b5f610bc4565b50805f52600a60205260ff600160405f20015460a01c1615610bbf565b631643770160e21b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557610c7f90614903565b6005811015610cb457806105cc9115908115610ca9575b5060405190151581529081906020820190565b60019150145f610c96565b612104565b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501948460051b01011161041257565b6020600319820112610412576004359067ffffffffffffffff821161041257610d1591600401610cb9565b9091565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d4b57505050505090565b9091929394602080610d69600193603f1986820301875289516106d7565b97019301930191939290610d3c565b610d8136610cea565b90610d8b826134e3565b91610d996040519384612348565b808352601f19610da8826134e3565b015f5b818110610e235750505f5b818110610dcb57604051806105cc8682610d19565b5f80610dd88385876136cb565b90610de8604051809381936136e2565b0390305af4610df56136ef565b9015610e1b5790600191610e098287613692565b52610e148186613692565b5001610db6565b805190602001fd5b806060602080938801015201610dab565b34610412575f366003190112610412576020600754604051908152f35b90816101609103126104125790565b60403660031901126104125760043567ffffffffffffffff811161041257610e8c903690600401610e51565b60243567ffffffffffffffff811161041257610eaf610ec1913690600401610957565b919092610eba613d0d565b369061376f565b90610ecb816134e3565b92610ed96040519485612348565b818452606060208501920281019036821161041257915b818310610f14576105cc610f04868661435b565b6040519081529081906020820190565b606083360312610412576020606091604051610f2f8161230b565b8535610f3a8161315c565b815282860135610f49816134fb565b838201526040860135610f5b816118aa565b6040820152815201920191610ef0565b606090600319011261041257600435610f838161082e565b90602435610f908161082e565b9060443590565b34610412576108ec610fa836610f6b565b91613833565b34610412576020366003190112610412576001600160a01b03600435610fd38161082e565b165f526009602052602060ff60405f2054166040519015158152f35b346104125760203660031901126104125760043561100c8161082e565b6001600160a01b035f54163381036111315750803b15611116576040516301ffc9a760e01b815263f8ee98d360e01b60048201526020816024816001600160a01b0386165afa908115610b6c575f916110e7575b50156110cc57611091611084826001600160a01b03165f52600960205260405f2090565b805460ff19166001179055565b6040516001600160a01b0391909116815233907fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd7280190602090a2005b6325db035960e21b5f526001600160a01b031660045260245ffd5b611109915060203d60201161110f575b6111018183612348565b810190613932565b5f611060565b503d6110f7565b6365453b0d60e01b5f526001600160a01b031660045260245ffd5b6331b339a960e21b5f526004523360245260445ffd5b60203660031901126104125760043561115e613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460a01c165f146111a75763449491f560e11b5f5260045260245ffd5b6111c36111bc825f52600a60205260405f2090565b5460f81c90565b61120f576111ec6111e8825f52600a6020526001600160a01b0360405f205416331490565b1590565b6111f9576108ec90614a81565b634dda2c3960e11b5f526004523360245260445ffd5b63e707ae4f60e01b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc60ff600160405f20015460a01c1660405191829182919091602081019215159052565b34610412576108ec61128e36610f6b565b906040519261129e602085612348565b5f8452613aad565b6020366003190112610412576004356112bd613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460a01c161561132957805f52600360205261131c6111e861131660405f206001600160a01b0390541690565b83614dc3565b6111f9576108ec90614e30565b63535d196d60e11b5f5260045260245ffd5b34610412575f3660031901126104125760206001600160a01b0360085416604051908152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f61139a82614903565b6005811015610cb4576002036113b8575b6040519015158152602090f35b505f52600a6020526105cc60ff60405f205460f01c166113ab565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761140b90614ec2565b6040516001600160801b039091168152602090f35b60403660031901126104125760043567ffffffffffffffff81116104125761144c903690600401610cb9565b60243567ffffffffffffffff81116104125761146c903690600401610cb9565b919092611477613d0d565b828203611581575f5b82811061148957005b805f8084886115206114d96114d4878c6114ce6114b5838f6114ae60019f828d613947565b359a613947565b355f5260036020526001600160a01b0360405f20541690565b95613947565b61340f565b6040516307eea36b60e51b6020820190815260248201959095526001600160a01b039390931660448401526001600160801b03166064808401919091528252608482612348565b5190305af461152d6136ef565b901561153b575b5001611480565b7f36b7a9a3f5bfe69ad6ae04107796a967de5c92c761b4d7a4c34e98567066641990611568838787613947565b3561157860405192839283613957565b0390a15f611534565b636050d1ad60e11b5f526004829052602483905260445ffd5b3461041257602036600319011261041257602061081d600435614152565b34610412576020366003190112610412576001600160a01b036004356115dd8161082e565b1680156115fa575f526004602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b61161636610cea565b61161e613d0d565b5f905b80821061162a57005b611635828285613947565b359161163f613d0d565b825f52600a60205260ff600160405f20015460a81c16156117315761166383614903565b61166c81612118565b600481036116885763449491f560e11b5f52600484905260245ffd5b61169181612118565b600381036116ad5763e707ae4f60e01b5f52600484905260245ffd5b806116bd60029295939495612118565b1461171f576116e36111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f95790816116f4600193614f55565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a20190611621565b63fa36c71760e01b5f5260045260245ffd5b82631643770160e21b5f5260045260245ffd5b34610412576020366003190112610412576004356117618161082e565b5f54906001600160a01b03821633810361113157506001600160a01b031680916001600160a01b031916175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b34610412575f3660031901126104125760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb45761187c576118646118596105cc925f52600b60205260405f2090565b5464ffffffffff1690565b60405164ffffffffff90911681529081906020820190565b5f52600a60205261090161189b600160405f200160ff905460b81c1690565b637382cd8b60e01b5f5261396e565b64ffffffffff81160361041257565b60803660031901126104125760043567ffffffffffffffff81116104125761191c6118ea6020923690600401610e51565b6118f336610416565b61191661190e60643593611906856118aa565b610eba613d0d565b913690613487565b90613f4d565b604051908152f35b34610412576020366003190112610412576004356119418161082e565b6001600160a01b035f541633810361113157506001600160a01b036008549116806001600160a01b03198316176008556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a27f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c6119f26119da600754613670565b60405191829182919060206040840193600181520152565b0390a1005b602036600319011261041257600435611a0e613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557611a3281614903565b611a3b81612118565b60048103611a575763449491f560e11b5f52600482905260245ffd5b611a6081612118565b60038103611a7c5763e707ae4f60e01b5f52600482905260245ffd5b80611a88600292612118565b1461171f57611aae6111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f957611abb81614f55565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a2005b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501948460061b01011161041257565b60403660031901126104125760043567ffffffffffffffff811161041257611b3e903690600401610e51565b60243567ffffffffffffffff811161041257610eaf611b61913690600401611ae1565b90611b6b816134e3565b92611b796040519485612348565b818452602084019160061b81019036821161041257915b818310611ba4576105cc610f048686615108565b6040833603126104125760206040918251611bbe8161232c565b8535611bc98161315c565b815282860135611bd8816118aa565b83820152815201920191611b90565b90602080835192838152019201905f5b818110611c045750505090565b9091926020604082611c33600194885164ffffffffff602080926001600160801b038151168552015116910152565b019401929101611bf7565b90602061070d928181520190611be7565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb457600203611ccd57611cc1611cbc6105cc925f52600d60205260405f2090565b6139b2565b60405191829182611c3e565b5f52600a602052610901611cec600160405f200160ff905460b81c1690565b637382cd8b60e01b5f52613984565b611d0436610cea565b611d0c613d0d565b5f905b808210611d1857005b611d23828285613947565b3591611d2d613d0d565b825f52600a60205260ff600160405f20015460a81c161561173157825f52600a60205260ff600160405f20015460a01c165f14611d785763449491f560e11b5f52600483905260245ffd5b9091611d8f6111bc825f52600a60205260405f2090565b61120f57611db46111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f95790611dc4600192614a81565b0190611d0f565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557611e0390614903565b6005811015610cb4578060026105cc9214908115611e49575b8115611e35575060405190151581529081906020820190565b60049150611e4281612118565b145f610c96565b600381149150611e1c565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc64ffffffffff60405f205460c81c166040519182918291909164ffffffffff6020820193169052565b34610412575f366003190112610412576040515f6002548060011c9060018116908115611f61575b6020831082146107e15782855260208501919081156107c85750600114611f0f576105cc8461076a81860382612348565b60025f9081529250907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b818410611f4d5750500161076a8261075a565b805484840152602090930192600101611f3a565b91607f1691611ede565b8015150361041257565b359061084a82611f6b565b3461041257604036600319011261041257600435611f9d8161082e565b602435611fa981611f6b565b6001600160a01b0382169182156120255781611fe4611ff592335f52600660205260405f20906001600160a01b03165f5260205260405f2090565b9060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b82630b61174360e31b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160a01b03600160405f20015416604051918291829190916001600160a01b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160801b03600260405f20015416604051918291829190916001600160801b036020820193169052565b634e487b7160e01b5f52602160045260245ffd5b60051115610cb457565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761215a90614903565b60405190602082016005821015610cb457829182520390f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc60ff600160405f20015460b01c1660405191829182919091602081019215159052565b90602080835192838152019201905f5b8181106121ec5750505090565b909192602060608261222f600194885164ffffffffff604080926001600160801b03815116855267ffffffffffffffff6020820151166020860152015116910152565b0194019291016121df565b90602061070d9281815201906121cf565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb4576001036122c9576122bd6122b86105cc925f52600c60205260405f2090565b613a26565b6040519182918261223a565b5f52600a6020526109016122e8600160405f200160ff905460b81c1690565b637382cd8b60e01b5f5261399b565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff82111761232757604052565b6122f7565b6040810190811067ffffffffffffffff82111761232757604052565b90601f8019910116810190811067ffffffffffffffff82111761232757604052565b6040519061084a604083612348565b6040519061084a61012083612348565b6040519061084a606083612348565b6040519061084a61016083612348565b6040519061084a61014083612348565b67ffffffffffffffff811161232757601f01601f191660200190565b9291926123e0826123b8565b916123ee6040519384612348565b829481845281830111610412578281602093845f960137010152565b34610412576080366003190112610412576004356124278161082e565b602435906124348261082e565b6044356064359267ffffffffffffffff841161041257366023850112156104125761246c6108ec9436906024816004013591016123d4565b92613aad565b34610412576020366003190112610412576004355f52600a602052602060ff600160405f20015460a81c166040519015158152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160a01b0360405f205416604051918291829190916001600160a01b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc64ffffffffff60405f205460a01c166040519182918291909164ffffffffff6020820193169052565b6040366003190112610412576004356024356125878161082e565b61258f613d0d565b815f52600a60205260ff600160405f20015460a81c161561289d57815f5260036020526001600160a01b0360405f205416906125cb8284614dc3565b15612886576125d983615284565b916001600160801b03831680158015612616575b6105cc856125fc8887876152aa565b6040516001600160801b0390911681529081906020820190565b61261e613d0d565b855f52600a60205260ff600160405f20015460a81c16156128735761265b6001612650885f52600a60205260405f2090565b015460a01c60ff1690565b61285f57821561284b5761268761267a875f52600360205260405f2090565b546001600160a01b031690565b916001600160a01b038316918285141580612838575b61281457612800576126ae87615284565b906001600160801b038216106127da57506126ca858488615322565b6040518681525f80516020615f8e83398151915290602090a180331415806127af575b156125ed576040516392b9102b60e01b8152600481018790523360248201526001600160a01b03841660448201526001600160801b038616606482015290602090829060849082905f905af1908115610b6c575f91612780575b506001600160e01b031916636d46efd560e01b0161276557806125ed565b635f3a039d60e01b5f526001600160a01b031660045260245ffd5b6127a2915060203d6020116127a8575b61279a8183612348565b810190613cf8565b5f612747565b503d612790565b506127d56127ce836001600160a01b03165f52600960205260405f2090565b5460ff1690565b6126ed565b632176546160e01b5f5260048790526001600160801b038087166024521660445260645ffd5b633dd1eadf60e21b5f52600487905260245ffd5b6297d0a360e61b5f526004889052336024526001600160a01b03851660445260645ffd5b506128466111e8858a614dc3565b61269d565b6316c90d2760e21b5f52600486905260245ffd5b63449491f560e11b5f52600486905260245ffd5b85631643770160e21b5f5260045260245ffd5b82634dda2c3960e11b5f526004523360245260445ffd5b50631643770160e21b5f5260045260245ffd5b34610412575f36600319011261041257475f808080846001600160a01b038254165af16128db6136ef565b5015612914576001600160a01b03805f5416167fc9a0214d4c5fed6341233260a7bc0c9ac1d712cc5882165fa985bb71d4f207ae5f80a3005b6001600160a01b035f541663df68418d60e01b5f5260045260245260445ffd5b346104125760203660031901126104125760043561295181614152565b505f6001600160a01b03600854169160446040518094819363e9dc637560e01b835230600484015260248301525afa8015610b6c575f9061299d575b6105cc90604051918291826106fc565b503d805f833e6129ad8183612348565b8101906020818303126104125780519067ffffffffffffffff821161041257019080601f83011215610412578151916129e5836123b8565b916129f36040519384612348565b83835260208483010111610412576105cc92612a1591602080850191016106b6565b61298d565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160801b03600360405f20015416604051918291829190916001600160801b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc600260405f20015460801c604051918291829190916001600160801b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761140b90615284565b60403660031901126104125760043567ffffffffffffffff811161041257612b44903690600401610403565b60243567ffffffffffffffff811161041257612b64903690600401611ae1565b91612b6d613d0d565b5f64ffffffffff4216938493612b976040519586938493631441207960e01b855260048501613c47565b038173__$70ac0b9f44f1ad43af70526685fc041161$$70ac0b9f44f1ad43af70526685fc041161$__5af4948515610b6c575f956140fd575b50907fcf6da1cdefbf0f0870377128cab020f3b9895ce9613b14b933bbd193d764a92e9161404461403760075497889661401485516001600160801b031690565b6001600160801b0381166140c6575b5064ffffffffff8616614049575b8761578b565b9160405193849384613f09565b0390a2565b6140768661405f8a5f52600b60205260405f2090565b9064ffffffffff1664ffffffffff19825416179055565b60208501516001600160801b031680614090575b50614031565b6140c0906140a68a5f52600e60205260405f2090565b906001600160801b0382549181199060801b169116179055565b5f61408a565b6140f7906140dc8a5f52600e60205260405f2090565b906001600160801b03166001600160801b0319825416179055565b5f614023565b7fcf6da1cdefbf0f0870377128cab020f3b9895ce9613b14b933bbd193d764a92e929195506141439060403d60401161414b575b61413b8183612348565b810190613d4e565b949091613fd3565b503d614131565b805f5260036020526001600160a01b0360405f205416908115614173575090565b637e27328960e01b5f5260045260245ffd5b979694926141c76001600160801b0392939795976001600160a01b036101208c0195168b5260208b019064ffffffffff60208092828151168552015116910152565b16606088015261012060808801528451809152602061014088019501905f5b81811061421a575050509261010092613e209267016345785d8a00009560a089015260c088015286820360e08801526106d7565b909195602060608261425d6001948b5164ffffffffff604080926001600160801b03815116855267ffffffffffffffff6020820151166020860152015116910152565b0197019291016141e6565b80548210156136a6575f5260205f2001905f90565b634e487b7160e01b5f525f60045260245ffd5b805468010000000000000000811015612327576142b291600182018155614268565b919091614331578051825460208301516040909301516001600160801b039092167fffffff00000000000000000000000000000000000000000000000000000000009091161760809290921b77ffffffffffffffff00000000000000000000000000000000169190911760c09190911b64ffffffffff60c01b16179055565b61427d565b909161434d61070d93604084526040840190613e25565b9160208184039101526121cf565b919080604061437185516001600160a01b031690565b60c08601516143d961438c848901516001600160801b031690565b9260206101008a0151015160e08a015191865197889687966339a204ad60e21b88527f00000000000000000000000000000000000000000000000000000000000000009360048901614185565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4908115610b6c575f9161448a575b50929060075493849282515f5b8181106144525750507f7cb83640a329cb238b531daa26ffca31b59dd7c51020184cb4394ac43a11278c92916144439185615a0b565b61404460405192839283614336565b61447e61446d600193949596975f52600c60205260405f2090565b6144778389613692565b5190614290565b0190869493929161440d565b6144a3915060403d60401161414b5761413b8183612348565b5f614400565b90816020910312610412575161070d8161315c565b90926145009064ffffffffff60c0946001600160801b0360a0860197168552166020840152604083019064ffffffffff60208092828151168552015116910152565b60a06080820152835480935201915f5260205f20905f5b8181106145245750505090565b82546001600160801b038116855260801c64ffffffffff16602085015260409093019260019283019201614517565b949096959160e09461459c6001600160801b039564ffffffffff8094886101008c019d168b521660208a0152604089019064ffffffffff60208092828151168552015116910152565b1660808601525482811660a086015260801c60c085015216910152565b9295949391906001600160801b0360c085019116845260c06020850152815480915260e08401915f5260205f20905f5b81811061462e5750505064ffffffffff9586166040840152815186166060840152602090910151909416608082015261084a919060a001906001600160801b03169052565b82546001600160801b0381168552608081901c67ffffffffffffffff16602086015260c01c64ffffffffff166040850152606090930192600192830192016145e9565b64ffffffffff421661469e6002614690845f52600a60205260405f2090565b01546001600160801b031690565b916146c160016146b6835f52600a60205260405f2090565b015460b81c60ff1690565b925f6146e66146d8845f52600a60205260405f2090565b5460a01c64ffffffffff1690565b9461473361470d6146ff865f52600a60205260405f2090565b5460c81c64ffffffffff1690565b61472561471861236a565b64ffffffffff9099168952565b64ffffffffff166020880152565b61473c81612da6565b600181036147ed57505061479a6020939461477e6002614776614767875f52600c60205260405f2090565b965f52600a60205260405f2090565b015460801c90565b9060405196879586956366c1746960e11b8752600487016145b9565b038173__$a5f83f921acff269341ef3c300f67f6dd4$__5af4908115610b6c575f916147c4575090565b61070d915060203d6020116147e6575b6147de8183612348565b8101906144a9565b503d6147d4565b6147fb819695949296612da6565b80614865575060209394508061481f61185961479a935f52600b60205260405f2090565b90614849600261477661483a845f52600e60205260405f2090565b935f52600a60205260405f2090565b91604051978896879663987117a360e01b885260048801614553565b80614871600292612da6565b1461487e575b5050505090565b60209394506148986148b3915f52600d60205260405f2090565b60405163485c4f5d60e01b81529586948594600486016144be565b038173__$a5f83f921acff269341ef3c300f67f6dd4$__5af4908115610b6c575f916148e4575b505f808080614877565b6148fd915060203d6020116147e6576147de8183612348565b5f6148da565b61491a6001612650835f52600a60205260405f2090565b156149255750600490565b61493a6111bc825f52600a60205260405f2090565b6149aa576149566104a76146d8835f52600a60205260405f2090565b42106149a5576001600160801b03614993614987600261469061497886614671565b955f52600a60205260405f2090565b6001600160801b031690565b911610156149a057600190565b600290565b505f90565b50600390565b815f5260036020526001600160a01b0360405f205416151580614a3d575b80614a1a575b614a075761070d915f915f80516020615f8e833981519152604051806149ff85829190602083019252565b0390a1615c57565b506349d74b1160e11b5f5260045260245ffd5b5060ff6001614a31845f52600a60205260405f2090565b015460b01c16156149d4565b506001600160a01b03811615156149ce565b90604051614a5c8161230b565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b614a8a81614671565b90614aa86002614aa2835f52600a60205260405f2090565b01614a4f565b91614abd61498784516001600160801b031690565b6001600160801b0382161015614daf57614aef6111e8614ae5845f52600a60205260405f2090565b5460f01c60ff1690565b614d9b5780610c0c6020614b1e614b2d94614b1188516001600160801b031690565b036001600160801b031690565b9501516001600160801b031690565b90614b58614b43825f52600a60205260405f2090565b80546001600160f81b0316600160f81b179055565b614b7a614b6d825f52600a60205260405f2090565b805460ff60f01b19169055565b6001600160801b03821615614d5a575b614bbe836003614ba2845f52600a60205260405f2090565b01906001600160801b03166001600160801b0319825416179055565b614bd361267a825f52600a60205260405f2090565b92614be961267a835f52600360205260405f2090565b93614c0f6001614c01855f52600a60205260405f2090565b01546001600160a01b031690565b90614c246001600160801b0384168284615e05565b604080518581526001600160801b0385811660208301528716918101919091526001600160a01b038781169381169184918416907f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa5090606090a46040518481525f80516020615f8e83398151915290602090a1614cb56127ce876001600160a01b03165f52600960205260405f2090565b614cc2575b505050505050565b604051630d4af11f60e31b815260048101949094526001600160a01b031660248401526001600160801b0391821660448401529216606482015290602090829060849082905f905af1908115610b6c575f91614d3b575b506001600160e01b0319166312b50ee160e31b01612765578080808080614cba565b614d54915060203d6020116127a85761279a8183612348565b5f614d19565b614d966001614d71835f52600a60205260405f2090565b01805460ff60a01b191674010000000000000000000000000000000000000000179055565b614b8a565b635c7470b760e01b5f52600482905260245ffd5b63fa36c71760e01b5f52600482905260245ffd5b906001600160a01b031690813314918215614dfd575b508115614de4575090565b90506001600160a01b03614df833926134c1565b161490565b9091505f52600660205260ff614e273360405f20906001600160a01b03165f5260205260405f2090565b5416905f614dd9565b805f5260036020526001600160a01b0360405f205416151580614ebb575b80614e9d575b614e8b575f80516020615f8e8339815191526020604051838152a16001600160a01b03614e825f8381615c57565b16156141735750565b6349d74b1160e11b5f5260045260245ffd5b50614eb56001613907835f52600a60205260405f2090565b15614e54565b505f614e4e565b805f52600a602052614ed9600260405f2001614a4f565b90805f52600a60205260ff600160405f20015460a01c165f14614f075750602001516001600160801b031690565b90614f1d6111bc835f52600a60205260405f2090565b614f2b575061070d90614671565b61070d9150610c0c6040614f4683516001600160801b031690565b9201516001600160801b031690565b805f52600a60205260ff60405f205460f01c1615614f87575f908152600a60205260409020805460ff60f01b19169055565b635c7470b760e01b5f5260045260245ffd5b97969492614fdb6001600160801b0392939795976001600160a01b036101208c0195168b5260208b019064ffffffffff60208092828151168552015116910152565b16606088015261012060808801528451809152602061014088019501905f5b81811061502e575050509261010092613e209267016345785d8a00009560a089015260c088015286820360e08801526106d7565b909195602060408261505d6001948b5164ffffffffff602080926001600160801b038151168552015116910152565b019701929101614ffa565b8054680100000000000000008110156123275761508a91600182018155614268565b919091614331578051825460209092015174ffffffffffffffffffffffffffffffffffffffffff199092166001600160801b039091161760809190911b74ffffffffff0000000000000000000000000000000016179055565b90916150fa61070d93604084526040840190613e25565b916020818403910152611be7565b919080604061511e85516001600160a01b031690565b60c0860151615186615139848901516001600160801b031690565b9260206101008a0151015160e08a01519186519788968796636df2695560e01b88527f00000000000000000000000000000000000000000000000000000000000000009360048901614f99565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4908115610b6c575f91615237575b50929060075493849282515f5b8181106151ff5750507f1cb15a39f12b6a349f8d1d45499b7b9df63464a79fa2e294a7237107e62c384f92916151f09185615b20565b614044604051928392836150e3565b61522b61521a600193949596975f52600d60205260405f2090565b6152248389613692565b5190615068565b019086949392916151ba565b615250915060403d60401161414b5761413b8183612348565b5f6151ad565b90926001600160a01b036080938161070d9796168452166020830152604082015281606082015201906106d7565b61070d9061529181614ec2565b905f52600a602052600260405f20015460801c906136ab565b909291926001600160a01b0381161561391f57836152c7916149b0565b906001600160a01b038216806152ea5784637e27328960e01b5f5260045260245ffd5b6001600160a01b03829593949516036138b157505050565b906001600160801b03809116911601906001600160801b03821161340057565b919091615377615348836153436002614776865f52600a60205260405f2090565b615302565b600261535c845f52600a60205260405f2090565b01906001600160801b0382549181199060801b169116179055565b61538e6002614aa2835f52600a60205260405f2090565b6001600160801b036153c76149876153b060208501516001600160801b031690565b93610c0c6040614f4683516001600160801b031690565b91161015615440575b7f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6001600160a01b036154106001614c01855f52600a60205260405f2090565b6154246001600160801b0386168783615e05565b6040516001600160801b039590951685528116941692602090a4565b6154576001614d71835f52600a60205260405f2090565b61546c614b6d825f52600a60205260405f2090565b6153d0565b60405190610140820182811067ffffffffffffffff821117612327576040525f610120838281528260208201528260408201526154ac613cbb565b60608201528260808201528260a08201528260c08201526154cb613cbb565b60e082015260606101008201520152565b6003821015610cb45752565b906003811015610cb457815460ff60b81b191660b89190911b60ff60b81b16179055565b600261014061084a9361554561552982516001600160a01b031690565b85546001600160a01b0319166001600160a01b03909116178555565b6155a461555a602083015164ffffffffff1690565b85547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff000000000000000000000000000000000000000016178555565b6155f26155b9604083015164ffffffffff1690565b85547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b64ffffffffff60c81b16178555565b61561c6156026060830151151590565b855460ff60f01b191690151560f01b60ff60f01b16178555565b61566461562c6080830151151590565b85546001600160f81b031690151560f81b7fff0000000000000000000000000000000000000000000000000000000000000016178555565b6157436001850161569e61568260a08501516001600160a01b031690565b82546001600160a01b0319166001600160a01b03909116178255565b6156d96156ae60c0850151151590565b825460ff60a01b191690151560a01b74ff000000000000000000000000000000000000000016178255565b6157036156e960e0850151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b61572e615714610100850151151590565b825460ff60b01b191690151560b01b60ff60b01b16178255565b6101208301519061573e82612da6565b6154e8565b015191018151602083015160801b6fffffffffffffffffffffffffffffffff199081166001600160801b03928316178355604090930151600190920180549093169116179055565b9190615795615471565b5080516001600160a01b03169160c08201805180516157b89064ffffffffff1690565b60209091015164ffffffffff1694608085019081516157d690151590565b92606087019788516157ee906001600160a01b031690565b60a089019586516157fe90151590565b928951615811906001600160801b031690565b9461581a612389565b6001600160801b0390961686525f60208701819052604087015261583c612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f5f61012084016154dc565b6101408201526158b7885f52600a60205260405f2090565b906158c19161550c565b60208501968088516158d9906001600160a01b031690565b906158e391615e41565b60010160075585516001600160a01b031684516001600160801b03166001600160801b0316303361591393615e7c565b60208401516001600160801b0316806159d8575b5084516001600160a01b031696516001600160a01b031695516001600160a01b0316905115159151151592519360e0860151956101000151615971906001600160a01b0390511690565b9661597a6123a8565b338152986001600160a01b031660208a01526001600160a01b0316604089015260608801526001600160a01b03166080870152151560a0860152151560c085015260e08401526101008301526001600160a01b031661012082015290565b615a05906159ed88516001600160a01b031690565b610100880151516001600160a01b0316903390615e7c565b5f615927565b9190615a15615471565b5080516001600160a01b03169160c0820180518051615a389064ffffffffff1690565b60209091015164ffffffffff169460808501908151615a5690151590565b9260608701978851615a6e906001600160a01b031690565b60a08901958651615a7e90151590565b928951615a91906001600160801b031690565b94615a9a612389565b6001600160801b0390961686525f602087018190526040870152615abc612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f600161012084016154dc565b9190615b2a615471565b5080516001600160a01b03169160c0820180518051615b4d9064ffffffffff1690565b60209091015164ffffffffff169460808501908151615b6b90151590565b9260608701978851615b83906001600160a01b031690565b60a08901958651615b9390151590565b928951615ba6906001600160801b031690565b94615baf612389565b6001600160801b0390961686525f602087018190526040870152615bd1612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f600261012084016154dc565b615c47905f52600560205260405f2090565b80546001600160a01b0319169055565b815f5260036020526001600160a01b0360405f205416926001600160a01b038116615d32575b506001600160a01b03831680615d02575b615cb46001600160a01b0383169283615cdb575b6108d1855f52600360205260405f2090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b615cf6816001600160a01b03165f52600460205260405f2090565b60018154019055615ca2565b615d0b83615c35565b615d26846001600160a01b03165f52600460205260405f2090565b80545f19019055615c8e565b615d4d6001600160a01b0382168015159081615d9357501590565b15615c7d57826001600160a01b038516615d7357637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f526001600160a01b0390911660045260245260445ffd5b6001600160a01b03871680821492508215615dd2575b508115615db557501590565b9050845f5260056020526001600160a01b0360405f205416141590565b9091505f52600660205260ff615dfc8460405f20906001600160a01b03165f5260205260405f2090565b5416905f615da9565b61084a926001600160a01b036040519363a9059cbb60e01b6020860152166024840152604483015260448252615e3c606483612348565b615ebd565b6001600160a01b0381161561391f576001600160a01b0391615e62916149b0565b16615e6957565b6339e3563760e11b5f525f60045260245ffd5b9091926001600160a01b0361084a9481604051956323b872dd60e01b6020880152166024860152166044840152606483015260648252615e3c608483612348565b5f806001600160a01b03615ee693169360208151910182865af1615edf6136ef565b9083615f33565b8051908115159182615f18575b5050615efc5750565b6001600160a01b0390635274afe760e01b5f521660045260245ffd5b615f2b9250602080918301019101613932565b155f80615ef3565b90615f575750805115615f4857805190602001fd5b630a12f52160e11b5f5260045ffd5b81511580615f84575b615f68575090565b6001600160a01b0390639996b31560e01b5f521660045260245ffd5b50803b15615f6056fef8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7a164736f6c634300081a000a",
    "sourceMap": "2462:19692:79:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;:::i;:::-;;;;-1:-1:-1;;;2462:19692:79;;;;460:4:82;441:24;;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;;2462:19692:79;;;;;;;;1431:63:80;-1:-1:-1;;1431:63:80;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;1470:17:8;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;1470:17:8;2462:19692:79;;2694:36:83;2462:19692:79;;-1:-1:-1;;;;;;2462:19692:79;;;;;;;;4320:20;2462:19692;4350:16;2462:19692;;;;;;;;;441:24:82;2462:19692:79;;;;;4320:20;2462:19692;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;1470:17:8;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;1470:17:8;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:17:8;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;-1:-1:-1;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;-1:-1:-1;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;:::o",
    "linkReferences": {
      "src/libraries/Helpers.sol": {
        "Helpers": [
          { "start": 3587, "length": 20 },
          { "start": 12179, "length": 20 },
          { "start": 17320, "length": 20 },
          { "start": 18389, "length": 20 },
          { "start": 21890, "length": 20 }
        ]
      },
      "src/libraries/VestingMath.sol": {
        "VestingMath": [{ "start": 19350, "length": 20 }, { "start": 19631, "length": 20 }]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c8062dba286146103fe57806301ffc9a7146103f9578063027b6744146103f457806306fdde03146103ef578063081812fc146103ea578063095ea7b3146103e55780630aef4433146103e05780631400ecec146103db5780631c1cdd4c146103d65780631e897afb146103d15780631e99d569146103cc57806322bc0a80146103c757806323b872dd146103c2578063303acc85146103bd578063406887cb146103b857806340e58ee5146103b3578063425d30dd146103ae57806342842e0e146103a957806342966c68146103a4578063442675701461039f5780634857501f1461039a5780634869e12d146103955780634cc55e11146103905780636352211e1461038b5780636d0cee751461038b57806370a0823114610386578063727b3b0a1461038157806375829def1461037c57806377163c1d14610377578063780a82c8146103725780637a6958411461036d5780637cad6cd1146103685780637de6b1db146103635780637ee213911461035e5780637f5799f9146103595780638659c270146103545780638f69b9931461034f5780639067b6771461034a57806395d89b4114610345578063a22cb46514610340578063a47757721461033b578063a80fc07114610336578063ad35efd414610331578063b25645691461032c578063b637b86514610327578063b88d4fde14610322578063b8a3be661461031d578063b971302a14610318578063bc2be1be14610313578063c156a11d1461030e578063c879657214610309578063c87b56dd14610304578063d4dbd20b146102ff578063d511609f146102fa578063d975dfed146102f5578063deecd64f146102f0578063df2a848c146102eb578063e6c417eb146102e6578063e985e9c5146102e1578063ea5ead19146102dc578063f590c176146102d7578063f851a440146102d25763fdd46d60146102cd575f80fd5b613178565b613137565b6130e1565b612e7c565b612e16565b612dc3565b612d22565b612b18565b612ae0565b612a80565b612a1a565b612934565b6128b0565b61256c565b61250a565b6124a7565b612472565b61240a565b61224b565b612173565b612122565b61209e565b612038565b611f80565b611eb6565b611e54565b611dcb565b611cfb565b611c4f565b611b12565b6119f7565b611924565b6118b9565b6117ef565b6117b5565b611744565b61160d565b6115b8565b61159a565b611420565b6113d3565b611361565b61133b565b6112a6565b61127d565b611221565b611147565b610fef565b610fae565b610f97565b610e60565b610e34565b610d78565b610c47565b610b71565b610988565b61084c565b6107ff565b610710565b610694565b61060b565b610438565b90816101209103126104125790565b5f80fd5b604090602319011261041257602490565b604090606319011261041257606490565b60a03660031901126104125760043567ffffffffffffffff811161041257610464903690600401610403565b61046d36610416565b61047636610427565b9061047f613d0d565b61048761236a565b4264ffffffffff16815292602084015f81525f936104b16104a7826133c6565b64ffffffffff1690565b6105d0575b855164ffffffffff16906020016104cc906133c6565b6104d5916133e4565b64ffffffffff1690526104e781613405565b936104f460208301613405565b906105016040840161340f565b9061050e60608501613405565b61051a60808601613419565b61052660a08701613419565b9161053460c0880188613423565b95909661053f612379565b6001600160a01b03909c168c526001600160a01b031660208c01526001600160801b031660408b01526001600160a01b031660608a015215156080890152151560a088015260c08701523690610594926123d4565b60e0850152369060e001906105a891613456565b610100840152366105b891613487565b6105c192613f4d565b604051908152602090f35b0390f35b93506105f36105e4865164ffffffffff1690565b6105ed866133c6565b906133e4565b936104b6565b6001600160e01b031981160361041257565b3461041257602036600319011261041257600435610628816105f9565b63ffffffff60e01b16632483248360e11b8114908115610651575b506040519015158152602090f35b6380ac58cd60e01b811491508115610683575b8115610672575b505f610643565b6301ffc9a760e01b1490505f61066b565b635b5e139f60e01b81149150610664565b34610412575f36600319011261041257602060405167016345785d8a00008152f35b5f5b8381106106c75750505f910152565b81810151838201526020016106b8565b906020916106f0815180928185528580860191016106b6565b601f01601f1916010190565b90602061070d9281815201906106d7565b90565b34610412575f366003190112610412576040515f6001548060011c90600181169081156107f5575b6020831082146107e15782855260208501919081156107c85750600114610776575b6105cc8461076a81860382612348565b604051918291826106fc565b60015f9081529250907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8184106107b45750500161076a8261075a565b8054848401526020909301926001016107a1565b60ff191682525090151560051b01905061076a8261075a565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610738565b3461041257602036600319011261041257602061081d6004356134c1565b6001600160a01b0360405191168152f35b6001600160a01b0381160361041257565b359061084a8261082e565b565b34610412576040366003190112610412576004356108698161082e565b6024359061087682614152565b33151580610944575b80610904575b6108ee57826108ec936108d1926001600160a01b0380861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f52600560205260405f2090565b906001600160a01b03166001600160a01b0319825416179055565b005b63a9fbf51f60e01b5f523360045260245ffd5b5ffd5b5060ff61093c33610926846001600160a01b03165f52600660205260405f2090565b906001600160a01b03165f5260205260405f2090565b541615610885565b50336001600160a01b038216141561087f565b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501946060850201011161041257565b60403660031901126104125760043567ffffffffffffffff8111610412576109b4903690600401610403565b60243567ffffffffffffffff8111610412576109d4903690600401610957565b916109dd613d0d565b5f64ffffffffff4216938493610a07604051958693849363f0b95e0960e01b8552600485016135d0565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4918215610b6c575f92610b48575b508151610a3a90613670565b610a449083613692565b516040015164ffffffffff16610a5861236a565b64ffffffffff909416845264ffffffffff166020840152610a7881613405565b92610a8560208301613405565b90610a926040840161340f565b90610a9f60608501613405565b610aab60808601613419565b610ab760a08701613419565b91610ac560c0880188613423565b959096610ad0612379565b6001600160a01b03909b168b526001600160a01b031660208b01526001600160801b031660408a01526001600160a01b0316606089015215156080880152151560a087015260c08601523690610b25926123d4565b60e0840152369060e00190610b3991613456565b6101008301526105c19161435b565b610b659192503d805f833e610b5d8183612348565b81019061350d565b905f610a2e565b613665565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35576105cc905f90805f52600a60205260ff60405f205460f01c1680610c18575b610bdf575b506040516001600160801b0390911681529081906020820190565b610c129150805f52600a602052610c0c610c06600260405f2001546001600160801b031690565b91614671565b906136ab565b5f610bc4565b50805f52600a60205260ff600160405f20015460a01c1615610bbf565b631643770160e21b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557610c7f90614903565b6005811015610cb457806105cc9115908115610ca9575b5060405190151581529081906020820190565b60019150145f610c96565b612104565b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501948460051b01011161041257565b6020600319820112610412576004359067ffffffffffffffff821161041257610d1591600401610cb9565b9091565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d4b57505050505090565b9091929394602080610d69600193603f1986820301875289516106d7565b97019301930191939290610d3c565b610d8136610cea565b90610d8b826134e3565b91610d996040519384612348565b808352601f19610da8826134e3565b015f5b818110610e235750505f5b818110610dcb57604051806105cc8682610d19565b5f80610dd88385876136cb565b90610de8604051809381936136e2565b0390305af4610df56136ef565b9015610e1b5790600191610e098287613692565b52610e148186613692565b5001610db6565b805190602001fd5b806060602080938801015201610dab565b34610412575f366003190112610412576020600754604051908152f35b90816101609103126104125790565b60403660031901126104125760043567ffffffffffffffff811161041257610e8c903690600401610e51565b60243567ffffffffffffffff811161041257610eaf610ec1913690600401610957565b919092610eba613d0d565b369061376f565b90610ecb816134e3565b92610ed96040519485612348565b818452606060208501920281019036821161041257915b818310610f14576105cc610f04868661435b565b6040519081529081906020820190565b606083360312610412576020606091604051610f2f8161230b565b8535610f3a8161315c565b815282860135610f49816134fb565b838201526040860135610f5b816118aa565b6040820152815201920191610ef0565b606090600319011261041257600435610f838161082e565b90602435610f908161082e565b9060443590565b34610412576108ec610fa836610f6b565b91613833565b34610412576020366003190112610412576001600160a01b03600435610fd38161082e565b165f526009602052602060ff60405f2054166040519015158152f35b346104125760203660031901126104125760043561100c8161082e565b6001600160a01b035f54163381036111315750803b15611116576040516301ffc9a760e01b815263f8ee98d360e01b60048201526020816024816001600160a01b0386165afa908115610b6c575f916110e7575b50156110cc57611091611084826001600160a01b03165f52600960205260405f2090565b805460ff19166001179055565b6040516001600160a01b0391909116815233907fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd7280190602090a2005b6325db035960e21b5f526001600160a01b031660045260245ffd5b611109915060203d60201161110f575b6111018183612348565b810190613932565b5f611060565b503d6110f7565b6365453b0d60e01b5f526001600160a01b031660045260245ffd5b6331b339a960e21b5f526004523360245260445ffd5b60203660031901126104125760043561115e613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460a01c165f146111a75763449491f560e11b5f5260045260245ffd5b6111c36111bc825f52600a60205260405f2090565b5460f81c90565b61120f576111ec6111e8825f52600a6020526001600160a01b0360405f205416331490565b1590565b6111f9576108ec90614a81565b634dda2c3960e11b5f526004523360245260445ffd5b63e707ae4f60e01b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc60ff600160405f20015460a01c1660405191829182919091602081019215159052565b34610412576108ec61128e36610f6b565b906040519261129e602085612348565b5f8452613aad565b6020366003190112610412576004356112bd613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460a01c161561132957805f52600360205261131c6111e861131660405f206001600160a01b0390541690565b83614dc3565b6111f9576108ec90614e30565b63535d196d60e11b5f5260045260245ffd5b34610412575f3660031901126104125760206001600160a01b0360085416604051908152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f61139a82614903565b6005811015610cb4576002036113b8575b6040519015158152602090f35b505f52600a6020526105cc60ff60405f205460f01c166113ab565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761140b90614ec2565b6040516001600160801b039091168152602090f35b60403660031901126104125760043567ffffffffffffffff81116104125761144c903690600401610cb9565b60243567ffffffffffffffff81116104125761146c903690600401610cb9565b919092611477613d0d565b828203611581575f5b82811061148957005b805f8084886115206114d96114d4878c6114ce6114b5838f6114ae60019f828d613947565b359a613947565b355f5260036020526001600160a01b0360405f20541690565b95613947565b61340f565b6040516307eea36b60e51b6020820190815260248201959095526001600160a01b039390931660448401526001600160801b03166064808401919091528252608482612348565b5190305af461152d6136ef565b901561153b575b5001611480565b7f36b7a9a3f5bfe69ad6ae04107796a967de5c92c761b4d7a4c34e98567066641990611568838787613947565b3561157860405192839283613957565b0390a15f611534565b636050d1ad60e11b5f526004829052602483905260445ffd5b3461041257602036600319011261041257602061081d600435614152565b34610412576020366003190112610412576001600160a01b036004356115dd8161082e565b1680156115fa575f526004602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b61161636610cea565b61161e613d0d565b5f905b80821061162a57005b611635828285613947565b359161163f613d0d565b825f52600a60205260ff600160405f20015460a81c16156117315761166383614903565b61166c81612118565b600481036116885763449491f560e11b5f52600484905260245ffd5b61169181612118565b600381036116ad5763e707ae4f60e01b5f52600484905260245ffd5b806116bd60029295939495612118565b1461171f576116e36111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f95790816116f4600193614f55565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a20190611621565b63fa36c71760e01b5f5260045260245ffd5b82631643770160e21b5f5260045260245ffd5b34610412576020366003190112610412576004356117618161082e565b5f54906001600160a01b03821633810361113157506001600160a01b031680916001600160a01b031916175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b34610412575f3660031901126104125760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb45761187c576118646118596105cc925f52600b60205260405f2090565b5464ffffffffff1690565b60405164ffffffffff90911681529081906020820190565b5f52600a60205261090161189b600160405f200160ff905460b81c1690565b637382cd8b60e01b5f5261396e565b64ffffffffff81160361041257565b60803660031901126104125760043567ffffffffffffffff81116104125761191c6118ea6020923690600401610e51565b6118f336610416565b61191661190e60643593611906856118aa565b610eba613d0d565b913690613487565b90613f4d565b604051908152f35b34610412576020366003190112610412576004356119418161082e565b6001600160a01b035f541633810361113157506001600160a01b036008549116806001600160a01b03198316176008556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a27f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c6119f26119da600754613670565b60405191829182919060206040840193600181520152565b0390a1005b602036600319011261041257600435611a0e613d0d565b805f52600a60205260ff600160405f20015460a81c1615610c3557611a3281614903565b611a3b81612118565b60048103611a575763449491f560e11b5f52600482905260245ffd5b611a6081612118565b60038103611a7c5763e707ae4f60e01b5f52600482905260245ffd5b80611a88600292612118565b1461171f57611aae6111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f957611abb81614f55565b7f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a2005b9181601f840112156104125782359167ffffffffffffffff8311610412576020808501948460061b01011161041257565b60403660031901126104125760043567ffffffffffffffff811161041257611b3e903690600401610e51565b60243567ffffffffffffffff811161041257610eaf611b61913690600401611ae1565b90611b6b816134e3565b92611b796040519485612348565b818452602084019160061b81019036821161041257915b818310611ba4576105cc610f048686615108565b6040833603126104125760206040918251611bbe8161232c565b8535611bc98161315c565b815282860135611bd8816118aa565b83820152815201920191611b90565b90602080835192838152019201905f5b818110611c045750505090565b9091926020604082611c33600194885164ffffffffff602080926001600160801b038151168552015116910152565b019401929101611bf7565b90602061070d928181520190611be7565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb457600203611ccd57611cc1611cbc6105cc925f52600d60205260405f2090565b6139b2565b60405191829182611c3e565b5f52600a602052610901611cec600160405f200160ff905460b81c1690565b637382cd8b60e01b5f52613984565b611d0436610cea565b611d0c613d0d565b5f905b808210611d1857005b611d23828285613947565b3591611d2d613d0d565b825f52600a60205260ff600160405f20015460a81c161561173157825f52600a60205260ff600160405f20015460a01c165f14611d785763449491f560e11b5f52600483905260245ffd5b9091611d8f6111bc825f52600a60205260405f2090565b61120f57611db46111e8825f52600a6020526001600160a01b0360405f205416331490565b6111f95790611dc4600192614a81565b0190611d0f565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557611e0390614903565b6005811015610cb4578060026105cc9214908115611e49575b8115611e35575060405190151581529081906020820190565b60049150611e4281612118565b145f610c96565b600381149150611e1c565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc64ffffffffff60405f205460c81c166040519182918291909164ffffffffff6020820193169052565b34610412575f366003190112610412576040515f6002548060011c9060018116908115611f61575b6020831082146107e15782855260208501919081156107c85750600114611f0f576105cc8461076a81860382612348565b60025f9081529250907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b818410611f4d5750500161076a8261075a565b805484840152602090930192600101611f3a565b91607f1691611ede565b8015150361041257565b359061084a82611f6b565b3461041257604036600319011261041257600435611f9d8161082e565b602435611fa981611f6b565b6001600160a01b0382169182156120255781611fe4611ff592335f52600660205260405f20906001600160a01b03165f5260205260405f2090565b9060ff801983541691151516179055565b60405190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b82630b61174360e31b5f5260045260245ffd5b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160a01b03600160405f20015416604051918291829190916001600160a01b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160801b03600260405f20015416604051918291829190916001600160801b036020820193169052565b634e487b7160e01b5f52602160045260245ffd5b60051115610cb457565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761215a90614903565b60405190602082016005821015610cb457829182520390f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc60ff600160405f20015460b01c1660405191829182919091602081019215159052565b90602080835192838152019201905f5b8181106121ec5750505090565b909192602060608261222f600194885164ffffffffff604080926001600160801b03815116855267ffffffffffffffff6020820151166020860152015116910152565b0194019291016121df565b90602061070d9281815201906121cf565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c3557805f52600a60205260ff600160405f20015460b81c166003811015610cb4576001036122c9576122bd6122b86105cc925f52600c60205260405f2090565b613a26565b6040519182918261223a565b5f52600a6020526109016122e8600160405f200160ff905460b81c1690565b637382cd8b60e01b5f5261399b565b634e487b7160e01b5f52604160045260245ffd5b6060810190811067ffffffffffffffff82111761232757604052565b6122f7565b6040810190811067ffffffffffffffff82111761232757604052565b90601f8019910116810190811067ffffffffffffffff82111761232757604052565b6040519061084a604083612348565b6040519061084a61012083612348565b6040519061084a606083612348565b6040519061084a61016083612348565b6040519061084a61014083612348565b67ffffffffffffffff811161232757601f01601f191660200190565b9291926123e0826123b8565b916123ee6040519384612348565b829481845281830111610412578281602093845f960137010152565b34610412576080366003190112610412576004356124278161082e565b602435906124348261082e565b6044356064359267ffffffffffffffff841161041257366023850112156104125761246c6108ec9436906024816004013591016123d4565b92613aad565b34610412576020366003190112610412576004355f52600a602052602060ff600160405f20015460a81c166040519015158152f35b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160a01b0360405f205416604051918291829190916001600160a01b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc64ffffffffff60405f205460a01c166040519182918291909164ffffffffff6020820193169052565b6040366003190112610412576004356024356125878161082e565b61258f613d0d565b815f52600a60205260ff600160405f20015460a81c161561289d57815f5260036020526001600160a01b0360405f205416906125cb8284614dc3565b15612886576125d983615284565b916001600160801b03831680158015612616575b6105cc856125fc8887876152aa565b6040516001600160801b0390911681529081906020820190565b61261e613d0d565b855f52600a60205260ff600160405f20015460a81c16156128735761265b6001612650885f52600a60205260405f2090565b015460a01c60ff1690565b61285f57821561284b5761268761267a875f52600360205260405f2090565b546001600160a01b031690565b916001600160a01b038316918285141580612838575b61281457612800576126ae87615284565b906001600160801b038216106127da57506126ca858488615322565b6040518681525f80516020615f8e83398151915290602090a180331415806127af575b156125ed576040516392b9102b60e01b8152600481018790523360248201526001600160a01b03841660448201526001600160801b038616606482015290602090829060849082905f905af1908115610b6c575f91612780575b506001600160e01b031916636d46efd560e01b0161276557806125ed565b635f3a039d60e01b5f526001600160a01b031660045260245ffd5b6127a2915060203d6020116127a8575b61279a8183612348565b810190613cf8565b5f612747565b503d612790565b506127d56127ce836001600160a01b03165f52600960205260405f2090565b5460ff1690565b6126ed565b632176546160e01b5f5260048790526001600160801b038087166024521660445260645ffd5b633dd1eadf60e21b5f52600487905260245ffd5b6297d0a360e61b5f526004889052336024526001600160a01b03851660445260645ffd5b506128466111e8858a614dc3565b61269d565b6316c90d2760e21b5f52600486905260245ffd5b63449491f560e11b5f52600486905260245ffd5b85631643770160e21b5f5260045260245ffd5b82634dda2c3960e11b5f526004523360245260445ffd5b50631643770160e21b5f5260045260245ffd5b34610412575f36600319011261041257475f808080846001600160a01b038254165af16128db6136ef565b5015612914576001600160a01b03805f5416167fc9a0214d4c5fed6341233260a7bc0c9ac1d712cc5882165fa985bb71d4f207ae5f80a3005b6001600160a01b035f541663df68418d60e01b5f5260045260245260445ffd5b346104125760203660031901126104125760043561295181614152565b505f6001600160a01b03600854169160446040518094819363e9dc637560e01b835230600484015260248301525afa8015610b6c575f9061299d575b6105cc90604051918291826106fc565b503d805f833e6129ad8183612348565b8101906020818303126104125780519067ffffffffffffffff821161041257019080601f83011215610412578151916129e5836123b8565b916129f36040519384612348565b83835260208483010111610412576105cc92612a1591602080850191016106b6565b61298d565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc6001600160801b03600360405f20015416604051918291829190916001600160801b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c35575f52600a6020526105cc600260405f20015460801c604051918291829190916001600160801b036020820193169052565b3461041257602036600319011261041257600435805f52600a60205260ff600160405f20015460a81c1615610c355761140b90615284565b60403660031901126104125760043567ffffffffffffffff811161041257612b44903690600401610403565b60243567ffffffffffffffff811161041257612b64903690600401611ae1565b91612b6d613d0d565b5f64ffffffffff4216938493612b976040519586938493631441207960e01b855260048501613c47565b038173__$70ac0b9f44f1ad43af70526685fc041161$$70ac0b9f44f1ad43af70526685fc041161$__5af4948515610b6c575f956140fd575b50907fcf6da1cdefbf0f0870377128cab020f3b9895ce9613b14b933bbd193d764a92e9161404461403760075497889661401485516001600160801b031690565b6001600160801b0381166140c6575b5064ffffffffff8616614049575b8761578b565b9160405193849384613f09565b0390a2565b6140768661405f8a5f52600b60205260405f2090565b9064ffffffffff1664ffffffffff19825416179055565b60208501516001600160801b031680614090575b50614031565b6140c0906140a68a5f52600e60205260405f2090565b906001600160801b0382549181199060801b169116179055565b5f61408a565b6140f7906140dc8a5f52600e60205260405f2090565b906001600160801b03166001600160801b0319825416179055565b5f614023565b7fcf6da1cdefbf0f0870377128cab020f3b9895ce9613b14b933bbd193d764a92e929195506141439060403d60401161414b575b61413b8183612348565b810190613d4e565b949091613fd3565b503d614131565b805f5260036020526001600160a01b0360405f205416908115614173575090565b637e27328960e01b5f5260045260245ffd5b979694926141c76001600160801b0392939795976001600160a01b036101208c0195168b5260208b019064ffffffffff60208092828151168552015116910152565b16606088015261012060808801528451809152602061014088019501905f5b81811061421a575050509261010092613e209267016345785d8a00009560a089015260c088015286820360e08801526106d7565b909195602060608261425d6001948b5164ffffffffff604080926001600160801b03815116855267ffffffffffffffff6020820151166020860152015116910152565b0197019291016141e6565b80548210156136a6575f5260205f2001905f90565b634e487b7160e01b5f525f60045260245ffd5b805468010000000000000000811015612327576142b291600182018155614268565b919091614331578051825460208301516040909301516001600160801b039092167fffffff00000000000000000000000000000000000000000000000000000000009091161760809290921b77ffffffffffffffff00000000000000000000000000000000169190911760c09190911b64ffffffffff60c01b16179055565b61427d565b909161434d61070d93604084526040840190613e25565b9160208184039101526121cf565b919080604061437185516001600160a01b031690565b60c08601516143d961438c848901516001600160801b031690565b9260206101008a0151015160e08a015191865197889687966339a204ad60e21b88527f00000000000000000000000000000000000000000000000000000000000000009360048901614185565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4908115610b6c575f9161448a575b50929060075493849282515f5b8181106144525750507f7cb83640a329cb238b531daa26ffca31b59dd7c51020184cb4394ac43a11278c92916144439185615a0b565b61404460405192839283614336565b61447e61446d600193949596975f52600c60205260405f2090565b6144778389613692565b5190614290565b0190869493929161440d565b6144a3915060403d60401161414b5761413b8183612348565b5f614400565b90816020910312610412575161070d8161315c565b90926145009064ffffffffff60c0946001600160801b0360a0860197168552166020840152604083019064ffffffffff60208092828151168552015116910152565b60a06080820152835480935201915f5260205f20905f5b8181106145245750505090565b82546001600160801b038116855260801c64ffffffffff16602085015260409093019260019283019201614517565b949096959160e09461459c6001600160801b039564ffffffffff8094886101008c019d168b521660208a0152604089019064ffffffffff60208092828151168552015116910152565b1660808601525482811660a086015260801c60c085015216910152565b9295949391906001600160801b0360c085019116845260c06020850152815480915260e08401915f5260205f20905f5b81811061462e5750505064ffffffffff9586166040840152815186166060840152602090910151909416608082015261084a919060a001906001600160801b03169052565b82546001600160801b0381168552608081901c67ffffffffffffffff16602086015260c01c64ffffffffff166040850152606090930192600192830192016145e9565b64ffffffffff421661469e6002614690845f52600a60205260405f2090565b01546001600160801b031690565b916146c160016146b6835f52600a60205260405f2090565b015460b81c60ff1690565b925f6146e66146d8845f52600a60205260405f2090565b5460a01c64ffffffffff1690565b9461473361470d6146ff865f52600a60205260405f2090565b5460c81c64ffffffffff1690565b61472561471861236a565b64ffffffffff9099168952565b64ffffffffff166020880152565b61473c81612da6565b600181036147ed57505061479a6020939461477e6002614776614767875f52600c60205260405f2090565b965f52600a60205260405f2090565b015460801c90565b9060405196879586956366c1746960e11b8752600487016145b9565b038173__$a5f83f921acff269341ef3c300f67f6dd4$__5af4908115610b6c575f916147c4575090565b61070d915060203d6020116147e6575b6147de8183612348565b8101906144a9565b503d6147d4565b6147fb819695949296612da6565b80614865575060209394508061481f61185961479a935f52600b60205260405f2090565b90614849600261477661483a845f52600e60205260405f2090565b935f52600a60205260405f2090565b91604051978896879663987117a360e01b885260048801614553565b80614871600292612da6565b1461487e575b5050505090565b60209394506148986148b3915f52600d60205260405f2090565b60405163485c4f5d60e01b81529586948594600486016144be565b038173__$a5f83f921acff269341ef3c300f67f6dd4$__5af4908115610b6c575f916148e4575b505f808080614877565b6148fd915060203d6020116147e6576147de8183612348565b5f6148da565b61491a6001612650835f52600a60205260405f2090565b156149255750600490565b61493a6111bc825f52600a60205260405f2090565b6149aa576149566104a76146d8835f52600a60205260405f2090565b42106149a5576001600160801b03614993614987600261469061497886614671565b955f52600a60205260405f2090565b6001600160801b031690565b911610156149a057600190565b600290565b505f90565b50600390565b815f5260036020526001600160a01b0360405f205416151580614a3d575b80614a1a575b614a075761070d915f915f80516020615f8e833981519152604051806149ff85829190602083019252565b0390a1615c57565b506349d74b1160e11b5f5260045260245ffd5b5060ff6001614a31845f52600a60205260405f2090565b015460b01c16156149d4565b506001600160a01b03811615156149ce565b90604051614a5c8161230b565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b614a8a81614671565b90614aa86002614aa2835f52600a60205260405f2090565b01614a4f565b91614abd61498784516001600160801b031690565b6001600160801b0382161015614daf57614aef6111e8614ae5845f52600a60205260405f2090565b5460f01c60ff1690565b614d9b5780610c0c6020614b1e614b2d94614b1188516001600160801b031690565b036001600160801b031690565b9501516001600160801b031690565b90614b58614b43825f52600a60205260405f2090565b80546001600160f81b0316600160f81b179055565b614b7a614b6d825f52600a60205260405f2090565b805460ff60f01b19169055565b6001600160801b03821615614d5a575b614bbe836003614ba2845f52600a60205260405f2090565b01906001600160801b03166001600160801b0319825416179055565b614bd361267a825f52600a60205260405f2090565b92614be961267a835f52600360205260405f2090565b93614c0f6001614c01855f52600a60205260405f2090565b01546001600160a01b031690565b90614c246001600160801b0384168284615e05565b604080518581526001600160801b0385811660208301528716918101919091526001600160a01b038781169381169184918416907f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa5090606090a46040518481525f80516020615f8e83398151915290602090a1614cb56127ce876001600160a01b03165f52600960205260405f2090565b614cc2575b505050505050565b604051630d4af11f60e31b815260048101949094526001600160a01b031660248401526001600160801b0391821660448401529216606482015290602090829060849082905f905af1908115610b6c575f91614d3b575b506001600160e01b0319166312b50ee160e31b01612765578080808080614cba565b614d54915060203d6020116127a85761279a8183612348565b5f614d19565b614d966001614d71835f52600a60205260405f2090565b01805460ff60a01b191674010000000000000000000000000000000000000000179055565b614b8a565b635c7470b760e01b5f52600482905260245ffd5b63fa36c71760e01b5f52600482905260245ffd5b906001600160a01b031690813314918215614dfd575b508115614de4575090565b90506001600160a01b03614df833926134c1565b161490565b9091505f52600660205260ff614e273360405f20906001600160a01b03165f5260205260405f2090565b5416905f614dd9565b805f5260036020526001600160a01b0360405f205416151580614ebb575b80614e9d575b614e8b575f80516020615f8e8339815191526020604051838152a16001600160a01b03614e825f8381615c57565b16156141735750565b6349d74b1160e11b5f5260045260245ffd5b50614eb56001613907835f52600a60205260405f2090565b15614e54565b505f614e4e565b805f52600a602052614ed9600260405f2001614a4f565b90805f52600a60205260ff600160405f20015460a01c165f14614f075750602001516001600160801b031690565b90614f1d6111bc835f52600a60205260405f2090565b614f2b575061070d90614671565b61070d9150610c0c6040614f4683516001600160801b031690565b9201516001600160801b031690565b805f52600a60205260ff60405f205460f01c1615614f87575f908152600a60205260409020805460ff60f01b19169055565b635c7470b760e01b5f5260045260245ffd5b97969492614fdb6001600160801b0392939795976001600160a01b036101208c0195168b5260208b019064ffffffffff60208092828151168552015116910152565b16606088015261012060808801528451809152602061014088019501905f5b81811061502e575050509261010092613e209267016345785d8a00009560a089015260c088015286820360e08801526106d7565b909195602060408261505d6001948b5164ffffffffff602080926001600160801b038151168552015116910152565b019701929101614ffa565b8054680100000000000000008110156123275761508a91600182018155614268565b919091614331578051825460209092015174ffffffffffffffffffffffffffffffffffffffffff199092166001600160801b039091161760809190911b74ffffffffff0000000000000000000000000000000016179055565b90916150fa61070d93604084526040840190613e25565b916020818403910152611be7565b919080604061511e85516001600160a01b031690565b60c0860151615186615139848901516001600160801b031690565b9260206101008a0151015160e08a01519186519788968796636df2695560e01b88527f00000000000000000000000000000000000000000000000000000000000000009360048901614f99565b038173__$70ac0b9f44f1ad43af70526685fc041161$__5af4908115610b6c575f91615237575b50929060075493849282515f5b8181106151ff5750507f1cb15a39f12b6a349f8d1d45499b7b9df63464a79fa2e294a7237107e62c384f92916151f09185615b20565b614044604051928392836150e3565b61522b61521a600193949596975f52600d60205260405f2090565b6152248389613692565b5190615068565b019086949392916151ba565b615250915060403d60401161414b5761413b8183612348565b5f6151ad565b90926001600160a01b036080938161070d9796168452166020830152604082015281606082015201906106d7565b61070d9061529181614ec2565b905f52600a602052600260405f20015460801c906136ab565b909291926001600160a01b0381161561391f57836152c7916149b0565b906001600160a01b038216806152ea5784637e27328960e01b5f5260045260245ffd5b6001600160a01b03829593949516036138b157505050565b906001600160801b03809116911601906001600160801b03821161340057565b919091615377615348836153436002614776865f52600a60205260405f2090565b615302565b600261535c845f52600a60205260405f2090565b01906001600160801b0382549181199060801b169116179055565b61538e6002614aa2835f52600a60205260405f2090565b6001600160801b036153c76149876153b060208501516001600160801b031690565b93610c0c6040614f4683516001600160801b031690565b91161015615440575b7f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6001600160a01b036154106001614c01855f52600a60205260405f2090565b6154246001600160801b0386168783615e05565b6040516001600160801b039590951685528116941692602090a4565b6154576001614d71835f52600a60205260405f2090565b61546c614b6d825f52600a60205260405f2090565b6153d0565b60405190610140820182811067ffffffffffffffff821117612327576040525f610120838281528260208201528260408201526154ac613cbb565b60608201528260808201528260a08201528260c08201526154cb613cbb565b60e082015260606101008201520152565b6003821015610cb45752565b906003811015610cb457815460ff60b81b191660b89190911b60ff60b81b16179055565b600261014061084a9361554561552982516001600160a01b031690565b85546001600160a01b0319166001600160a01b03909116178555565b6155a461555a602083015164ffffffffff1690565b85547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff000000000000000000000000000000000000000016178555565b6155f26155b9604083015164ffffffffff1690565b85547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b64ffffffffff60c81b16178555565b61561c6156026060830151151590565b855460ff60f01b191690151560f01b60ff60f01b16178555565b61566461562c6080830151151590565b85546001600160f81b031690151560f81b7fff0000000000000000000000000000000000000000000000000000000000000016178555565b6157436001850161569e61568260a08501516001600160a01b031690565b82546001600160a01b0319166001600160a01b03909116178255565b6156d96156ae60c0850151151590565b825460ff60a01b191690151560a01b74ff000000000000000000000000000000000000000016178255565b6157036156e960e0850151151590565b825460ff60a81b191690151560a81b60ff60a81b16178255565b61572e615714610100850151151590565b825460ff60b01b191690151560b01b60ff60b01b16178255565b6101208301519061573e82612da6565b6154e8565b015191018151602083015160801b6fffffffffffffffffffffffffffffffff199081166001600160801b03928316178355604090930151600190920180549093169116179055565b9190615795615471565b5080516001600160a01b03169160c08201805180516157b89064ffffffffff1690565b60209091015164ffffffffff1694608085019081516157d690151590565b92606087019788516157ee906001600160a01b031690565b60a089019586516157fe90151590565b928951615811906001600160801b031690565b9461581a612389565b6001600160801b0390961686525f60208701819052604087015261583c612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f5f61012084016154dc565b6101408201526158b7885f52600a60205260405f2090565b906158c19161550c565b60208501968088516158d9906001600160a01b031690565b906158e391615e41565b60010160075585516001600160a01b031684516001600160801b03166001600160801b0316303361591393615e7c565b60208401516001600160801b0316806159d8575b5084516001600160a01b031696516001600160a01b031695516001600160a01b0316905115159151151592519360e0860151956101000151615971906001600160a01b0390511690565b9661597a6123a8565b338152986001600160a01b031660208a01526001600160a01b0316604089015260608801526001600160a01b03166080870152151560a0860152151560c085015260e08401526101008301526001600160a01b031661012082015290565b615a05906159ed88516001600160a01b031690565b610100880151516001600160a01b0316903390615e7c565b5f615927565b9190615a15615471565b5080516001600160a01b03169160c0820180518051615a389064ffffffffff1690565b60209091015164ffffffffff169460808501908151615a5690151590565b9260608701978851615a6e906001600160a01b031690565b60a08901958651615a7e90151590565b928951615a91906001600160801b031690565b94615a9a612389565b6001600160801b0390961686525f602087018190526040870152615abc612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f600161012084016154dc565b9190615b2a615471565b5080516001600160a01b03169160c0820180518051615b4d9064ffffffffff1690565b60209091015164ffffffffff169460808501908151615b6b90151590565b9260608701978851615b83906001600160a01b031690565b60a08901958651615b9390151590565b928951615ba6906001600160801b031690565b94615baf612389565b6001600160801b0390961686525f602087018190526040870152615bd1612398565b6001600160a01b03909716875264ffffffffff16602087015264ffffffffff166040860152151560608501525f60808501526001600160a01b031660a08401525f60c0840152600160e0840152151561010083015261589f600261012084016154dc565b615c47905f52600560205260405f2090565b80546001600160a01b0319169055565b815f5260036020526001600160a01b0360405f205416926001600160a01b038116615d32575b506001600160a01b03831680615d02575b615cb46001600160a01b0383169283615cdb575b6108d1855f52600360205260405f2090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b615cf6816001600160a01b03165f52600460205260405f2090565b60018154019055615ca2565b615d0b83615c35565b615d26846001600160a01b03165f52600460205260405f2090565b80545f19019055615c8e565b615d4d6001600160a01b0382168015159081615d9357501590565b15615c7d57826001600160a01b038516615d7357637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f526001600160a01b0390911660045260245260445ffd5b6001600160a01b03871680821492508215615dd2575b508115615db557501590565b9050845f5260056020526001600160a01b0360405f205416141590565b9091505f52600660205260ff615dfc8460405f20906001600160a01b03165f5260205260405f2090565b5416905f615da9565b61084a926001600160a01b036040519363a9059cbb60e01b6020860152166024840152604483015260448252615e3c606483612348565b615ebd565b6001600160a01b0381161561391f576001600160a01b0391615e62916149b0565b16615e6957565b6339e3563760e11b5f525f60045260245ffd5b9091926001600160a01b0361084a9481604051956323b872dd60e01b6020880152166024860152166044840152606483015260648252615e3c608483612348565b5f806001600160a01b03615ee693169360208151910182865af1615edf6136ef565b9083615f33565b8051908115159182615f18575b5050615efc5750565b6001600160a01b0390635274afe760e01b5f521660045260245ffd5b615f2b9250602080918301019101613932565b155f80615ef3565b90615f575750805115615f4857805190602001fd5b630a12f52160e11b5f5260045ffd5b81511580615f84575b615f68575090565b6001600160a01b0390639996b31560e01b5f521660045260245ffd5b50803b15615f6056fef8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7a164736f6c634300081a000a",
    "sourceMap": "2462:19692:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;519:76:82;;;:::i;:::-;2462:19692:79;;:::i;:::-;8511:15;2462:19692;;;;8511:15;2462:19692;8477:61;;2462:19692;;;-1:-1:-1;8634:15:79;:19;:15;;;:::i;:::-;2462:19692;;;;8634:19;8630:96;;2462:19692;;;;;8771:15;2462:19692;8771:15;;;;:::i;:::-;8752:34;;;:::i;:::-;2462:19692;;;;8949:13;;;:::i;:::-;8991:16;;2462:19692;8991:16;;;:::i;:::-;9038:18;;2462:19692;9038:18;;;:::i;:::-;9081:12;;2462:19692;9081:12;;;:::i;:::-;9123:17;;;;;:::i;:::-;9172:19;2462:19692;9172:19;;;:::i;:::-;9256:12;;;;;;;:::i;:::-;2462:19692;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;8895:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;8895:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;8895:427;;2462:19692;;;9123:17;8895:427;;2462:19692;;;;8895:427;;2462:19692;9256:12;8895:427;;2462:19692;;;;;;:::i;:::-;9294:13;8895:427;;2462:19692;;9294:13;;;2462:19692;;;;:::i;:::-;8895:427;;;2462:19692;;;;;:::i;:::-;8872:510;;;:::i;:::-;2462:19692;;;;;;;;;;;;8630:96;2462:19692;;8681:34;2462:19692;;;;;;;;8700:15;;;:::i;:::-;8681:34;;:::i;:::-;8630:96;;;2462:19692;-1:-1:-1;;;;;;2462:19692:79;;;;;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;;;;;;;;8730:25:83;;:65;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;;;;;;;;8730:65:83;-1:-1:-1;;;1698:40:8;;;-1:-1:-1;1698:104:8;;;;8730:65:83;1698:156:8;;;;8730:65:83;;;;;1698:156:8;-1:-1:-1;;;861:40:16;;-1:-1:-1;1698:156:8;;;:104;-1:-1:-1;;;1754:48:8;;;-1:-1:-1;1698:104:8;;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;1714:6:83;2462:19692:79;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;2462:19692:79;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;2442:5:8;2462:19692:79;;2442:5:8;2462:19692:79;;2442:5:8;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;2442:5:8;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;2442:5:8;2462:19692:79;;;;-1:-1:-1;;2462:19692:79;;;-1:-1:-1;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::o;:::-;;;;;;:::i;:::-;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;;;14943:22:8;;;;:::i;:::-;735:10:14;15093:18:8;;:35;;;2462:19692:79;15093:69:8;;;2462:19692:79;15089:142:8;;2462:19692:79;15346:29:8;2462:19692:79;15346:24:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;15283:28:8;-1:-1:-1;15283:28:8;;2462:19692:79;;15346:15:8;2462:19692:79;;;;;;;15346:24:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;15346:29:8;2462:19692:79;15089:142:8;-1:-1:-1;;;;15189:27:8;735:10:14;2462:19692:79;;;-1:-1:-1;15189:27:8;;-1:-1:-1;15189:27:8;15093:69;735:10:14;2462:19692:79;4039:35:8;735:10:14;4039:25:8;;-1:-1:-1;;;;;2462:19692:79;;;4039:18:8;2462:19692:79;;;;;;;4039:25:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;4039:35:8;2462:19692:79;;15132:30:8;15093:69;;:35;735:10:14;;-1:-1:-1;;;;;2462:19692:79;;15115:13:8;;15093:35;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;519:76:82;;;:::i;:::-;-1:-1:-1;2462:19692:79;7055:15;2462:19692;;;;7168:67;2462:19692;;;;;;;;;;7168:67;;2462:19692;7168:67;;;:::i;:::-;;:7;;:67;;;;;;;-1:-1:-1;7168:67:79;;;2462:19692;;;;7398:19;;;:::i;:::-;7389:29;;;;:::i;:::-;;2462:19692;7389:39;2462:19692;;;;;:::i;:::-;;;;;;;;;;7346:85;;2462:19692;7594:13;;;:::i;:::-;7636:16;;2462:19692;7636:16;;;:::i;:::-;7683:18;;2462:19692;7683:18;;;:::i;:::-;7726:12;;;;;;:::i;:::-;7768:17;;;;;:::i;:::-;7817:19;;;;;:::i;:::-;7901:12;;;;;;;:::i;:::-;2462:19692;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;7540:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;7540:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;7726:12;7540:427;;2462:19692;;;7768:17;7540:427;;2462:19692;;;7817:19;7540:427;;2462:19692;7901:12;7540:427;;2462:19692;;;;;;:::i;:::-;;7540:427;;2462:19692;;7939:13;2462:19692;7939:13;2462:19692;;;;:::i;:::-;7540:427;;;2462:19692;7517:482;;;:::i;7168:67::-;;;;;;;-1:-1:-1;7168:67:79;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;2462:19692::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;3183:1:83;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;-1:-1:-1;2462:19692:79;;;;;7800:65:83;;;2462:19692:79;7796:188:83;;2462:19692:79;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;7796:188:83;7900:73;2462:19692:79;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;7939:34:83;2462:19692:79;7900:26:83;2462:19692:79;-1:-1:-1;2462:19692:79;7900:26:83;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;7939:34:83;;:::i;:::-;7900:73;;:::i;:::-;7796:188;;;7800:65;2462:19692:79;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;7836:29:83;2462:19692:79;;;;7835:30:83;7800:65;;3069:105;3124:39;;;-1:-1:-1;3124:39:83;2462:19692:79;;;-1:-1:-1;3124:39:83;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;7171:19;;;:::i;:::-;2462:19692:79;;;;;;7209:31:83;2462:19692:79;7209:31:83;;:68;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;7209:68:83;3074:27;2462:19692:79;;7244:33:83;7209:68;;;2462:19692:79;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2462:19692:79;;;:::i;:::-;;-1:-1:-1;2462:19692:79;;;;;;894:13:81;;-1:-1:-1;909:9:81;;;;;;2462:19692:79;;;;;;;:::i;920:3:81:-;-1:-1:-1;1004:8:81;;;;;;:::i;:::-;2462:19692:79;;;;;;;;;:::i;:::-;977:36:81;985:4;;977:36;;;;:::i;:::-;1118:8;;1114:377;;1560:19;2462:19692:79;1560:19:81;;;;;:::i;:::-;;;;;;:::i;:::-;;2462:19692:79;894:13:81;;1114:377;1146:331;;;2462:19692:79;1146:331:81;;2462:19692:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;1767:36:83;2462:19692:79;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;519:76:82;;;;;:::i;:::-;2462:19692:79;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;11129:27;;;;:::i;:::-;2462:19692;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::i;:::-;;-1:-1:-1;2462:19692:79;5773:14:83;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2462:19692:79;;908:10:80;899:19;;895:116;;10047:21:83;;;:26;10043:123;;2462:19692:79;;-1:-1:-1;;;10357:65:83;;-1:-1:-1;;;2462:19692:79;10357:65:83;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;10357:65:83;;;;;;;-1:-1:-1;10357:65:83;;;2462:19692:79;10356:66:83;;10352:171;;10588:32;:25;;-1:-1:-1;;;;;2462:19692:79;;;10588:14:83;2462:19692:79;;;;;;;10588:25:83;2462:19692:79;;-1:-1:-1;;2462:19692:79;10616:4:83;2462:19692:79;;;;10588:32:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;908:10:80;;10675:75:83;;2462:19692:79;;10675:75:83;2462:19692:79;10352:171:83;-1:-1:-1;;;;10445:67:83;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;15189:27:8;10357:65:83;;;;2462:19692:79;10357:65:83;2462:19692:79;10357:65:83;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;10043:123;-1:-1:-1;;;;10096:59:83;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;15189:27:8;895:116:80;941:59;;;-1:-1:-1;941:59:80;2462:19692:79;;908:10:80;2462:19692:79;;;-1:-1:-1;941:59:80;2462:19692:79;;;-1:-1:-1;;2462:19692:79;;;;;;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;11792:29:83;2462:19692:79;;;;11788:239:83;2462:19692:79;;;-1:-1:-1;;;;11844:49:83;2462:19692:79;;;-1:-1:-1;15189:27:8;11788:239:83;2462:19692:79;11914:18:83;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;11914:18:83;2462:19692:79;;;;;;11910:117:83;;12096:32;12097:31;;-1:-1:-1;2462:19692:79;21722:8:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;21708:10:83;:39;21613:141;;12097:31;12096:32;;2462:19692:79;12096:32:83;12092:129;;12303:8;;;:::i;12092:129::-;-1:-1:-1;;;;12151:59:83;2462:19692:79;;12199:10:83;2462:19692:79;;;-1:-1:-1;15189:27:8;11910:117:83;-1:-1:-1;;;;11967:49:83;2462:19692:79;;;-1:-1:-1;15189:27:8;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;6572:29:83;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;4873:39:8;2462:19692:79;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4873:39:8;:::i;2462:19692:79:-;;;-1:-1:-1;;2462:19692:79;;;;;;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;10963:29:83;2462:19692:79;;;;10962:30:83;10958:120;;2462:19692:79;-1:-1:-1;2462:19692:79;5799:7:8;2462:19692:79;;11345:63:83;11346:62;5799:16:8;2462:19692:79;-1:-1:-1;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;5799:16:8;11346:62:83;;:::i;11345:63::-;11341:160;;11561:8;;;:::i;10958:120::-;11015:52;;;-1:-1:-1;11015:52:83;2462:19692:79;;;-1:-1:-1;11015:52:83;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;-1:-1:-1;;;;;1849:50:83;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;5967:19:83;;;:::i;:::-;2462:19692:79;;;;;;5990:21:83;5967:44;5963:115;;2462:19692:79;;;;;;;;;;;5963:115:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;5963:115:83;;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;8475:27;;;:::i;:::-;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;519:76:82;;;;;:::i;:::-;19590:30:83;;;19586:150;;-1:-1:-1;19871:18:83;;;;;;2462:19692:79;19891:3:83;20115:12;-1:-1:-1;20115:12:83;;;20070:95;20153:10;;20115:12;;20129:22;20138:12;20115;;;2462:19692:79;20115:12:83;;;;:::i;:::-;2462:19692:79;20138:12:83;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;5707:115:8;;20129:22:83;20153:10;;:::i;:::-;;:::i;:::-;2462:19692:79;;-1:-1:-1;;;2462:19692:79;20070:95:83;;;;;2462:19692:79;20070:95:83;;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;20070:95:83;;2462:19692:79;;20070:95:83;:::i;:::-;20026:153;20034:4;;20026:153;;;;:::i;:::-;20297:8;;20293:109;;19891:3;;2462:19692:79;19856:13:83;;20293:109;20330:57;20366:12;;;;;;:::i;:::-;2462:19692:79;20330:57:83;2462:19692:79;;20330:57:83;;;;;:::i;:::-;;;;20293:109;;;19586:150;-1:-1:-1;;;;19643:82:83;2462:19692:79;;;;;;;;;-1:-1:-1;15189:27:8;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;2274:22:8;2462:19692:79;;2274:22:8;:::i;2462:19692:79:-;;;;;;-1:-1:-1;;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::i;:::-;;2006:19:8;;2002:87;;-1:-1:-1;2462:19692:79;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;2002:87:8;2048:30;;;-1:-1:-1;2048:30:8;-1:-1:-1;2462:19692:79;;;-1:-1:-1;2048:30:8;2462:19692:79;;;;:::i;:::-;519:76:82;;:::i;:::-;14553:1:83;14536:154;14556:9;;;;;;2462:19692:79;14567:3:83;14666:12;;;;;:::i;:::-;2462:19692:79;519:76:82;;;:::i;:::-;2462:19692:79;14553:1:83;2462:19692:79;3074:8:83;2462:19692:79;;;;;14553:1:83;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;13483:19;;;:::i;:::-;2462:19692:79;;;:::i;:::-;;13516:32:83;;2462:19692:79;;-1:-1:-1;;;14553:1:83;13571:49;2462:19692:79;;;;;-1:-1:-1;15189:27:8;13512:367:83;2462:19692:79;;;:::i;:::-;13651:22:83;13641:32;;13651:22;;-1:-1:-1;;;14553:1:83;13696:49;2462:19692:79;;;;;-1:-1:-1;15189:27:8;13637:242:83;2462:19692:79;;13776:21:83;2462:19692:79;;;;;;:::i;:::-;13766:31:83;13762:117;;13948:32;13949:31;;-1:-1:-1;2462:19692:79;21722:8:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;21708:10:83;:39;21613:141;;13948:32;13944:129;;14145:8;;;2462:19692:79;14145:8:83;;:::i;:::-;14203:49;14553:1;14203:49;;2462:19692:79;14541:13:83;;;13762:117;-1:-1:-1;;;14553:1:83;13820:48;2462:19692:79;;;-1:-1:-1;15189:27:8;3069:105:83;3124:39;;;;14553:1;3124:39;2462:19692:79;;;14553:1:83;3124:39;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;908:10:80;899:19;;895:116;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;-1:-1:-1;2462:19692:79;908:10:80;1957:70;-1:-1:-1;1957:70:80;;2462:19692:79;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;2809:43;2462:19692;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;4757:30;2462:19692;;;;;;;;;;4753:195;;4970:17;;2462:19692;4970:17;2462:19692;;4970:7;2462:19692;;;;;;;4970:17;2462:19692;;;;;4970:17;2462:19692;;;;;;;;;;;;;;;;4753:195;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;4840:97;4878:30;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;4878:30;2462:19692;;;;;;;;4878:30;-1:-1:-1;;;;4840:97:79;;:::i;2462:19692::-;;;;;;;:::o;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;11577:43;2462:19692;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;519:76:82;;:::i;2462:19692:79:-;;;;;:::i;:::-;11577:43;;:::i;:::-;2462:19692;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2462:19692:79;;908:10:80;899:19;;895:116;;2462:19692:79;-1:-1:-1;;;;;14927:13:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;14927:13:83;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;15047:174:83;2462:19692:79;908:10:80;15047:174:83;;15290:70;;15341:16;:12;2462:19692:79;15341:16:83;:::i;:::-;2462:19692:79;;15290:70:83;;;;2462:19692:79;;;;;;;15326:1:83;2462:19692:79;;;;;15290:70:83;;;;2462:19692:79;;;;-1:-1:-1;;2462:19692:79;;;;;;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;13483:19;;;:::i;:::-;2462:19692:79;;;:::i;:::-;;13516:32:83;;2462:19692:79;;-1:-1:-1;;;;13571:49:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;13512:367:83;2462:19692:79;;;:::i;:::-;13651:22:83;13641:32;;13651:22;;-1:-1:-1;;;;13696:49:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;13637:242:83;2462:19692:79;;13776:21:83;2462:19692:79;;:::i;:::-;13766:31:83;13762:117;;13948:32;13949:31;;-1:-1:-1;2462:19692:79;21722:8:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;21708:10:83;:39;21613:141;;13948:32;13944:129;;14145:8;;;:::i;:::-;14203:49;-1:-1:-1;14203:49:83;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;12008:27;;;;:::i;2462:19692::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;5693:30;2462:19692;;;;;;;;;;5727:28;5693:62;5689:199;;2462:19692;5909:19;2462:19692;5909:19;2462:19692;;5909:9;2462:19692;;;;;;;5909:19;2462:19692;:::i;:::-;;;;;;;;:::i;5689:199::-;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;5778:99;5816:30;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;5816:30;2462:19692;;;;;;;;5816:30;-1:-1:-1;;;;5778:99:79;;:::i;2462:19692::-;;;;:::i;:::-;519:76:82;;:::i;:::-;12609:1:83;12592:141;12612:9;;;;;;2462:19692:79;12623:3:83;12709:12;;;;;:::i;:::-;2462:19692:79;519:76:82;;;:::i;:::-;2462:19692:79;12609:1:83;2462:19692:79;3074:8:83;2462:19692:79;;;;;12609:1:83;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;12609:1:83;2462:19692:79;3074:8:83;2462:19692:79;;;;;12609:1:83;2462:19692:79;11792:29:83;2462:19692:79;;;;11788:239:83;2462:19692:79;;;-1:-1:-1;;;12609:1:83;11844:49;2462:19692:79;;;;;-1:-1:-1;15189:27:8;11788:239:83;11914:18;;2462:19692:79;11914:18:83;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;11910:117:83;;12096:32;12097:31;;-1:-1:-1;2462:19692:79;21722:8:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;21708:10:83;:39;21613:141;;12096:32;12092:129;;12303:8;;2462:19692:79;12303:8:83;;:::i;:::-;2462:19692:79;12597:13:83;;;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;6259:19;;;:::i;:::-;2462:19692:79;;;;;;6297:31:83;6307:21;2462:19692:79;6297:31:83;;:67;;;;;2462:19692:79;6297:103:83;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;6297:103:83;2462:19692:79;;;;;;:::i;:::-;6368:32:83;6297:103;;;:67;6342:22;6332:32;;;-1:-1:-1;6297:67:83;;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;2597:7:8;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2597:7:8;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;15698:22:8;;;15694:91;;735:10:14;15794:35:8;:46;735:10:14;;-1:-1:-1;2462:19692:79;15794:18:8;2462:19692:79;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;15794:35:8;2462:19692:79;;;;;;;;;;;;;;;15794:46:8;2462:19692:79;;;;;;;15855:41:8;2462:19692:79;735:10:14;15855:41:8;;2462:19692:79;15694:91:8;15743:31;;;;-1:-1:-1;15743:31:8;2462:19692:79;;;-1:-1:-1;15743:31:8;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;-1:-1:-1;;;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;5317:24:83;2462:19692:79;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;-1:-1:-1;;;;;3650:26:83;2462:19692:79;-1:-1:-1;2462:19692:79;3650:26:83;2462:19692:79;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;8215:19;;;:::i;:::-;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;6956:33:83;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;5223:30;2462:19692;;;;;;;;;;3074:27:83;5223:61:79;5219:197;;2462:19692;5437:19;2462:19692;5437:19;2462:19692;;5437:9;2462:19692;;;;;;;5437:19;2462:19692;:::i;:::-;;;;;;;;:::i;5219:197::-;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;5307:98;5345:30;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;5345:30;2462:19692;;;;;;;;5345:30;-1:-1:-1;;;;5307:98:79;;:::i;2462:19692::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;15279:12;2462:19692;;:::i;:::-;;;;;;;;:::i;:::-;;;;;15040:510;2462:19692;;:::i;:::-;;;;;;;;-1:-1:-1;;2462:19692:79;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;-1:-1:-1;2462:19692:79;6753:8:83;2462:19692:79;;;;6753:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;6753:27:83;2462:19692:79;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;:::i;:::-;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;18617:62:83;;;;;:::i;:::-;18616:63;18612:160;;18867:31;;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;18912:19:83;;;;18908:129;;2462:19692:79;;19159:8:83;;;;;;:::i;:::-;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;18908:129:83;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;3074:27:83;15667:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;15667:18:83;:29;2462:19692:79;;;;;;;;15663:116:83;;15847:16;;15843:110;;5799:16:8;;;2462:19692:79;;5799:7:8;2462:19692:79;;;;;;;5799:16:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;5799:16:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;16215:15:83;;;;;:75;;;18908:129;16211:193;;16465:102;;16689:31;;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;-1:-1:-1;16730:136:83;;16958:6;;;;;;:::i;:::-;2462:19692:79;;;;;-1:-1:-1;;;;;;;;;;;17057:38:83;2462:19692:79;;17057:38:83;17224:10;;:23;;:52;;;18908:129;17220:560;18908:129;17220:560;2462:19692:79;;-1:-1:-1;;;17310:202:83;;2462:19692:79;17310:202:83;;2462:19692:79;;;17224:10:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;-1:-1:-1;;17310:202:83;;;;;;;-1:-1:-1;17310:202:83;;;17220:560;-1:-1:-1;;;;;;;2462:19692:79;-1:-1:-1;;;17605:68:83;17601:169;;17220:560;18908:129;;17601:169;-1:-1:-1;;;;17700:55:83;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;15189:27:8;17310:202:83;;;;2462:19692:79;17310:202:83;2462:19692:79;17310:202:83;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;17224:52;17251:25;;;;-1:-1:-1;;;;;2462:19692:79;;;10588:14:83;2462:19692:79;;;;;;;17251:25:83;2462:19692:79;;;;;17251:25:83;17224:52;;16730:136;-1:-1:-1;;;;16784:71:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;-1:-1:-1;15189:27:8;16465:102:83;-1:-1:-1;;;;16503:53:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;16211:193:83;-1:-1:-1;;;;16313:80:83;2462:19692:79;;;;16378:10:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;15189:27:8;16215:75:83;16235:55;16234:56;16235:55;;;;:::i;16234:56::-;16215:75;;15843:110;-1:-1:-1;;;;15886:56:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;15663:116:83;-1:-1:-1;;;;15719:49:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;3069:105:83;3124:39;;;;-1:-1:-1;3124:39:83;2462:19692:79;;;-1:-1:-1;3124:39:83;18612:160;12151:59;;;;-1:-1:-1;18702:59:83;2462:19692:79;;18750:10:83;2462:19692:79;;;-1:-1:-1;18702:59:83;3069:105;3124:39;;;;-1:-1:-1;3124:39:83;2462:19692:79;;;-1:-1:-1;3124:39:83;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;12855:21:83;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;12956:34:83;;;;:::i;:::-;;13043:8;13039:104;;-1:-1:-1;;;;;2462:19692:79;;;;;13193:70:83;2462:19692:79;13193:70:83;;2462:19692:79;13039:104:83;-1:-1:-1;;;;;2462:19692:79;;;13074:58:83;;;2462:19692:79;13074:58:83;2462:19692:79;;;;;;13074:58:83;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;8996:36:83;;;:::i;:::-;;-1:-1:-1;;;;;;9104:13:83;2462:19692:79;;;9104:61:83;2462:19692:79;;;;;;;;;9104:61:83;;9138:4;2462:19692:79;9104:61:83;;2462:19692:79;;;;;9104:61:83;;;;;;-1:-1:-1;9104:61:83;;;2462:19692:79;;;;;;;;;;:::i;9104:61:83:-;;;;-1:-1:-1;9104:61:83;;;;;;:::i;:::-;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9104:61:83;;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;-1:-1:-1;;;;;4693:35:83;2462:19692:79;-1:-1:-1;2462:19692:79;4693:35:83;2462:19692:79;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;5586:26:83;2462:19692:79;-1:-1:-1;2462:19692:79;5586:26:83;2462:19692:79;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;9621:31;;;:::i;2462:19692:79:-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;519:76:82;;;:::i;:::-;-1:-1:-1;2462:19692:79;9797:15;2462:19692;;;;9911:67;2462:19692;;;;;;;;;;9911:67;;2462:19692;9911:67;;;:::i;:::-;;:7;;:67;;;;;;;-1:-1:-1;9911:67:79;;;2462:19692;;;;10141:19;;;:::i;:::-;10132:29;;;;:::i;:::-;;2462:19692;10132:39;2462:19692;;;;;:::i;:::-;;;;;;;;;;10089:85;;2462:19692;10337:13;;;:::i;:::-;10379:16;;2462:19692;10379:16;;;:::i;:::-;10426:18;;2462:19692;10426:18;;;:::i;:::-;10469:12;;;;;;:::i;:::-;10511:17;;;;;:::i;:::-;10560:19;;;;;:::i;:::-;10644:12;;;;;;;:::i;:::-;2462:19692;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;10283:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;10283:427;;2462:19692;-1:-1:-1;;;;;2462:19692:79;10469:12;10283:427;;2462:19692;;;10511:17;10283:427;;2462:19692;;;10560:19;10283:427;;2462:19692;10644:12;10283:427;;2462:19692;;;;;;:::i;:::-;;10283:427;;2462:19692;;10682:13;2462:19692;10682:13;2462:19692;;;;:::i;:::-;10283:427;;;2462:19692;10260:482;;;:::i;9911:67::-;;;;;;;-1:-1:-1;9911:67:79;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;2462:19692;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;:::i;:::-;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;6177:30;2462:19692;;;;;;;;;;6173:195;;2462:19692;6394:24;2462:19692;6394:24;2462:19692;;6394:14;2462:19692;;;;;;;6394:24;2462:19692;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;2462:19692:79;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;4126:30:83;2462:19692:79;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2462:19692:79;;;;;;4039:35:8;2462:19692:79;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;:::i;:::-;;-1:-1:-1;2462:19692:79;4039:18:8;2462:19692:79;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;4039:35:8;2462:19692:79;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;:::i;:::-;17970:31:83;;;:::i;:::-;519:76:82;;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;3074:27:83;15667:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;15663:116:83;;-1:-1:-1;;;;;2462:19692:79;;15847:16:83;;;15843:110;;5799:16:8;;;2462:19692:79;;5799:7:8;2462:19692:79;;;;;;;5799:16:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;16215:15:83;;;;:75;;;2462:19692:79;16211:193:83;;-1:-1:-1;;;;;2462:19692:79;;16469:11:83;;16465:102;;16689:31;;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;-1:-1:-1;16730:136:83;;16958:6;;;;;;:::i;:::-;2462:19692:79;;;;;-1:-1:-1;;;;;;;;;;;17057:38:83;2462:19692:79;;17057:38:83;17224:10;;:23;;:52;;;2462:19692:79;17220:560:83;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;17220:560:83;2462:19692:79;;-1:-1:-1;;;17310:202:83;;2462:19692:79;17310:202:83;;2462:19692:79;;;;17224:10:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;-1:-1:-1;;17310:202:83;;;;;;;-1:-1:-1;17310:202:83;;;17220:560;-1:-1:-1;;;;;;;2462:19692:79;-1:-1:-1;;;17605:68:83;17601:169;;17220:560;;;;;17310:202;;;;2462:19692:79;17310:202:83;2462:19692:79;17310:202:83;;;;;;;:::i;:::-;;;;17224:52;17251:25;;;;-1:-1:-1;;;;;2462:19692:79;;;10588:14:83;2462:19692:79;;;;;;;17251:25:83;17224:52;;16730:136;-1:-1:-1;;;;16784:71:83;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;-1:-1:-1;15189:27:8;16465:102:83;-1:-1:-1;;;;16503:53:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;16211:193:83;-1:-1:-1;;;;16313:80:83;2462:19692:79;;16378:10:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;15189:27:8;16215:75:83;16235:55;16234:56;16235:55;;;;:::i;16234:56::-;16215:75;;15843:110;-1:-1:-1;;;;15886:56:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;15663:116:83;-1:-1:-1;;;;15719:49:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;2462:19692:79;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::o;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;2462:19692:79;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;519:76:82;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;3074:8:83;2462:19692:79;;;3074:27:83;2462:19692:79;-1:-1:-1;2462:19692:79;3074:27:83;2462:19692:79;;;;3073:28:83;3069:105;;2462:19692:79;3074:27:83;15667:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;15663:116:83;;-1:-1:-1;;;;;2462:19692:79;;15847:16:83;;;15843:110;;5799:16:8;;;2462:19692:79;;5799:7:8;2462:19692:79;;;;;;;5799:16:8;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;16215:15:83;;;;:75;;;2462:19692:79;16211:193:83;;-1:-1:-1;;;;;2462:19692:79;;16469:11:83;;16465:102;;16689:31;;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;-1:-1:-1;16730:136:83;;16958:6;;;;;;:::i;:::-;2462:19692:79;;;;;-1:-1:-1;;;;;;;;;;;17057:38:83;2462:19692:79;;17057:38:83;17224:10;;:23;;:52;;;2462:19692:79;17220:560:83;;2462:19692:79;17220:560:83;2462:19692:79;;-1:-1:-1;;;17310:202:83;;2462:19692:79;17310:202:83;;2462:19692:79;;;;17224:10:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;17310:202:83;;;;;;;-1:-1:-1;17310:202:83;;;17220:560;-1:-1:-1;;;;;;;2462:19692:79;-1:-1:-1;;;17605:68:83;17601:169;;2462:19692:79;17310:202:83;;;;2462:19692:79;17310:202:83;2462:19692:79;17310:202:83;;;;;;;:::i;:::-;;;;17224:52;17251:25;;;;-1:-1:-1;;;;;2462:19692:79;;;10588:14:83;2462:19692:79;;;;;;;17251:25:83;17224:52;;16730:136;-1:-1:-1;;;;16784:71:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;-1:-1:-1;15189:27:8;16465:102:83;-1:-1:-1;;;;16503:53:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;16211:193:83;-1:-1:-1;;;;16313:80:83;2462:19692:79;;;;16378:10:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;15189:27:8;16215:75:83;16235:55;16234:56;16235:55;;;;:::i;16234:56::-;16215:75;;15843:110;-1:-1:-1;;;;15886:56:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;15663:116:83;-1:-1:-1;;;;15719:49:83;2462:19692:79;;;-1:-1:-1;15189:27:8;2462:19692:79;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::o;3497:154:8:-;3583:22;;;:::i;:::-;;-1:-1:-1;2462:19692:79;6034:15:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;3497:154:8;:::o;2462:19692:79:-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;-1:-1:-1;;;;;2462:19692:79;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;2462:19692:79;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;4143:578:8:-;;;-1:-1:-1;;;;;2462:19692:79;;4237:16:8;4233:87;;2462:19692:79;4251:1:8;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;4251:1:8;2462:19692:79;;;27683:18:83;;:38;;;4143:578:8;27683:76:83;;;4143:578:8;27679:164:83;;2462:19692:79;;;;;27990:33:83;;;-1:-1:-1;;;;;;;;;;;27934:38:83;2462:19692:79;;27934:38:83;735:10:14;;27990:33:83;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;4610:21:8;4606:109;;4143:578;;;:::o;4606:109::-;-1:-1:-1;;;4251:1:8;4654:50;-1:-1:-1;;;;;2462:19692:79;;;4654:50:8;2462:19692:79;;;;;;;;;;-1:-1:-1;15189:27:8;27679:164:83;-1:-1:-1;;;4251:1:8;27782:50:83;2462:19692:79;;;;;-1:-1:-1;15189:27:8;27683:76:83;27726:18;27725:34;2462:19692:79;27726:33:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;27726:18:83;:33;2462:19692:79;;;;;;;27725:34:83;27683:76;;:38;;27705:16;27683:38;;4233:87:8;4276:33;;;4251:1;4276:33;4251:1;4276:33;2462:19692:79;;4251:1:8;4276:33;2462:19692:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;:::o;:::-;;;;;;;;;;;;5727:28;2462:19692;;:::o;:::-;;;;;;;;;;;;3074:27:83;2462:19692:79;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;-1:-1:-1;2462:19692:79;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;-1:-1:-1;2462:19692:79;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4985:208:8;;;;5121:7;;;;;:::i;:::-;17034:14;;17030:664;;4985:208;;;;;:::o;17030:664::-;17072:71;2462:19692:79;17072:71:8;2462:19692:79;;;;;;;;;;17072:71:8;;735:10:14;17072:71:8;;;;:::i;:::-;;2462:19692:79;17051:1:8;-1:-1:-1;;;;;2462:19692:79;;17072:71:8;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:8;;17331:353;;;:::i;:::-;2462:19692:79;;;;17381:18:8;;;-1:-1:-1;;;17051:1:8;17430:25;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;15189:27:8;17377:293;17557:95;;17072:71;17557:95;;17068:616;-1:-1:-1;;;;;;2462:19692:79;-1:-1:-1;;;17190:51:8;17186:130;;17068:616;17030:664;;;;;;17186:130;-1:-1:-1;;;17051:1:8;17272:25;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;15189:27:8;17072:71;;;;;;;;;;;;;;;:::i;:::-;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2462:19692:79;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;1115:145:82:-;-1:-1:-1;;;;;1191:8:82;2462:19692:79;1182:4:82;1174:25;1170:84;;1115:145::o;1170:84::-;1222:21;;;;;;;;2462:19692:79;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;1714:6:83;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;18501:1878;;;;;;19013:18;2462:19692;;;-1:-1:-1;;;;;2462:19692:79;;;;18935:17;;;;19013:18;18842:359;2462:19692;19013:18;;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;;;19098:17;:13;;;;:17;2462:19692;19136:12;;;;;2462:19692;;;;;;;;;;;18842:359;;;;;;:::i;:::-;;:7;;:359;;;;;;;-1:-1:-1;18842:359:79;;;18501:1878;2462:19692;;20173:199;2462:19692;20173:199;19942:174;19268:12;2462:19692;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;19357:106;;18501:1878;2462:19692;;;;19529:271;;18501:1878;19942:174;;:::i;:::-;2462:19692;19013:18;2462:19692;20173:199;;;;;:::i;:::-;;;;18501:1878::o;19529:271::-;19562:29;:17;;;2462:19692;;4970:7;2462:19692;;;;;;;19562:17;2462:19692;;;;;;;;;;;;19562:29;19098:17;19680:19;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;19676:114;;19529:271;;;;19676:114;19723:52;:24;;;2462:19692;;6394:14;2462:19692;;;;;;;19723:24;2462:19692;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;19723:52;19676:114;;;19357:106;19400:52;:24;;;2462:19692;;6394:14;2462:19692;;;;;;;19400:24;2462:19692;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;19400:52;19357:106;;;18842:359;20173:199;18842:359;;;;;;19013:18;18842:359;19013:18;18842:359;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;16138:241:8;2462:19692:79;-1:-1:-1;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;16267:19:8;;;16263:88;;16360:12;16138:241;:::o;16263:88::-;16309:31;;;-1:-1:-1;16309:31:8;;2462:19692:79;;-1:-1:-1;16309:31:8;2462:19692:79;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:6:83;2462:19692:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;-1:-1:-1;2462:19692:79;;;-1:-1:-1;2462:19692:79;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2462:19692:79;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;16732:1664::-;;;2462:19692;17175:18;2462:19692;;;-1:-1:-1;;;;;2462:19692:79;;;;17131:17;;;;17037:349;2462:19692;17175:18;;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;;;17283:13;:17;:13;;;;:17;2462:19692;17321:12;;;;2462:19692;;;;;;;;;;;17037:349;;17249:9;17037:349;;;;;:::i;:::-;;:7;;:349;;;;;;;-1:-1:-1;17037:349:79;;;16732:1664;2462:19692;;;17453:12;2462:19692;;;;;;-1:-1:-1;17774:16:79;;;;;;18001:175;;18233:156;18001:175;;;;;;:::i;:::-;18233:156;17175:18;2462:19692;18233:156;;;;;:::i;17792:3::-;17811:37;:19;2462:19692;17811:19;;;;;2462:19692;;5437:9;2462:19692;;;;;;;17811:19;17836:11;;;;:::i;:::-;;17811:37;;:::i;:::-;2462:19692;17759:13;;;;;;;;17037:349;;;;17175:18;17037:349;17175:18;17037:349;;;;;;;:::i;:::-;;;;2462:19692;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12304:2041;2462:19692;12502:15;2462:19692;;12554:26;:18;;2462:19692;;3074:8:83;2462:19692:79;;;;;;;12554:18;:26;2462:19692;-1:-1:-1;;;;;2462:19692:79;;;;12627:18;2462:19692;12627:30;:18;;2462:19692;;3074:8:83;2462:19692:79;;;;;;;12627:18;:30;2462:19692;;;;;;;;12667:22;2462:19692;12776:28;:18;;2462:19692;;3074:8:83;2462:19692:79;;;;;;;12776:18;2462:19692;;;;;;;12776:28;12811:18;12749:91;12811:26;:18;;2462:19692;;3074:8:83;2462:19692:79;;;;;;;12811:18;2462:19692;;;;;;;12811:26;12749:91;2462:19692;;:::i;:::-;;;;;;;;12749:91;2462:19692;;12749:91;;;2462:19692;;12749:91;2462:19692;;;:::i;:::-;12627:30;12926:42;;12627:30;;13128:19;;13001:320;12749:91;13128:19;;13270:36;12554:26;13270:18;13128:19;;2462:19692;;5437:9;2462:19692;;;;;;;13128:19;13270:18;2462:19692;;3074:8:83;2462:19692:79;;;;;;;13270:18;:26;2462:19692;;;;;13270:36;2462:19692;;;;;;;;;;;13001:320;;;;;;:::i;:::-;;:11;;:320;;;;;;;2462:19692;13001:320;;;12984:337;12304:2041;:::o;13001:320::-;;;;12749:91;13001:320;12749:91;13001:320;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;12922:1385;2462:19692;;;;;;;;:::i;:::-;13420:41;;;13709:17;12749:91;13709:17;;;;;;13494:375;13709:17;2462:19692;;4970:7;2462:19692;;;;;;;13709:17;13759:24;13818:36;12554:26;13818:18;13759:24;;2462:19692;;6394:14;2462:19692;;;;;;;13759:24;13818:18;2462:19692;;3074:8:83;2462:19692:79;;;;;;;13818:36;2462:19692;;;;;;;;;;;13494:375;;;;;;:::i;13416:891::-;2462:19692;;12554:26;2462:19692;;:::i;:::-;13970:43;13966:341;;13416:891;;;;;2462:19692;:::o;13966:341::-;12749:91;14262:19;;;;14046:250;14262:19;2462:19692;;5909:9;2462:19692;;;;;;;14262:19;2462:19692;;-1:-1:-1;;;14046:250:79;;2462:19692;;;;;14046:250;;;;:::i;:::-;;:11;;:250;;;;;;;2462:19692;14046:250;;;13966:341;14029:267;13966:341;;;;;;14046:250;;;;12749:91;14046:250;12749:91;14046:250;;;;;;;:::i;:::-;;;;21836:594:83;2462:19692:79;21925:29:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;21925:29:83;;;21970;21977:22;21970:29;:::o;21921:185::-;22020:30;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;22020:30:83;22016:90;;22120:46;2462:19692:79;22138:18:83;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;22120:46:83;:15;:46;22116:105;;-1:-1:-1;;;;;22235:73:83;2462:19692:79;22272:26:83;:18;22235:34;;;:::i;:::-;22272:18;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;22235:73:83;2462:19692:79;;22235:73:83;22272:26;;;21925:29;22324:30;:::o;22231:193::-;22272:26;22385:28;:::o;22116:105::-;22182:28;2462:19692:79;22182:28:83;:::o;22016:90::-;22066:29;22073:22;22066:29;:::o;27528:502::-;2462:19692:79;;;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;27683:18:83;;:38;;;27528:502;27683:76;;;27528:502;27679:164;;27990:33;2462:19692:79;;;-1:-1:-1;;;;;;;;;;;2462:19692:79;;27934:38:83;;;;2462:19692:79;;;;;;;;27934:38:83;;;;27990:33;:::i;27679:164::-;27782:50;;;;2462:19692:79;27782:50:83;2462:19692:79;;;;27782:50:83;27683:76;27726:18;2462:19692:79;27726:33:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;27726:18:83;:33;2462:19692:79;;;;27725:34:83;27683:76;;:38;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;27705:16:83;;27683:38;;2462:19692:79;;;;;;;:::i;:::-;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;:::o;23546:2777:83:-;23667:34;;;:::i;:::-;23790:18;2462:19692:79;23790:26:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;23790:18:83;:26;2462:19692:79;:::i;:::-;;23876:35:83;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;23876:35:83;-1:-1:-1;;;;;2462:19692:79;;23876:35:83;;23872:121;;24051:32;24052:31;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;24052:18:83;2462:19692:79;;;;;;;24051:32:83;24047:124;;2462:19692:79;;24435:17:83;24292:34;24418;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;24292:34:83;24435:17;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;24418:34:83;24511:18;:37;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;24511:18:83;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;;;2462:19692:79;;;;24511:37:83;24662:39;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;24662:18:83;2462:19692:79;;-1:-1:-1;;;;2462:19692:79;;;;24662:39:83;-1:-1:-1;;;;;2462:19692:79;;24823:20:83;24819:87;;23546:2777;24960:50;:18;:35;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;24960:18:83;:35;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;24960:50:83;25101:25;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;25101:25:83;5799:16:8;;;;2462:19692:79;;5799:7:8;2462:19692:79;;;;;;;5799:16:8;25251:18:83;:24;24544:4;25251:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;25251:18:83;:24;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;25251:24:83;2462:19692:79;25329:55:83;-1:-1:-1;;;;;2462:19692:79;;25329:55:83;;;:::i;:::-;2462:19692:79;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;25433:104:83;;2462:19692:79;;25433:104:83;2462:19692:79;;;;;-1:-1:-1;;;;;;;;;;;25629:38:83;2462:19692:79;;25629:38:83;25758:25;;;-1:-1:-1;;;;;2462:19692:79;;;10588:14:83;2462:19692:79;;;;;;;25758:25:83;25754:563;;23546:2777;;;;;;;:::o;25754:563::-;2462:19692:79;;-1:-1:-1;;;25817:234:83;;;;;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;24435:17:83;;2462:19692:79;;;;;;-1:-1:-1;;25817:234:83;;;;;;;23894:17;25817:234;;;25754:563;-1:-1:-1;;;;;;;2462:19692:79;-1:-1:-1;;;26144:66:83;26140:167;;25754:563;;;;;;;25817:234;;;;24435:17;25817:234;24435:17;25817:234;;;;;;;:::i;:::-;;;;24819:87;24859:36;24544:4;24859:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;24859:18:83;:29;2462:19692:79;;-1:-1:-1;;;;2462:19692:79;;;;;;24859:36:83;24819:87;;24047:124;-1:-1:-1;;;23894:17:83;24106:54;2462:19692:79;;;;;-1:-1:-1;15189:27:8;23872:121:83;-1:-1:-1;;;23894:17:83;23934:48;2462:19692:79;;;;;-1:-1:-1;15189:27:8;21214:272:83;;-1:-1:-1;;;;;2462:19692:79;21341:10:83;;;:23;:87;;;;;21214:272;21341:138;;;;;21334:145;21214:272;:::o;21341:138::-;:10;;-1:-1:-1;;;;;21444:21:83;21341:10;21444:21;;:::i;:::-;2462:19692:79;21444:35:83;21214:272;:::o;21341:87::-;2462:19692:79;;;-1:-1:-1;2462:19692:79;4039:18:8;2462:19692:79;;;4039:35:8;21341:10:83;2462:19692:79;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;4039:35:8;2462:19692:79;;21341:87:83;;;;11462:227:8;2462:19692:79;11553:1:8;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;11553:1:8;2462:19692:79;;;27683:18:83;;:38;;;11462:227:8;27683:76:83;;;11462:227:8;27679:164:83;;-1:-1:-1;;;;;;;;;;;2462:19692:79;;;;;;27934:38:83;-1:-1:-1;;;;;27990:33:83;11553:1:8;27990:33:83;;;:::i;:::-;2462:19692:79;11591:27:8;11587:96;;11462:227;:::o;27679:164:83:-;-1:-1:-1;;;11553:1:8;27782:50:83;2462:19692:79;;;-1:-1:-1;15189:27:8;27683:76:83;27726:18;2462:19692:79;27726:33:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;27725:34:83;27683:76;;:38;;11553:1:8;27683:38:83;;22535:408;2462:19692:79;;;22654:8:83;2462:19692:79;;;22654:26:83;2462:19692:79;;;22654:26:83;2462:19692:79;:::i;:::-;;;;;22654:8:83;2462:19692:79;;;22695:29:83;2462:19692:79;;;22695:29:83;2462:19692:79;;;;22691:194:83;2462:19692:79;;;-1:-1:-1;2462:19692:79;22747:17:83;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;:::o;22691:194:83:-;22785:18;:30;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;22785:30:83;22781:104;;22691:194;22902:34;22691:194;22902:34;:::i;22781:104::-;22838:36;2462:19692:79;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;22858:16:83;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;26428:348:83;2462:19692:79;-1:-1:-1;2462:19692:79;26533:8:83;2462:19692:79;;;;-1:-1:-1;2462:19692:79;;;;;26532:32:83;26528:124;;-1:-1:-1;2462:19692:79;;;26533:8:83;2462:19692:79;;;;;;;-1:-1:-1;;;;2462:19692:79;;;26428:348:83:o;26528:124::-;24106:54;;;-1:-1:-1;26587:54:83;;2462:19692:79;;-1:-1:-1;26587:54:83;2462:19692:79;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:6:83;2462:19692:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;20484:1668::-;;;2462:19692;20929:18;2462:19692;;;-1:-1:-1;;;;;2462:19692:79;;;;20885:17;;;;20790:350;2462:19692;20929:18;;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;;;21037:13;:17;:13;;;;:17;2462:19692;21075:12;;;;2462:19692;;;;;;;;;;;20790:350;;21003:9;20790:350;;;;;:::i;:::-;;:7;;:350;;;;;;;-1:-1:-1;20790:350:79;;;20484:1668;2462:19692;;;21207:12;2462:19692;;;;;;-1:-1:-1;21528:16:79;;;;;;21755:176;;21988:157;21755:176;;;;;;:::i;:::-;21988:157;20929:18;2462:19692;21988:157;;;;;:::i;21546:3::-;21565:37;:19;2462:19692;21565:19;;;;;2462:19692;;5909:9;2462:19692;;;;;;;21565:19;21590:11;;;;:::i;:::-;;21565:37;;:::i;:::-;2462:19692;21513:13;;;;;;;;20790:350;;;;20929:18;20790:350;20929:18;20790:350;;;;;;;:::i;:::-;;;;2462:19692;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23048:171:83:-;23146:66;23048:171;23146:27;;;:::i;:::-;2462:19692:79;-1:-1:-1;2462:19692:79;23176:8:83;2462:19692:79;;23176:26:83;2462:19692:79;-1:-1:-1;2462:19692:79;23176:26:83;2462:19692:79;;;23146:66:83;;:::i;12013:460:8:-;;;;;-1:-1:-1;;;;;2462:19692:79;;12098:16:8;12094:87;;12214:32;;;;:::i;:::-;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;12260:27:8;;;16309:31;;;;12112:1;12310:31;;2462:19692:79;;12112:1:8;12310:31;12256:211;-1:-1:-1;;;;;2462:19692:79;;;;;;12362:21:8;12358:109;;12256:211;;;12013:460::o;2462:19692:79:-;;-1:-1:-1;;;;;2462:19692:79;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;:::o;28135:1205:83:-;;;;28267:84;28306:45;:18;2462:19692:79;28306:26:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;28306:45:83;:::i;:::-;:26;28267:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;28267:18:83;:26;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;28267:84:83;2462:19692:79;28306:26:83;28440:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;-1:-1:-1;;;;;28670:57:83;28691:36;2462:19692:79;28670:17:83;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;28711:16:83;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;28670:57:83;2462:19692:79;;28670:57:83;;28666:339;;28135:1205;29261:72;-1:-1:-1;;;;;2462:19692:79;29081:24:83;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;;29169:45:83;-1:-1:-1;;;;;2462:19692:79;;29169:45:83;;;:::i;:::-;28711:16;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;29261:72:83;28135:1205::o;28666:339::-;28795:36;28827:4;28795:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;28795:36:83;28955:39;:18;;2462:19692:79;;3074:8:83;2462:19692:79;;;;;;;28955:39:83;28666:339;;2462:19692:79;;;;;;;;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;2462:19692:79;;;;;;-1:-1:-1;;;2462:19692:79;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;-1:-1:-1;;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2462:19692:79;;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;-1:-1:-1;;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2462:19692:79;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2462:19692:79;;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2462:19692:79;;;;;;-1:-1:-1;;;2462:19692:79;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;;-1:-1:-1;2462:19692:79;;;;;;;;;;;;;;14715:1912;;;2462:19692;;:::i;:::-;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;15114:17;;;;;;2462:19692;;;;;;;;;15160:21;;;;2462:19692;;;15209:17;;;;2462:19692;;;;;;;;;;15279:12;;;;2462:19692;;;;;-1:-1:-1;;;;;2462:19692:79;;;;15380:19;;;2462:19692;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;15160:21;15460:79;;2462:19692;;;15460:79;;;2462:19692;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;;15160:21;15040:510;;2462:19692;;;15460:79;15040:510;;2462:19692;;;15279:12;15040:510;;2462:19692;;15209:17;15040:510;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15380:19;15040:510;;2462:19692;;15114:17;15040:510;;2462:19692;15346:4;15040:510;;;2462:19692;;;15040:510;;;2462:19692;15040:510;18896:13;15040:510;;;;:::i;:::-;;;;2462:19692;15019:18;;2462:19692;;3074:8:83;2462:19692:79;;;;;;;15019:18;2462:19692;;;;:::i;:::-;15160:21;15623:16;;2462:19692;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;15650:8;;;;:::i;:::-;15346:4;2462:19692;15744:27;2462:19692;;;-1:-1:-1;;;;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;15907:4;15883:10;15845:100;;;:::i;:::-;15160:21;16017:23;;2462:19692;-1:-1:-1;;;;;2462:19692:79;;16013:168;;14715:1912;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;16516:17;;16554:12;15040:510;16554:12;;;16588:13;15040:510;16588:13;;:21;;-1:-1:-1;;;;;2462:19692:79;;;;;16588:21;2462:19692;;;:::i;:::-;15883:10;2462:19692;;15883:10;-1:-1:-1;;;;;2462:19692:79;15160:21;16198:422;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15460:79;16198:422;;2462:19692;15279:12;16198:422;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15209:17;16198:422;;2462:19692;;;15380:19;16198:422;;2462:19692;;;15114:17;16198:422;;2462:19692;15040:510;16198:422;;2462:19692;15040:510;16198:422;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15040:510;16198:422;;2462:19692;;:::o;16013:168::-;16060:110;2462:19692;;;;-1:-1:-1;;;;;2462:19692:79;;;;15040:510;16114:13;;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15883:10;;16060:110;;:::i;:::-;16013:168;;;14715:1912;;;2462:19692;;:::i;:::-;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;15114:17;;;;;;2462:19692;;;;;;;;;15160:21;;;;2462:19692;;;15209:17;;;;2462:19692;;;;;;;;;;15279:12;;;;2462:19692;;;;;-1:-1:-1;;;;;2462:19692:79;;;;15380:19;;;2462:19692;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;15160:21;15460:79;;2462:19692;;;15460:79;;;2462:19692;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;;15160:21;15040:510;;2462:19692;;;15460:79;15040:510;;2462:19692;;;15279:12;15040:510;;2462:19692;;15209:17;15040:510;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15380:19;15040:510;;2462:19692;;15114:17;15040:510;;2462:19692;15346:4;15040:510;;;2462:19692;;;15040:510;;;2462:19692;15040:510;2462:19692;15040:510;;;;:::i;14715:1912::-;;;2462:19692;;:::i;:::-;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;15114:17;;;;;;2462:19692;;;;;;;;;15160:21;;;;2462:19692;;;15209:17;;;;2462:19692;;;;;;;;;;15279:12;;;;2462:19692;;;;;-1:-1:-1;;;;;2462:19692:79;;;;15380:19;;;2462:19692;;;;;;;;;;;;;;;-1:-1:-1;;;;;2462:19692:79;;;;;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;15160:21;15460:79;;2462:19692;;;15460:79;;;2462:19692;;;:::i;:::-;-1:-1:-1;;;;;2462:19692:79;;;;;;;15160:21;15040:510;;2462:19692;;;15460:79;15040:510;;2462:19692;;;15279:12;15040:510;;2462:19692;;15209:17;15040:510;;2462:19692;-1:-1:-1;;;;;2462:19692:79;15380:19;15040:510;;2462:19692;;15114:17;15040:510;;2462:19692;15346:4;15040:510;;;2462:19692;;;15040:510;;;2462:19692;15040:510;21892:28;15040:510;;;;:::i;14720:662:8:-;15346:24;14720:662;2462:19692:79;;15346:15:8;2462:19692:79;;;;;;;15346:24:8;2462:19692:79;;-1:-1:-1;;;;;;2462:19692:79;;;14720:662:8:o;8838:795::-;2462:19692:79;-1:-1:-1;2462:19692:79;5799:7:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;;-1:-1:-1;;;;;2462:19692:79;;9031:86:8;;8838:795;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;9161:18:8;9157:256;;8838:795;9540:21;-1:-1:-1;;;;;2462:19692:79;;9427:16:8;;9423:107;;8838:795;9540:16;;2462:19692:79;;5799:7:8;2462:19692:79;;;;;;;9540:21:8;9577:27;-1:-1:-1;9577:27:8;;8838:795;:::o;9423:107::-;9487:13;;-1:-1:-1;;;;;2462:19692:79;;;9368:9:8;2462:19692:79;;;;;;;9487:13:8;9504:1;2462:19692:79;;;;;9423:107:8;;9157:256;9319:5;;;:::i;:::-;9368:15;;-1:-1:-1;;;;;2462:19692:79;;;9368:9:8;2462:19692:79;;;;;;;9368:15:8;2462:19692:79;;-1:-1:-1;;2462:19692:79;;;9157:256:8;;9031:86;7193:39;-1:-1:-1;;;;;2462:19692:79;;6514:21:8;;;:127;;;;-1:-1:-1;7193:39:8;;2462:19692:79;7193:39:8;7189:255;9031:86;7189:255;2462:19692:79;-1:-1:-1;;;;;2462:19692:79;;;;-1:-1:-1;;;;7298:31:8;2462:19692:79;;;-1:-1:-1;15189:27:8;7248:186;-1:-1:-1;;;;7375:44:8;-1:-1:-1;;;;;2462:19692:79;;;7375:44:8;2462:19692:79;;;;-1:-1:-1;15189:27:8;6514:127;-1:-1:-1;;;;;2462:19692:79;;6552:16:8;;;;-1:-1:-1;6552:52:8;;;;6514:127;6552:88;;;;;6514:127;7193:39;;2462:19692:79;6552:88:8;2462:19692:79;;;-1:-1:-1;2462:19692:79;6034:15:8;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;-1:-1:-1;2462:19692:79;;;6608:32:8;7193:39;;2462:19692:79;6552:52:8;2462:19692:79;;;-1:-1:-1;2462:19692:79;4039:18:8;2462:19692:79;;;4039:35:8;2462:19692:79;;-1:-1:-1;2462:19692:79;;-1:-1:-1;;;;;2462:19692:79;;;;;;;;;;4039:35:8;2462:19692:79;;6552:52:8;;;;1303:160:7;1412:43;1303:160;-1:-1:-1;;;;;2462:19692:79;;;;;;1412:43:7;;;;2462:19692:79;1412:43:7;;;2462:19692:79;;;;;1412:43:7;;;;;;;:::i;:::-;;:::i;9955:327:8:-;-1:-1:-1;;;;;2462:19692:79;;10022:16:8;10018:87;;-1:-1:-1;;;;;10138:32:8;;;;:::i;:::-;2462:19692:79;10180:96:8;;9955:327::o;10180:96::-;10234:31;;;10036:1;10234:31;10036:1;10234:31;2462:19692:79;;10036:1:8;10234:31;1702:188:7;;;;-1:-1:-1;;;;;1829:53:7;1702:188;2462:19692:79;;;;;;;1829:53:7;;;;2462:19692:79;1829:53:7;;;2462:19692:79;;;;;;;;;;;1829:53:7;;;;;;:::i;4059:629::-;2847:1:12;4059:629:7;-1:-1:-1;;;;;3510:55:12;4059:629:7;2462:19692:79;3462:31:12;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;2462:19692:79;;4551:22:7;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;-1:-1:-1;;;;;4631:40:7;;;;2847:1:12;4631:40:7;2462:19692:79;;;;2847:1:12;4631:40:7;4551:57;4578:30;;;3462:31:12;4578:30:7;;;;;;;;:::i;:::-;4577:31;4551:57;;;;4625:582:12;;4797:8;;-1:-1:-1;2462:19692:79;;5874:21:12;:17;;6046:142;;;;;;5870:383;6225:17;;;5894:1;6225:17;;5894:1;6225:17;4793:408;2462:19692:79;;5045:22:12;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;-1:-1:-1;;;;;5121:24:12;;;;5066:1;5121:24;2462:19692:79;5121:24:12;2462:19692:79;;5066:1:12;5121:24;5045:49;5071:18;;;:23;5045:49;",
    "linkReferences": {
      "src/libraries/Helpers.sol": {
        "Helpers": [
          { "start": 2571, "length": 20 },
          { "start": 11163, "length": 20 },
          { "start": 16304, "length": 20 },
          { "start": 17373, "length": 20 },
          { "start": 20874, "length": 20 }
        ]
      },
      "src/libraries/VestingMath.sol": {
        "VestingMath": [{ "start": 18334, "length": 20 }, { "start": 18615, "length": 20 }]
      }
    },
    "immutableReferences": {
      "57290": [{ "start": 6092, "length": 32 }, { "start": 17328, "length": 32 }, { "start": 20829, "length": 32 }],
      "58521": [{ "start": 15639, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "MAX_BROKER_FEE()": "027b6744",
    "MAX_COUNT()": "77163c1d",
    "admin()": "f851a440",
    "allowToHook(address)": "406887cb",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batch(bytes[])": "1e897afb",
    "burn(uint256)": "42966c68",
    "cancel(uint256)": "40e58ee5",
    "cancelMultiple(uint256[])": "8659c270",
    "collectFees()": "c8796572",
    "createWithDurationsLD((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint64,uint40)[])": "0aef4433",
    "createWithDurationsLL((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint128),(uint40,uint40))": "00dba286",
    "createWithDurationsLT((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint40)[])": "deecd64f",
    "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint64,uint40)[])": "22bc0a80",
    "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint128),uint40)": "7a695841",
    "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint40)[])": "7ee21391",
    "getApproved(uint256)": "081812fc",
    "getCliffTime(uint256)": "780a82c8",
    "getDepositedAmount(uint256)": "a80fc071",
    "getEndTime(uint256)": "9067b677",
    "getLockupModel(uint256)": "e6c417eb",
    "getRecipient(uint256)": "6d0cee75",
    "getRefundedAmount(uint256)": "d4dbd20b",
    "getSegments(uint256)": "b637b865",
    "getSender(uint256)": "b971302a",
    "getStartTime(uint256)": "bc2be1be",
    "getTranches(uint256)": "7f5799f9",
    "getUnderlyingToken(uint256)": "a4775772",
    "getUnlockAmounts(uint256)": "df2a848c",
    "getWithdrawnAmount(uint256)": "d511609f",
    "isAllowedToHook(address)": "303acc85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isCancelable(uint256)": "4857501f",
    "isCold(uint256)": "8f69b993",
    "isDepleted(uint256)": "425d30dd",
    "isStream(uint256)": "b8a3be66",
    "isTransferable(uint256)": "b2564569",
    "isWarm(uint256)": "1c1cdd4c",
    "name()": "06fdde03",
    "nextStreamId()": "1e99d569",
    "nftDescriptor()": "44267570",
    "ownerOf(uint256)": "6352211e",
    "refundableAmountOf(uint256)": "1400ecec",
    "renounce(uint256)": "7de6b1db",
    "renounceMultiple(uint256[])": "727b3b0a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setNFTDescriptor(address)": "7cad6cd1",
    "statusOf(uint256)": "ad35efd4",
    "streamedAmountOf(uint256)": "4869e12d",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferAdmin(address)": "75829def",
    "transferFrom(address,address,uint256)": "23b872dd",
    "wasCanceled(uint256)": "f590c176",
    "withdraw(uint256,address,uint128)": "fdd46d60",
    "withdrawMax(uint256,address)": "ea5ead19",
    "withdrawMaxAndTransfer(uint256,address)": "c156a11d",
    "withdrawMultiple(uint256[],uint128[])": "4cc55e11",
    "withdrawableAmountOf(uint256)": "d975dfed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"initialNFTDescriptor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierLockupBase_AllowToHookUnsupportedInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierLockupBase_AllowToHookZeroCodeSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_FeeTransferFail\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierLockupBase_InvalidHookSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_NotTransferable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_Null\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"name\":\"SablierLockupBase_Overdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_StreamCanceled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_StreamDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_StreamNotCancelable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_StreamNotDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_StreamSettled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SablierLockupBase_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_WithdrawAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamIdsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountsCount\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_WithdrawArrayCountsNotEqual\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierLockupBase_WithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SablierLockupBase_WithdrawalAddressNotRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum Lockup.Model\",\"name\":\"actualLockupModel\",\"type\":\"uint8\"},{\"internalType\":\"enum Lockup.Model\",\"name\":\"expectedLockupModel\",\"type\":\"uint8\"}],\"name\":\"SablierLockup_NotExpectedModel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"AllowToHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"senderAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"recipientAmount\",\"type\":\"uint128\"}],\"name\":\"CancelLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"CollectFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"deposit\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"brokerFee\",\"type\":\"uint128\"}],\"internalType\":\"struct Lockup.CreateAmounts\",\"name\":\"amounts\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"name\":\"CreateLockupDynamicStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"deposit\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"brokerFee\",\"type\":\"uint128\"}],\"internalType\":\"struct Lockup.CreateAmounts\",\"name\":\"amounts\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"}],\"name\":\"CreateLockupLinearStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"deposit\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"brokerFee\",\"type\":\"uint128\"}],\"internalType\":\"struct Lockup.CreateAmounts\",\"name\":\"amounts\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateEventCommon\",\"name\":\"commonParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"name\":\"CreateLockupTranchedStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"InvalidWithdrawalInWithdrawMultiple\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"RenounceLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"oldNFTDescriptor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"SetNFTDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"WithdrawFromLockupStream\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BROKER_FEE\",\"outputs\":[{\"internalType\":\"UD60x18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"allowToHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultiple\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDuration[]\",\"name\":\"segmentsWithDuration\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"}],\"name\":\"createWithDurationsLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.TrancheWithDuration[]\",\"name\":\"tranchesWithDuration\",\"type\":\"tuple[]\"}],\"name\":\"createWithDurationsLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"},{\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"}],\"name\":\"createWithTimestampsLL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct Lockup.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"shape\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Lockup.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"name\":\"createWithTimestampsLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getCliffTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"cliffTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getDepositedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"depositedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getEndTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"endTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getLockupModel\",\"outputs\":[{\"internalType\":\"enum Lockup.Model\",\"name\":\"lockupModel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRefundedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSegments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTranches\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getUnlockAmounts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cliff\",\"type\":\"uint128\"}],\"internalType\":\"struct LockupLinear.UnlockAmounts\",\"name\":\"unlockAmounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawnAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isAllowedToHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCancelable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isDepleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isWarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDescriptor\",\"outputs\":[{\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"renounce\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"name\":\"renounceMultiple\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILockupNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"setNFTDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum Lockup.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"streamedAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"streamedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"wasCanceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"withdrawMaxAndTransfer\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"withdrawMultiple\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"withdrawableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"params\":{\"admin\":\"The address of the current contract admin.\",\"recipient\":\"The address of the recipient contract put on the allowlist.\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"params\":{\"recipient\":\"The address of the stream's recipient.\",\"recipientAmount\":\"The amount of tokens left for the stream's recipient to withdraw, denoted in units of the token's decimals.\",\"sender\":\"The address of the stream's sender.\",\"senderAmount\":\"The amount of tokens refunded to the stream's sender, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream.\",\"token\":\"The contract address of the ERC-20 token that has been distributed.\"}},\"CollectFees(address,uint256)\":{\"params\":{\"admin\":\"The address of the current contract admin, which has received the fees.\",\"feeAmount\":\"The amount of collected fees.\"}},\"CreateLockupDynamicStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),(uint128,uint64,uint40)[])\":{\"params\":{\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"segments\":\"The segments the protocol uses to compose the dynamic distribution function.\",\"streamId\":\"The ID of the newly created stream.\"}},\"CreateLockupLinearStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),uint40,(uint128,uint128))\":{\"params\":{\"cliffTime\":\"The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.\",\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"streamId\":\"The ID of the newly created stream.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"}},\"CreateLockupTranchedStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),(uint128,uint40)[])\":{\"params\":{\"commonParams\":\"Common parameters emitted in Create events across all Lockup models.\",\"streamId\":\"The ID of the newly created stream.\",\"tranches\":\"The tranches the protocol uses to compose the tranched distribution function.\"}},\"InvalidWithdrawalInWithdrawMultiple(uint256,bytes)\":{\"params\":{\"revertData\":\"The error data returned by the reverted withdraw.\",\"streamId\":\"The stream ID that reverted during withdraw.\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RenounceLockupStream(uint256)\":{\"params\":{\"streamId\":\"The ID of the stream.\"}},\"SetNFTDescriptor(address,address,address)\":{\"params\":{\"admin\":\"The address of the current contract admin.\",\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\",\"oldNFTDescriptor\":\"The address of the old NFT descriptor contract.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream.\",\"to\":\"The address that has received the withdrawn tokens.\",\"token\":\"The contract address of the ERC-20 token that has been withdrawn.\"}}},\"kind\":\"dev\",\"methods\":{\"allowToHook(address)\":{\"details\":\"Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the contract admin. - `recipient` must have a non-zero code size. - `recipient` must implement {ISablierLockupRecipient}.\",\"params\":{\"recipient\":\"The address of the contract to allow for hooks.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batch(bytes[])\":{\"details\":\"Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.\",\"params\":{\"calls\":\"An array of inputs for each call.\"},\"returns\":{\"results\":\"An array of results from each call. Empty when the calls do not return anything.\"}},\"burn(uint256)\":{\"details\":\"Emits a {Transfer} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.\",\"params\":{\"streamId\":\"The ID of the stream NFT to burn.\"}},\"cancel(uint256)\":{\"details\":\"Emits a {Transfer}, {CancelLockupStream} and {MetadataUpdate} event. Notes: - If there any tokens left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - If the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.\",\"params\":{\"streamId\":\"The ID of the stream to cancel.\"}},\"cancelMultiple(uint256[])\":{\"details\":\"Emits multiple {Transfer}, {CancelLockupStream} and {MetadataUpdate} events. Notes: - Refer to the notes in {cancel}. Requirements: - All requirements from {cancel} must be met for each stream.\",\"params\":{\"streamIds\":\"The IDs of the streams to cancel.\"}},\"collectFees()\":{\"details\":\"Emits a {CollectFees} event. Notes: - If the admin is a contract, it must be able to receive native token payments, e.g., ETH for Ethereum Mainnet.\"},\"constructor\":{\"params\":{\"initialAdmin\":\"The address of the initial contract admin.\",\"initialNFTDescriptor\":\"The address of the NFT descriptor contract.\",\"maxCount\":\"The maximum number of segments and tranched allowed in Lockup Dynamic and Lockup Tranched models, respectively.\"}},\"createWithDurationsLD((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint64,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLD} must be met for the calculated parameters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"segmentsWithDuration\":\"Segments with durations used to compose the dynamic distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithDurationsLL((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint128),(uint40,uint40))\":{\"details\":\"Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLL} must be met for the calculated parameters.\",\"params\":{\"durations\":\"Struct encapsulating (i) cliff period duration and (ii) total stream duration, both in seconds.\",\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithDurationsLT((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLT} must be met for the calculated parameters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"tranchesWithDuration\":\"Tranches with durations used to compose the tranched distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint64,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Notes: - As long as the segment timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than the first segment's timestamp. - `segments` must have at least one segment, but not more than `MAX_COUNT`. - The segment timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last segment's timestamp. - The sum of the segment amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"segments\":\"Segments used to compose the dynamic distribution function.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint128),uint40)\":{\"details\":\"Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Notes: - A cliff time of zero means there is no cliff. - As long as the times are ordered, it is not an error for the start or the cliff time to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than `params.timestamps.end`. - If set, `cliffTime` must be greater than `params.timestamps.start` and less than `params.timestamps.end`. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - The sum of `params.unlockAmounts.start` and `params.unlockAmounts.cliff` must be less than or equal to deposit amount. - If `params.timestamps.cliff` not set, the `params.unlockAmounts.cliff` must be zero. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"cliffTime\":\"The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.\",\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"unlockAmounts\":\"Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint40)[])\":{\"details\":\"Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than the first tranche's timestamp. - `tranches` must have at least one tranche, but not more than `MAX_COUNT`. - The tranche timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last tranche's timestamp. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\",\"tranches\":\"Tranches used to compose the tranched distribution function.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCliffTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream or a non Lockup Linear stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getDepositedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getEndTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getLockupModel(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRecipient(uint256)\":{\"details\":\"Reverts if the NFT has been burned.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRefundedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSegments(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream or a non Lockup Dynamic stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"segments\":\"See the documentation in {DataTypes}.\"}},\"getSender(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getStartTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getTranches(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream or a non Lockup Tranched stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"tranches\":\"See the documentation in {DataTypes}.\"}},\"getUnderlyingToken(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getUnlockAmounts(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream or a non Lockup Linear stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"unlockAmounts\":\"See the documentation in {DataTypes}.\"}},\"getWithdrawnAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isAllowedToHook(address)\":{\"details\":\"See {ISablierLockupRecipient} for more information.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isCancelable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isCold(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isDepleted(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isStream(uint256)\":{\"details\":\"Does not revert if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isTransferable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isWarm(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"refundableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"renounce(uint256)\":{\"details\":\"Emits a {RenounceLockupStream} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.\",\"params\":{\"streamId\":\"The ID of the stream to renounce.\"}},\"renounceMultiple(uint256[])\":{\"details\":\"Emits multiple {RenounceLockupStream} events. Notes: - Refer to the notes in {renounce}. Requirements: - All requirements from {renounce} must be met for each stream.\",\"params\":{\"streamIds\":\"An array of stream IDs to renounce.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setNFTDescriptor(address)\":{\"details\":\"Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\"}},\"statusOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"streamedAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"wasCanceled(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"withdraw(uint256,address,uint128)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - If `msg.sender` is not the recipient and the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party.\",\"params\":{\"amount\":\"The amount to withdraw, denoted in units of the token's decimals.\",\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"}},\"withdrawMax(uint256,address)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.\",\"params\":{\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the token's decimals.\"}},\"withdrawMaxAndTransfer(uint256,address)\":{\"details\":\"Emits a {WithdrawFromLockupStream}, {Transfer} and {MetadataUpdate} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be either the NFT owner or an approved third party. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.\",\"params\":{\"newRecipient\":\"The address of the new owner of the stream NFT.\",\"streamId\":\"The ID of the stream NFT to transfer.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the token's decimals.\"}},\"withdrawMultiple(uint256[],uint128[])\":{\"details\":\"Emits multiple {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} events. For each stream that reverted the withdrawal, it emits an {InvalidWithdrawalInWithdrawMultiple} event. Notes: - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`. - Each stream ID in the array must not reference a null or depleted stream. - Each amount in the array must be greater than zero and must not exceed the withdrawable amount.\",\"params\":{\"amounts\":\"The amounts to withdraw, denoted in units of the token's decimals.\",\"streamIds\":\"The IDs of the streams to withdraw from.\"}},\"withdrawableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}}},\"stateVariables\":{\"MAX_COUNT\":{\"details\":\"This is initialized at construction time and cannot be changed later.\"},\"_cliffs\":{\"details\":\"Cliff timestamp mapped by stream IDs. This is used in Lockup Linear models.\"},\"_segments\":{\"details\":\"Stream segments mapped by stream IDs. This is used in Lockup Dynamic models.\"},\"_tranches\":{\"details\":\"Stream tranches mapped by stream IDs. This is used in Lockup Tranched models.\"},\"_unlockAmounts\":{\"details\":\"Unlock amounts mapped by stream IDs. This is used in Lockup Linear models.\"}},\"title\":\"SablierLockup\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotAdmin(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the admin.\"}],\"DelegateCall()\":[{\"notice\":\"Thrown when trying to delegate call to a function that disallows delegate calls.\"}],\"SablierLockupBase_AllowToHookUnsupportedInterface(address)\":[{\"notice\":\"Thrown when trying to allow to hook a contract that doesn't implement the interface correctly.\"}],\"SablierLockupBase_AllowToHookZeroCodeSize(address)\":[{\"notice\":\"Thrown when trying to allow to hook an address with no code.\"}],\"SablierLockupBase_FeeTransferFail(address,uint256)\":[{\"notice\":\"Thrown when the fee transfer fails.\"}],\"SablierLockupBase_InvalidHookSelector(address)\":[{\"notice\":\"Thrown when the hook does not return the correct selector.\"}],\"SablierLockupBase_NotTransferable(uint256)\":[{\"notice\":\"Thrown when trying to transfer Stream NFT when transferability is disabled.\"}],\"SablierLockupBase_Null(uint256)\":[{\"notice\":\"Thrown when the ID references a null stream.\"}],\"SablierLockupBase_Overdraw(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to withdraw an amount greater than the withdrawable amount.\"}],\"SablierLockupBase_StreamCanceled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a canceled stream.\"}],\"SablierLockupBase_StreamDepleted(uint256)\":[{\"notice\":\"Thrown when trying to cancel, renounce, or withdraw from a depleted stream.\"}],\"SablierLockupBase_StreamNotCancelable(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a stream that is not cancelable.\"}],\"SablierLockupBase_StreamNotDepleted(uint256)\":[{\"notice\":\"Thrown when trying to burn a stream that is not depleted.\"}],\"SablierLockupBase_StreamSettled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a settled stream.\"}],\"SablierLockupBase_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"SablierLockupBase_WithdrawAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to withdraw zero tokens from a stream.\"}],\"SablierLockupBase_WithdrawArrayCountsNotEqual(uint256,uint256)\":[{\"notice\":\"Thrown when trying to withdraw from multiple streams and the number of stream IDs does not match the number of withdraw amounts.\"}],\"SablierLockupBase_WithdrawToZeroAddress(uint256)\":[{\"notice\":\"Thrown when trying to withdraw to the zero address.\"}],\"SablierLockupBase_WithdrawalAddressNotRecipient(uint256,address,address)\":[{\"notice\":\"Thrown when trying to withdraw to an address other than the recipient's.\"}],\"SablierLockup_NotExpectedModel(uint8,uint8)\":[{\"notice\":\"Thrown when a function is called on a stream that does not use the expected Lockup model.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"notice\":\"Emitted when the admin allows a new recipient contract to hook to Sablier.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"notice\":\"Emitted when a stream is canceled.\"},\"CollectFees(address,uint256)\":{\"notice\":\"Emitted when the accrued fees are collected.\"},\"CreateLockupDynamicStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),(uint128,uint64,uint40)[])\":{\"notice\":\"Emitted when a stream is created using Lockup dynamic model.\"},\"CreateLockupLinearStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),uint40,(uint128,uint128))\":{\"notice\":\"Emitted when a stream is created using Lockup linear model.\"},\"CreateLockupTranchedStream(uint256,(address,address,address,(uint128,uint128),address,bool,bool,(uint40,uint40),string,address),(uint128,uint40)[])\":{\"notice\":\"Emitted when a stream is created using Lockup tranched model.\"},\"InvalidWithdrawalInWithdrawMultiple(uint256,bytes)\":{\"notice\":\"Emitted when withdrawing from multiple streams and one particular withdrawal reverts.\"},\"RenounceLockupStream(uint256)\":{\"notice\":\"Emitted when a sender gives up the right to cancel a stream.\"},\"SetNFTDescriptor(address,address,address)\":{\"notice\":\"Emitted when the admin sets a new NFT descriptor contract.\"},\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"notice\":\"Emitted when tokens are withdrawn from a stream.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BROKER_FEE()\":{\"notice\":\"Retrieves the maximum broker fee that can be charged by the broker, denoted as a fixed-point number where 1e18 is 100%.\"},\"MAX_COUNT()\":{\"notice\":\"The maximum number of segments and tranches allowed in Dynamic and Tranched streams respectively.\"},\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"allowToHook(address)\":{\"notice\":\"Allows a recipient contract to hook to Sablier when a stream is canceled or when tokens are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts.\"},\"batch(bytes[])\":{\"notice\":\"Allows batched calls to self, i.e., `this` contract.\"},\"burn(uint256)\":{\"notice\":\"Burns the NFT associated with the stream.\"},\"cancel(uint256)\":{\"notice\":\"Cancels the stream and refunds any remaining tokens to the sender.\"},\"cancelMultiple(uint256[])\":{\"notice\":\"Cancels multiple streams and refunds any remaining tokens to the sender.\"},\"collectFees()\":{\"notice\":\"Collects the accrued fees by transferring them to the contract admin.\"},\"createWithDurationsLD((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint64,uint40)[])\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The segment timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithDurationsLL((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint128),(uint40,uint40))\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and `durations.total`. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithDurationsLT((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint40)[])\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint64,uint40)[])\":{\"notice\":\"Creates a stream with the provided segment timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint128),uint40)\":{\"notice\":\"Creates a stream with the provided start time and end time. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint40)[])\":{\"notice\":\"Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"getCliffTime(uint256)\":{\"notice\":\"Retrieves the stream's cliff time, which is a Unix timestamp.  A value of zero means there is no cliff.\"},\"getDepositedAmount(uint256)\":{\"notice\":\"Retrieves the amount deposited in the stream, denoted in units of the token's decimals.\"},\"getEndTime(uint256)\":{\"notice\":\"Retrieves the stream's end time, which is a Unix timestamp.\"},\"getLockupModel(uint256)\":{\"notice\":\"Retrieves the distribution models used to create the stream.\"},\"getRecipient(uint256)\":{\"notice\":\"Retrieves the stream's recipient.\"},\"getRefundedAmount(uint256)\":{\"notice\":\"Retrieves the amount refunded to the sender after a cancellation, denoted in units of the token's decimals. This amount is always zero unless the stream was canceled.\"},\"getSegments(uint256)\":{\"notice\":\"Retrieves the segments used to compose the dynamic distribution function.\"},\"getSender(uint256)\":{\"notice\":\"Retrieves the stream's sender.\"},\"getStartTime(uint256)\":{\"notice\":\"Retrieves the stream's start time, which is a Unix timestamp.\"},\"getTranches(uint256)\":{\"notice\":\"Retrieves the tranches used to compose the tranched distribution function.\"},\"getUnderlyingToken(uint256)\":{\"notice\":\"Retrieves the address of the underlying ERC-20 token being distributed.\"},\"getUnlockAmounts(uint256)\":{\"notice\":\"Retrieves the unlock amounts used to compose the linear distribution function.\"},\"getWithdrawnAmount(uint256)\":{\"notice\":\"Retrieves the amount withdrawn from the stream, denoted in units of the token's decimals.\"},\"isAllowedToHook(address)\":{\"notice\":\"Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when tokens are withdrawn.\"},\"isCancelable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`.\"},\"isCold(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted.\"},\"isDepleted(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is depleted.\"},\"isStream(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream exists.\"},\"isTransferable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream NFT can be transferred.\"},\"isWarm(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming.\"},\"nextStreamId()\":{\"notice\":\"Counter for stream IDs, used in the create functions.\"},\"nftDescriptor()\":{\"notice\":\"Contract that generates the non-fungible token URI.\"},\"refundableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the token's decimals.\"},\"renounce(uint256)\":{\"notice\":\"Removes the right of the stream's sender to cancel the stream.\"},\"renounceMultiple(uint256[])\":{\"notice\":\"Renounces multiple streams.\"},\"setNFTDescriptor(address)\":{\"notice\":\"Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs.\"},\"statusOf(uint256)\":{\"notice\":\"Retrieves the stream's status.\"},\"streamedAmountOf(uint256)\":{\"notice\":\"Calculates the amount streamed to the recipient, denoted in units of the token's decimals.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"},\"wasCanceled(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream was canceled.\"},\"withdraw(uint256,address,uint128)\":{\"notice\":\"Withdraws the provided amount of tokens from the stream to the `to` address.\"},\"withdrawMax(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the provided address `to`.\"},\"withdrawMaxAndTransfer(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`.\"},\"withdrawMultiple(uint256[],uint128[])\":{\"notice\":\"Withdraws tokens from streams to the recipient of each stream.\"},\"withdrawableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the recipient can withdraw from the stream, denoted in units of the token's decimals.\"}},\"notice\":\"See the documentation in {ISablierLockup}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierLockup.sol\":\"SablierLockup\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":570},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05\",\"dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42\"]},\"node_modules/@prb/math/src/SD59x18.sol\":{\"keccak256\":\"0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be\",\"dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/casting/Uint128.sol\":{\"keccak256\":\"0x2f0583df2d60ba24e4b6f33da2f6cbff6e3c9bed4b8b5a61c3d119779c722b3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ce4388be9b62b22a2ec342a3188e9207ddc480bbcb7e923289f6d343ca6359\",\"dweb:/ipfs/QmYwCs6WupGi1Per9yjsk7Vca6yAAgdt6DABMVofskiHYx\"]},\"node_modules/@prb/math/src/casting/Uint40.sol\":{\"keccak256\":\"0x650203bec71bcb70948163d173cbff19993ac1556b547a90b2dc293a87d2ccb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://670b7d2cc10b06962370bccc8cf57e9b16b9db078023d0d45c0bce3281d7a579\",\"dweb:/ipfs/QmZMbcuHJMnz3xaiCnHE2r1Xrg4sSGdYovxecdSMbakb3g\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11\",\"dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab\",\"dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca\",\"dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353\",\"dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6\"]},\"node_modules/@prb/math/src/sd21x18/Casting.sol\":{\"keccak256\":\"0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2\",\"dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd\"]},\"node_modules/@prb/math/src/sd21x18/Constants.sol\":{\"keccak256\":\"0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396\",\"dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3\"]},\"node_modules/@prb/math/src/sd21x18/Errors.sol\":{\"keccak256\":\"0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee\",\"dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML\"]},\"node_modules/@prb/math/src/sd21x18/ValueType.sol\":{\"keccak256\":\"0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880\",\"dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d\",\"dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Conversions.sol\":{\"keccak256\":\"0x1c2a91d7bec997ffa764046e504705be4382001835eea47f53909d5baedad481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b11b48183878f5d909a45c6aa462f71a49b8fe0c89c51086f96a0e01b99fe2d5\",\"dweb:/ipfs/QmWj4UF6prH5RuGuxjrpuWBaRXkSt39zkUbiJkzngKigx6\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf\",\"dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462\",\"dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919\",\"dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb\"]},\"node_modules/@prb/math/src/ud21x18/Casting.sol\":{\"keccak256\":\"0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09\",\"dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL\"]},\"node_modules/@prb/math/src/ud21x18/Constants.sol\":{\"keccak256\":\"0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60\",\"dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV\"]},\"node_modules/@prb/math/src/ud21x18/Errors.sol\":{\"keccak256\":\"0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80\",\"dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq\"]},\"node_modules/@prb/math/src/ud21x18/ValueType.sol\":{\"keccak256\":\"0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af\",\"dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae\",\"dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437\",\"dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41\",\"dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780\",\"dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932\",\"dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8\",\"dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6\",\"dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47\",\"dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n\"]},\"src/SablierLockup.sol\":{\"keccak256\":\"0x69080ed2636eff9f3fcc3c18f79a2405d45339cbda750e3f53054715b0d40691\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6dfa1582ccf63c5c5b927a266a92cd026a506fc1bb2d813f00ae9280b90891b3\",\"dweb:/ipfs/Qmb72RTvSHczucTAhVMUYkV6xtb1WGzmmDA9JfvWpY8uej\"]},\"src/abstracts/Adminable.sol\":{\"keccak256\":\"0x54244af6b3de28a668c5c65083215230c9e17e858ebf8364f9fde13241c4fa53\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c50c49b6ec9d65ec93cd599e3d30bb80398b604eede98d29563ac22521847bdd\",\"dweb:/ipfs/QmdDJvY7SL4XTwggV3L2hmPUmZp37TqQJtEZ4rwpmPgA6C\"]},\"src/abstracts/Batch.sol\":{\"keccak256\":\"0x649e76284c399a008b84c14ec1dab7bcf570fefe0c9be16705f3ade9994284ef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e97d0373d28f1f80f2f4d43b7d815427de81e0bf07bd527d749e6207020a5ad8\",\"dweb:/ipfs/QmWe9yCQujQL7DefhBcWhkmuJKPjqQFtqvQLwr2afNxVxa\"]},\"src/abstracts/NoDelegateCall.sol\":{\"keccak256\":\"0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0\",\"dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP\"]},\"src/abstracts/SablierLockupBase.sol\":{\"keccak256\":\"0x0b330990a056a1b66af0e1d7261611598da1208b756aa962e5ecf058cbe36136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6722bc613844bd3bfd06b38dd3bd4aea3d218406e6a7c77e039714401849759c\",\"dweb:/ipfs/QmTqzyMBimSKVBJzrEijKvtNzw4Uzc6DxTqQ39rTDMrn2s\"]},\"src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f\",\"dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z\"]},\"src/interfaces/IBatch.sol\":{\"keccak256\":\"0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758\",\"dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh\"]},\"src/interfaces/ILockupNFTDescriptor.sol\":{\"keccak256\":\"0x49c9d9f68d025c3e735de68ca53b7b3144bf29f9b5890706847da0f1667f111e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7588bdbb3057462744661468632847a469e13cb1da581a8b75a813cb6223c49e\",\"dweb:/ipfs/QmbynwaivForuftTtya4Lxwu78KA5LCgmVCHk3k4st9uC2\"]},\"src/interfaces/ISablierLockup.sol\":{\"keccak256\":\"0x625ba75d5b893749ceacf197c92b7ba684de7fb68bb9d0a21e75456a48785e3e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://300c011e17907d218eeb3a4c3d9559f86b12b44633dcbfe546439ea9d012705e\",\"dweb:/ipfs/QmT8WNAUhN5ftC68fHyUL1dhbgvUv9bC8raHLcAXWiLYyP\"]},\"src/interfaces/ISablierLockupBase.sol\":{\"keccak256\":\"0xb455bccf9814079427cdd5abc44fe0e1d754a011dcf03ec4a9d50b74be2b8a86\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d8f9b0ba7c8bab4a7168c6c5fb9535ca580807ae631e0680a7b450250c95d87\",\"dweb:/ipfs/QmcaDTt36Q7AC4iMpUikkZTYGxqRBNAcauewiocmHWqUad\"]},\"src/interfaces/ISablierLockupRecipient.sol\":{\"keccak256\":\"0x633d2b31e7ac8f85941e26f5655be717cd74c7b964b296eeac6b120d48625b85\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6ff6018fa59ba3528a4f8c87072bf208d83a9ad89e556a93975ed105c677ef7c\",\"dweb:/ipfs/QmZdJ1Jx6be7KevRjRBkALvhhtTa42MMdCbdR47WEU14wc\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x07331361c03f6204955c4723549055b8165f33c687b8e4b43339bd94b54536a4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://346c7ac9d1c9205d4218058133e09177740db5326b2b31ffb961ffaf5468e0eb\",\"dweb:/ipfs/QmNwRXn5qwnRRfYPRrBq9dS9NKxQ5zyiZorBYZAQXZGkHu\"]},\"src/libraries/Helpers.sol\":{\"keccak256\":\"0x64a62ce7d4eaa008571ecb70191b8655ec50d7bc69579144425d06fa0fe55df8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ec8352201185c4de5ae9b571f61651dbb4ffcfa7bfd4d4cbb74363ace4bc9033\",\"dweb:/ipfs/QmWsjjkJPnPxKYuKdg77LbJqyk7KToMJu1FaZyLBTaxXG2\"]},\"src/libraries/VestingMath.sol\":{\"keccak256\":\"0x1c2581d126ad538e56d5a50679bf6db798eedaaff11d864b47b3f28e4fee1bde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dba1dad683db379f21641a8ed258390219c96b749dd53f42e1dfd0263b14638d\",\"dweb:/ipfs/QmSTwuGpAJiDZvwmFG2Wnp79dL392Y3WrwuXyunxxdbnxG\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x54b0a47578fd242f218becd8d74c785eccf5ef45ea524465c625a81f64fb50ed\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://88193d0336532dfd3671e1259be5257dcf9f58662276e29083073071cd421d00\",\"dweb:/ipfs/QmWxBgMtnuGp9gKx8FAFBtc1rvbboyPRgW6n5hQGqVdhWf\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "initialAdmin", "type": "address" },
            { "internalType": "contract ILockupNFTDescriptor", "name": "initialNFTDescriptor", "type": "address" },
            { "internalType": "uint256", "name": "maxCount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "target", "type": "address" }],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "CallerNotAdmin"
        },
        { "inputs": [], "type": "error", "name": "DelegateCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierLockupBase_AllowToHookUnsupportedInterface"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierLockupBase_AllowToHookZeroCodeSize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address" },
            { "internalType": "uint256", "name": "feeAmount", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierLockupBase_FeeTransferFail"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierLockupBase_InvalidHookSelector"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_NotTransferable"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_Null"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierLockupBase_Overdraw"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_StreamCanceled"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_StreamDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_StreamNotCancelable"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_StreamNotDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_StreamSettled"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "SablierLockupBase_Unauthorized"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_WithdrawAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamIdsCount", "type": "uint256" },
            { "internalType": "uint256", "name": "amountsCount", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierLockupBase_WithdrawArrayCountsNotEqual"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierLockupBase_WithdrawToZeroAddress"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "type": "error",
          "name": "SablierLockupBase_WithdrawalAddressNotRecipient"
        },
        {
          "inputs": [
            { "internalType": "enum Lockup.Model", "name": "actualLockupModel", "type": "uint8" },
            { "internalType": "enum Lockup.Model", "name": "expectedLockupModel", "type": "uint8" }
          ],
          "type": "error",
          "name": "SablierLockup_NotExpectedModel"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "AllowToHook",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "approved", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_fromTokenId", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "_toTokenId", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "senderAmount", "type": "uint128", "indexed": false },
            { "internalType": "uint128", "name": "recipientAmount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "CancelLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "feeAmount", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "CollectFees",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                {
                  "internalType": "struct Lockup.CreateAmounts",
                  "name": "amounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "deposit", "type": "uint128" },
                    { "internalType": "uint128", "name": "brokerFee", "type": "uint128" }
                  ]
                },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                { "internalType": "address", "name": "broker", "type": "address" }
              ],
              "indexed": false
            },
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupDynamicStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                {
                  "internalType": "struct Lockup.CreateAmounts",
                  "name": "amounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "deposit", "type": "uint128" },
                    { "internalType": "uint128", "name": "brokerFee", "type": "uint128" }
                  ]
                },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                { "internalType": "address", "name": "broker", "type": "address" }
              ],
              "indexed": false
            },
            { "internalType": "uint40", "name": "cliffTime", "type": "uint40", "indexed": false },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupLinearStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Lockup.CreateEventCommon",
              "name": "commonParams",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "funder", "type": "address" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                {
                  "internalType": "struct Lockup.CreateAmounts",
                  "name": "amounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "deposit", "type": "uint128" },
                    { "internalType": "uint128", "name": "brokerFee", "type": "uint128" }
                  ]
                },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                { "internalType": "address", "name": "broker", "type": "address" }
              ],
              "indexed": false
            },
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateLockupTranchedStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "bytes", "name": "revertData", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "InvalidWithdrawalInWithdrawMultiple",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_tokenId", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true }],
          "type": "event",
          "name": "RenounceLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            {
              "internalType": "contract ILockupNFTDescriptor",
              "name": "oldNFTDescriptor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ILockupNFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetNFTDescriptor",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldAdmin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newAdmin", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "WithdrawFromLockupStream",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BROKER_FEE",
          "outputs": [{ "internalType": "UD60x18", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_COUNT",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowToHook"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "bytes[]", "name": "calls", "type": "bytes[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "batch",
          "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelMultiple"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "collectFees" },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupDynamic.SegmentWithDuration[]",
              "name": "segmentsWithDuration",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLD",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            },
            {
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                { "internalType": "uint40", "name": "total", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLL",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupTranched.TrancheWithDuration[]",
              "name": "tranchesWithDuration",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithDurationsLT",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLD",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            },
            { "internalType": "uint40", "name": "cliffTime", "type": "uint40" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLL",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Lockup.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Timestamps",
                  "name": "timestamps",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint40", "name": "start", "type": "uint40" },
                    { "internalType": "uint40", "name": "end", "type": "uint40" }
                  ]
                },
                { "internalType": "string", "name": "shape", "type": "string" },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            },
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createWithTimestampsLT",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getCliffTime",
          "outputs": [{ "internalType": "uint40", "name": "cliffTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositedAmount",
          "outputs": [{ "internalType": "uint128", "name": "depositedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getEndTime",
          "outputs": [{ "internalType": "uint40", "name": "endTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getLockupModel",
          "outputs": [{ "internalType": "enum Lockup.Model", "name": "lockupModel", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipient",
          "outputs": [{ "internalType": "address", "name": "recipient", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRefundedAmount",
          "outputs": [{ "internalType": "uint128", "name": "refundedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSegments",
          "outputs": [
            {
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "UD2x18", "name": "exponent", "type": "uint64" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSender",
          "outputs": [{ "internalType": "address", "name": "sender", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getStartTime",
          "outputs": [{ "internalType": "uint40", "name": "startTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTranches",
          "outputs": [
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnlockAmounts",
          "outputs": [
            {
              "internalType": "struct LockupLinear.UnlockAmounts",
              "name": "unlockAmounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "start", "type": "uint128" },
                { "internalType": "uint128", "name": "cliff", "type": "uint128" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawnAmount",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isAllowedToHook",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCancelable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCold",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isDepleted",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isStream",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransferable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isWarm",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextStreamId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDescriptor",
          "outputs": [{ "internalType": "contract ILockupNFTDescriptor", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "refundableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "refundableAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounce"
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounceMultiple"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            { "internalType": "contract ILockupNFTDescriptor", "name": "newNFTDescriptor", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFTDescriptor"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "statusOf",
          "outputs": [{ "internalType": "enum Lockup.Status", "name": "status", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "streamedAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "streamedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [{ "internalType": "string", "name": "uri", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "newAdmin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "wasCanceled",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMax",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "newRecipient", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMaxAndTransfer",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" },
            { "internalType": "uint128[]", "name": "amounts", "type": "uint128[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMultiple"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowToHook(address)": {
            "details": "Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the contract admin. - `recipient` must have a non-zero code size. - `recipient` must implement {ISablierLockupRecipient}.",
            "params": { "recipient": "The address of the contract to allow for hooks." }
          },
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "batch(bytes[])": {
            "details": "Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.",
            "params": { "calls": "An array of inputs for each call." },
            "returns": { "results": "An array of results from each call. Empty when the calls do not return anything." }
          },
          "burn(uint256)": {
            "details": "Emits a {Transfer} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.",
            "params": { "streamId": "The ID of the stream NFT to burn." }
          },
          "cancel(uint256)": {
            "details": "Emits a {Transfer}, {CancelLockupStream} and {MetadataUpdate} event. Notes: - If there any tokens left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - If the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.",
            "params": { "streamId": "The ID of the stream to cancel." }
          },
          "cancelMultiple(uint256[])": {
            "details": "Emits multiple {Transfer}, {CancelLockupStream} and {MetadataUpdate} events. Notes: - Refer to the notes in {cancel}. Requirements: - All requirements from {cancel} must be met for each stream.",
            "params": { "streamIds": "The IDs of the streams to cancel." }
          },
          "collectFees()": {
            "details": "Emits a {CollectFees} event. Notes: - If the admin is a contract, it must be able to receive native token payments, e.g., ETH for Ethereum Mainnet."
          },
          "constructor": {
            "params": {
              "initialAdmin": "The address of the initial contract admin.",
              "initialNFTDescriptor": "The address of the NFT descriptor contract.",
              "maxCount": "The maximum number of segments and tranched allowed in Lockup Dynamic and Lockup Tranched models, respectively."
            }
          },
          "createWithDurationsLD((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint64,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLD} must be met for the calculated parameters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "segmentsWithDuration": "Segments with durations used to compose the dynamic distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithDurationsLL((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint128),(uint40,uint40))": {
            "details": "Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLL} must be met for the calculated parameters.",
            "params": {
              "durations": "Struct encapsulating (i) cliff period duration and (ii) total stream duration, both in seconds.",
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "unlockAmounts": "Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithDurationsLT((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Requirements: - All requirements in {createWithTimestampsLT} must be met for the calculated parameters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "tranchesWithDuration": "Tranches with durations used to compose the tranched distribution function. Timestamps are calculated by starting from `block.timestamp` and adding each duration to the previous timestamp."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint64,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupDynamicStream} and {MetadataUpdate} event. Notes: - As long as the segment timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than the first segment's timestamp. - `segments` must have at least one segment, but not more than `MAX_COUNT`. - The segment timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last segment's timestamp. - The sum of the segment amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "segments": "Segments used to compose the dynamic distribution function."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint128),uint40)": {
            "details": "Emits a {Transfer}, {CreateLockupLinearStream} and {MetadataUpdate} event. Notes: - A cliff time of zero means there is no cliff. - As long as the times are ordered, it is not an error for the start or the cliff time to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than `params.timestamps.end`. - If set, `cliffTime` must be greater than `params.timestamps.start` and less than `params.timestamps.end`. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - The sum of `params.unlockAmounts.start` and `params.unlockAmounts.cliff` must be less than or equal to deposit amount. - If `params.timestamps.cliff` not set, the `params.unlockAmounts.cliff` must be zero. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "cliffTime": "The Unix timestamp for the cliff period's end. A value of zero means there is no cliff.",
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "unlockAmounts": "Struct encapsulating (i) the amount to unlock at the start time and (ii) the amount to unlock at the cliff time."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint40)[])": {
            "details": "Emits a {Transfer}, {CreateLockupTrancheStream} and {MetadataUpdate} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.timestamps.start` must be greater than zero and less than the first tranche's timestamp. - `tranches` must have at least one tranche, but not more than `MAX_COUNT`. - The tranche timestamps must be arranged in ascending order. - `params.timestamps.end` must be equal to the last tranche's timestamp. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `params.sender` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` tokens. - `params.shape.length` must not be greater than 32 characters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}.",
              "tranches": "Tranches used to compose the tranched distribution function."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getCliffTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream or a non Lockup Linear stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getDepositedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getEndTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getLockupModel(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRecipient(uint256)": {
            "details": "Reverts if the NFT has been burned.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRefundedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSegments(uint256)": {
            "details": "Reverts if `streamId` references a null stream or a non Lockup Dynamic stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "segments": "See the documentation in {DataTypes}." }
          },
          "getSender(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getStartTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getTranches(uint256)": {
            "details": "Reverts if `streamId` references a null stream or a non Lockup Tranched stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "tranches": "See the documentation in {DataTypes}." }
          },
          "getUnderlyingToken(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getUnlockAmounts(uint256)": {
            "details": "Reverts if `streamId` references a null stream or a non Lockup Linear stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "unlockAmounts": "See the documentation in {DataTypes}." }
          },
          "getWithdrawnAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isAllowedToHook(address)": { "details": "See {ISablierLockupRecipient} for more information." },
          "isApprovedForAll(address,address)": { "details": "See {IERC721-isApprovedForAll}." },
          "isCancelable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isCold(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isDepleted(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isStream(uint256)": {
            "details": "Does not revert if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isTransferable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isWarm(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "refundableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "renounce(uint256)": {
            "details": "Emits a {RenounceLockupStream} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.",
            "params": { "streamId": "The ID of the stream to renounce." }
          },
          "renounceMultiple(uint256[])": {
            "details": "Emits multiple {RenounceLockupStream} events. Notes: - Refer to the notes in {renounce}. Requirements: - All requirements from {renounce} must be met for each stream.",
            "params": { "streamIds": "An array of stream IDs to renounce." }
          },
          "safeTransferFrom(address,address,uint256)": { "details": "See {IERC721-safeTransferFrom}." },
          "safeTransferFrom(address,address,uint256,bytes)": { "details": "See {IERC721-safeTransferFrom}." },
          "setApprovalForAll(address,bool)": { "details": "See {IERC721-setApprovalForAll}." },
          "setNFTDescriptor(address)": {
            "details": "Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newNFTDescriptor": "The address of the new NFT descriptor contract." }
          },
          "statusOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "streamedAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "supportsInterface(bytes4)": { "details": "See {IERC165-supportsInterface}." },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newAdmin": "The address of the new admin." }
          },
          "transferFrom(address,address,uint256)": { "details": "See {IERC721-transferFrom}." },
          "wasCanceled(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "withdraw(uint256,address,uint128)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - If `msg.sender` is not the recipient and the address is on the allowlist, this function will invoke a hook on the recipient. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party.",
            "params": {
              "amount": "The amount to withdraw, denoted in units of the token's decimals.",
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            }
          },
          "withdrawMax(uint256,address)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.",
            "params": {
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the token's decimals." }
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "details": "Emits a {WithdrawFromLockupStream}, {Transfer} and {MetadataUpdate} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be either the NFT owner or an approved third party. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.",
            "params": {
              "newRecipient": "The address of the new owner of the stream NFT.",
              "streamId": "The ID of the stream NFT to transfer."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the token's decimals." }
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "details": "Emits multiple {Transfer}, {WithdrawFromLockupStream} and {MetadataUpdate} events. For each stream that reverted the withdrawal, it emits an {InvalidWithdrawalInWithdrawMultiple} event. Notes: - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`. - Each stream ID in the array must not reference a null or depleted stream. - Each amount in the array must be greater than zero and must not exceed the withdrawable amount.",
            "params": {
              "amounts": "The amounts to withdraw, denoted in units of the token's decimals.",
              "streamIds": "The IDs of the streams to withdraw from."
            }
          },
          "withdrawableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BROKER_FEE()": {
            "notice": "Retrieves the maximum broker fee that can be charged by the broker, denoted as a fixed-point number where 1e18 is 100%."
          },
          "MAX_COUNT()": {
            "notice": "The maximum number of segments and tranches allowed in Dynamic and Tranched streams respectively."
          },
          "admin()": { "notice": "The address of the admin account or contract." },
          "allowToHook(address)": {
            "notice": "Allows a recipient contract to hook to Sablier when a stream is canceled or when tokens are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts."
          },
          "batch(bytes[])": { "notice": "Allows batched calls to self, i.e., `this` contract." },
          "burn(uint256)": { "notice": "Burns the NFT associated with the stream." },
          "cancel(uint256)": { "notice": "Cancels the stream and refunds any remaining tokens to the sender." },
          "cancelMultiple(uint256[])": {
            "notice": "Cancels multiple streams and refunds any remaining tokens to the sender."
          },
          "collectFees()": { "notice": "Collects the accrued fees by transferring them to the contract admin." },
          "createWithDurationsLD((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint64,uint40)[])": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The segment timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithDurationsLL((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint128),(uint40,uint40))": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and `durations.total`. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithDurationsLT((address,address,uint128,address,bool,bool,string,(address,uint256)),(uint128,uint40)[])": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLD((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint64,uint40)[])": {
            "notice": "Creates a stream with the provided segment timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLL((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint128),uint40)": {
            "notice": "Creates a stream with the provided start time and end time. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestampsLT((address,address,uint128,address,bool,bool,(uint40,uint40),string,(address,uint256)),(uint128,uint40)[])": {
            "notice": "Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "getCliffTime(uint256)": {
            "notice": "Retrieves the stream's cliff time, which is a Unix timestamp.  A value of zero means there is no cliff."
          },
          "getDepositedAmount(uint256)": {
            "notice": "Retrieves the amount deposited in the stream, denoted in units of the token's decimals."
          },
          "getEndTime(uint256)": { "notice": "Retrieves the stream's end time, which is a Unix timestamp." },
          "getLockupModel(uint256)": { "notice": "Retrieves the distribution models used to create the stream." },
          "getRecipient(uint256)": { "notice": "Retrieves the stream's recipient." },
          "getRefundedAmount(uint256)": {
            "notice": "Retrieves the amount refunded to the sender after a cancellation, denoted in units of the token's decimals. This amount is always zero unless the stream was canceled."
          },
          "getSegments(uint256)": {
            "notice": "Retrieves the segments used to compose the dynamic distribution function."
          },
          "getSender(uint256)": { "notice": "Retrieves the stream's sender." },
          "getStartTime(uint256)": { "notice": "Retrieves the stream's start time, which is a Unix timestamp." },
          "getTranches(uint256)": {
            "notice": "Retrieves the tranches used to compose the tranched distribution function."
          },
          "getUnderlyingToken(uint256)": {
            "notice": "Retrieves the address of the underlying ERC-20 token being distributed."
          },
          "getUnlockAmounts(uint256)": {
            "notice": "Retrieves the unlock amounts used to compose the linear distribution function."
          },
          "getWithdrawnAmount(uint256)": {
            "notice": "Retrieves the amount withdrawn from the stream, denoted in units of the token's decimals."
          },
          "isAllowedToHook(address)": {
            "notice": "Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when tokens are withdrawn."
          },
          "isCancelable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`."
          },
          "isCold(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted."
          },
          "isDepleted(uint256)": { "notice": "Retrieves a flag indicating whether the stream is depleted." },
          "isStream(uint256)": { "notice": "Retrieves a flag indicating whether the stream exists." },
          "isTransferable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream NFT can be transferred."
          },
          "isWarm(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming."
          },
          "nextStreamId()": { "notice": "Counter for stream IDs, used in the create functions." },
          "nftDescriptor()": { "notice": "Contract that generates the non-fungible token URI." },
          "refundableAmountOf(uint256)": {
            "notice": "Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the token's decimals."
          },
          "renounce(uint256)": { "notice": "Removes the right of the stream's sender to cancel the stream." },
          "renounceMultiple(uint256[])": { "notice": "Renounces multiple streams." },
          "setNFTDescriptor(address)": {
            "notice": "Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs."
          },
          "statusOf(uint256)": { "notice": "Retrieves the stream's status." },
          "streamedAmountOf(uint256)": {
            "notice": "Calculates the amount streamed to the recipient, denoted in units of the token's decimals."
          },
          "transferAdmin(address)": { "notice": "Transfers the contract admin to a new address." },
          "wasCanceled(uint256)": { "notice": "Retrieves a flag indicating whether the stream was canceled." },
          "withdraw(uint256,address,uint128)": {
            "notice": "Withdraws the provided amount of tokens from the stream to the `to` address."
          },
          "withdrawMax(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the provided address `to`."
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`."
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "notice": "Withdraws tokens from streams to the recipient of each stream."
          },
          "withdrawableAmountOf(uint256)": {
            "notice": "Calculates the amount that the recipient can withdraw from the stream, denoted in units of the token's decimals."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=node_modules/@ensdomains/",
        "@ethereum-waffle/=node_modules/@ethereum-waffle/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=node_modules/forge-std/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "solady/=node_modules/solady/",
        "solarray/=node_modules/solarray/"
      ],
      "optimizer": { "enabled": true, "runs": 570 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/SablierLockup.sol": "SablierLockup" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99",
        "urls": [
          "bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05",
          "dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/SD59x18.sol": {
        "keccak256": "0xff25fe75f8e77d4c839fbe69198d273039575fa72f31ce9725bcacb80db65461",
        "urls": [
          "bzz-raw://7ed7bc89a4efa33fc9392de8104c8af609fd3372b323d7824a6a3ae888bad3be",
          "dweb:/ipfs/QmfCbW4geVSm7uJW4KUoXrejR2SywcRJrXwMBzUBWYiXJa"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/casting/Uint128.sol": {
        "keccak256": "0x2f0583df2d60ba24e4b6f33da2f6cbff6e3c9bed4b8b5a61c3d119779c722b3c",
        "urls": [
          "bzz-raw://f1ce4388be9b62b22a2ec342a3188e9207ddc480bbcb7e923289f6d343ca6359",
          "dweb:/ipfs/QmYwCs6WupGi1Per9yjsk7Vca6yAAgdt6DABMVofskiHYx"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/casting/Uint40.sol": {
        "keccak256": "0x650203bec71bcb70948163d173cbff19993ac1556b547a90b2dc293a87d2ccb6",
        "urls": [
          "bzz-raw://670b7d2cc10b06962370bccc8cf57e9b16b9db078023d0d45c0bce3281d7a579",
          "dweb:/ipfs/QmZMbcuHJMnz3xaiCnHE2r1Xrg4sSGdYovxecdSMbakb3g"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c",
        "urls": [
          "bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11",
          "dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8",
        "urls": [
          "bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab",
          "dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6",
        "urls": [
          "bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca",
          "dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0",
        "urls": [
          "bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353",
          "dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Casting.sol": {
        "keccak256": "0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36",
        "urls": [
          "bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2",
          "dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Constants.sol": {
        "keccak256": "0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4",
        "urls": [
          "bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396",
          "dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Errors.sol": {
        "keccak256": "0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a",
        "urls": [
          "bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee",
          "dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/ValueType.sol": {
        "keccak256": "0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092",
        "urls": [
          "bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880",
          "dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39",
        "urls": [
          "bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d",
          "dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Conversions.sol": {
        "keccak256": "0x1c2a91d7bec997ffa764046e504705be4382001835eea47f53909d5baedad481",
        "urls": [
          "bzz-raw://b11b48183878f5d909a45c6aa462f71a49b8fe0c89c51086f96a0e01b99fe2d5",
          "dweb:/ipfs/QmWj4UF6prH5RuGuxjrpuWBaRXkSt39zkUbiJkzngKigx6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2",
        "urls": [
          "bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf",
          "dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84",
        "urls": [
          "bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462",
          "dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d",
        "urls": [
          "bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919",
          "dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Casting.sol": {
        "keccak256": "0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65",
        "urls": [
          "bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09",
          "dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Constants.sol": {
        "keccak256": "0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601",
        "urls": [
          "bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60",
          "dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Errors.sol": {
        "keccak256": "0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415",
        "urls": [
          "bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80",
          "dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/ValueType.sol": {
        "keccak256": "0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25",
        "urls": [
          "bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af",
          "dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6",
        "urls": [
          "bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae",
          "dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd",
        "urls": [
          "bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437",
          "dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0",
        "urls": [
          "bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41",
          "dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6",
        "urls": [
          "bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780",
          "dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2",
        "urls": [
          "bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932",
          "dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044",
        "urls": [
          "bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8",
          "dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc",
        "urls": [
          "bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6",
          "dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3",
        "urls": [
          "bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47",
          "dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n"
        ],
        "license": "MIT"
      },
      "src/SablierLockup.sol": {
        "keccak256": "0x69080ed2636eff9f3fcc3c18f79a2405d45339cbda750e3f53054715b0d40691",
        "urls": [
          "bzz-raw://6dfa1582ccf63c5c5b927a266a92cd026a506fc1bb2d813f00ae9280b90891b3",
          "dweb:/ipfs/Qmb72RTvSHczucTAhVMUYkV6xtb1WGzmmDA9JfvWpY8uej"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/Adminable.sol": {
        "keccak256": "0x54244af6b3de28a668c5c65083215230c9e17e858ebf8364f9fde13241c4fa53",
        "urls": [
          "bzz-raw://c50c49b6ec9d65ec93cd599e3d30bb80398b604eede98d29563ac22521847bdd",
          "dweb:/ipfs/QmdDJvY7SL4XTwggV3L2hmPUmZp37TqQJtEZ4rwpmPgA6C"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/Batch.sol": {
        "keccak256": "0x649e76284c399a008b84c14ec1dab7bcf570fefe0c9be16705f3ade9994284ef",
        "urls": [
          "bzz-raw://e97d0373d28f1f80f2f4d43b7d815427de81e0bf07bd527d749e6207020a5ad8",
          "dweb:/ipfs/QmWe9yCQujQL7DefhBcWhkmuJKPjqQFtqvQLwr2afNxVxa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/NoDelegateCall.sol": {
        "keccak256": "0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059",
        "urls": [
          "bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0",
          "dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/SablierLockupBase.sol": {
        "keccak256": "0x0b330990a056a1b66af0e1d7261611598da1208b756aa962e5ecf058cbe36136",
        "urls": [
          "bzz-raw://6722bc613844bd3bfd06b38dd3bd4aea3d218406e6a7c77e039714401849759c",
          "dweb:/ipfs/QmTqzyMBimSKVBJzrEijKvtNzw4Uzc6DxTqQ39rTDMrn2s"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAdminable.sol": {
        "keccak256": "0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b",
        "urls": [
          "bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f",
          "dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IBatch.sol": {
        "keccak256": "0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4",
        "urls": [
          "bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758",
          "dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ILockupNFTDescriptor.sol": {
        "keccak256": "0x49c9d9f68d025c3e735de68ca53b7b3144bf29f9b5890706847da0f1667f111e",
        "urls": [
          "bzz-raw://7588bdbb3057462744661468632847a469e13cb1da581a8b75a813cb6223c49e",
          "dweb:/ipfs/QmbynwaivForuftTtya4Lxwu78KA5LCgmVCHk3k4st9uC2"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockup.sol": {
        "keccak256": "0x625ba75d5b893749ceacf197c92b7ba684de7fb68bb9d0a21e75456a48785e3e",
        "urls": [
          "bzz-raw://300c011e17907d218eeb3a4c3d9559f86b12b44633dcbfe546439ea9d012705e",
          "dweb:/ipfs/QmT8WNAUhN5ftC68fHyUL1dhbgvUv9bC8raHLcAXWiLYyP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupBase.sol": {
        "keccak256": "0xb455bccf9814079427cdd5abc44fe0e1d754a011dcf03ec4a9d50b74be2b8a86",
        "urls": [
          "bzz-raw://7d8f9b0ba7c8bab4a7168c6c5fb9535ca580807ae631e0680a7b450250c95d87",
          "dweb:/ipfs/QmcaDTt36Q7AC4iMpUikkZTYGxqRBNAcauewiocmHWqUad"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupRecipient.sol": {
        "keccak256": "0x633d2b31e7ac8f85941e26f5655be717cd74c7b964b296eeac6b120d48625b85",
        "urls": [
          "bzz-raw://6ff6018fa59ba3528a4f8c87072bf208d83a9ad89e556a93975ed105c677ef7c",
          "dweb:/ipfs/QmZdJ1Jx6be7KevRjRBkALvhhtTa42MMdCbdR47WEU14wc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x07331361c03f6204955c4723549055b8165f33c687b8e4b43339bd94b54536a4",
        "urls": [
          "bzz-raw://346c7ac9d1c9205d4218058133e09177740db5326b2b31ffb961ffaf5468e0eb",
          "dweb:/ipfs/QmNwRXn5qwnRRfYPRrBq9dS9NKxQ5zyiZorBYZAQXZGkHu"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Helpers.sol": {
        "keccak256": "0x64a62ce7d4eaa008571ecb70191b8655ec50d7bc69579144425d06fa0fe55df8",
        "urls": [
          "bzz-raw://ec8352201185c4de5ae9b571f61651dbb4ffcfa7bfd4d4cbb74363ace4bc9033",
          "dweb:/ipfs/QmWsjjkJPnPxKYuKdg77LbJqyk7KToMJu1FaZyLBTaxXG2"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/VestingMath.sol": {
        "keccak256": "0x1c2581d126ad538e56d5a50679bf6db798eedaaff11d864b47b3f28e4fee1bde",
        "urls": [
          "bzz-raw://dba1dad683db379f21641a8ed258390219c96b749dd53f42e1dfd0263b14638d",
          "dweb:/ipfs/QmSTwuGpAJiDZvwmFG2Wnp79dL392Y3WrwuXyunxxdbnxG"
        ],
        "license": "BUSL-1.1"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0x54b0a47578fd242f218becd8d74c785eccf5ef45ea524465c625a81f64fb50ed",
        "urls": [
          "bzz-raw://88193d0336532dfd3671e1259be5257dcf9f58662276e29083073071cd421d00",
          "dweb:/ipfs/QmWxBgMtnuGp9gKx8FAFBtc1rvbboyPRgW6n5hQGqVdhWf"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 79
}
