{
  "abi": [
    {
      "type": "function",
      "name": "createMerkleLL",
      "inputs": [
        {
          "name": "baseParams",
          "type": "tuple",
          "internalType": "struct MerkleLockup.ConstructorParams",
          "components": [
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "expiration", "type": "uint40", "internalType": "uint40" },
            { "name": "initialAdmin", "type": "address", "internalType": "address" },
            { "name": "ipfsCID", "type": "string", "internalType": "string" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "transferable", "type": "bool", "internalType": "bool" }
          ]
        },
        { "name": "lockupLinear", "type": "address", "internalType": "contract ISablierV2LockupLinear" },
        {
          "name": "streamDurations",
          "type": "tuple",
          "internalType": "struct LockupLinear.Durations",
          "components": [
            { "name": "cliff", "type": "uint40", "internalType": "uint40" },
            { "name": "total", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "aggregateAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "recipientCount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "merkleLL", "type": "address", "internalType": "contract ISablierV2MerkleLL" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createMerkleLT",
      "inputs": [
        {
          "name": "baseParams",
          "type": "tuple",
          "internalType": "struct MerkleLockup.ConstructorParams",
          "components": [
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "expiration", "type": "uint40", "internalType": "uint40" },
            { "name": "initialAdmin", "type": "address", "internalType": "address" },
            { "name": "ipfsCID", "type": "string", "internalType": "string" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "transferable", "type": "bool", "internalType": "bool" }
          ]
        },
        { "name": "lockupTranched", "type": "address", "internalType": "contract ISablierV2LockupTranched" },
        {
          "name": "tranchesWithPercentages",
          "type": "tuple[]",
          "internalType": "struct MerkleLT.TrancheWithPercentage[]",
          "components": [
            { "name": "unlockPercentage", "type": "uint64", "internalType": "UD2x18" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "aggregateAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "recipientCount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "merkleLT", "type": "address", "internalType": "contract ISablierV2MerkleLT" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isPercentagesSum100",
      "inputs": [
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct MerkleLT.TrancheWithPercentage[]",
          "components": [
            { "name": "unlockPercentage", "type": "uint64", "internalType": "UD2x18" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "event",
      "name": "CreateMerkleLL",
      "inputs": [
        { "name": "merkleLL", "type": "address", "indexed": true, "internalType": "contract ISablierV2MerkleLL" },
        {
          "name": "baseParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct MerkleLockup.ConstructorParams",
          "components": [
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "expiration", "type": "uint40", "internalType": "uint40" },
            { "name": "initialAdmin", "type": "address", "internalType": "address" },
            { "name": "ipfsCID", "type": "string", "internalType": "string" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "transferable", "type": "bool", "internalType": "bool" }
          ]
        },
        {
          "name": "lockupLinear",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierV2LockupLinear"
        },
        {
          "name": "streamDurations",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct LockupLinear.Durations",
          "components": [
            { "name": "cliff", "type": "uint40", "internalType": "uint40" },
            { "name": "total", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "aggregateAmount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "recipientCount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateMerkleLT",
      "inputs": [
        { "name": "merkleLT", "type": "address", "indexed": true, "internalType": "contract ISablierV2MerkleLT" },
        {
          "name": "baseParams",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct MerkleLockup.ConstructorParams",
          "components": [
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "expiration", "type": "uint40", "internalType": "uint40" },
            { "name": "initialAdmin", "type": "address", "internalType": "address" },
            { "name": "ipfsCID", "type": "string", "internalType": "string" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "transferable", "type": "bool", "internalType": "bool" }
          ]
        },
        {
          "name": "lockupTranched",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierV2LockupTranched"
        },
        {
          "name": "tranchesWithPercentages",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct MerkleLT.TrancheWithPercentage[]",
          "components": [
            { "name": "unlockPercentage", "type": "uint64", "internalType": "UD2x18" },
            { "name": "duration", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "totalDuration", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "aggregateAmount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "recipientCount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "createMerkleLL((address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)": "769bed20",
    "createMerkleLT((address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256)": "1e323876",
    "isPercentagesSum100((uint64,uint40)[])": "4d7c0f11"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierV2MerkleLL\",\"name\":\"merkleLL\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct MerkleLockup.ConstructorParams\",\"name\":\"baseParams\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"streamDurations\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"}],\"name\":\"CreateMerkleLL\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierV2MerkleLT\",\"name\":\"merkleLT\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct MerkleLockup.ConstructorParams\",\"name\":\"baseParams\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract ISablierV2LockupTranched\",\"name\":\"lockupTranched\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"UD2x18\",\"name\":\"unlockPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct MerkleLT.TrancheWithPercentage[]\",\"name\":\"tranchesWithPercentages\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aggregateAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"}],\"name\":\"CreateMerkleLT\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"internalType\":\"struct MerkleLockup.ConstructorParams\",\"name\":\"baseParams\",\"type\":\"tuple\"},{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"streamDurations\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"aggregateAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"}],\"name\":\"createMerkleLL\",\"outputs\":[{\"internalType\":\"contract ISablierV2MerkleLL\",\"name\":\"merkleLL\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"expiration\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"internalType\":\"struct MerkleLockup.ConstructorParams\",\"name\":\"baseParams\",\"type\":\"tuple\"},{\"internalType\":\"contract ISablierV2LockupTranched\",\"name\":\"lockupTranched\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"UD2x18\",\"name\":\"unlockPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct MerkleLT.TrancheWithPercentage[]\",\"name\":\"tranchesWithPercentages\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"aggregateAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"recipientCount\",\"type\":\"uint256\"}],\"name\":\"createMerkleLT\",\"outputs\":[{\"internalType\":\"contract ISablierV2MerkleLT\",\"name\":\"merkleLT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"UD2x18\",\"name\":\"unlockPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct MerkleLT.TrancheWithPercentage[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"name\":\"isPercentagesSum100\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createMerkleLL((address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)\":{\"details\":\"Emits a {CreateMerkleLL} event.\",\"params\":{\"aggregateAmount\":\"The total amount of ERC-20 assets to be distributed to all recipients.\",\"baseParams\":\"Struct encapsulating the {SablierV2MerkleLockup} parameters, which are documented in {DataTypes}.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\",\"recipientCount\":\"The total number of recipients who are eligible to claim.\",\"streamDurations\":\"The durations for each stream.\"},\"returns\":{\"merkleLL\":\"The address of the newly created MerkleLockup contract.\"}},\"createMerkleLT((address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256)\":{\"details\":\"Emits a {CreateMerkleLT} event.\",\"params\":{\"aggregateAmount\":\"The total amount of ERC-20 assets to be distributed to all recipients.\",\"baseParams\":\"Struct encapsulating the {SablierV2MerkleLockup} parameters, which are documented in {DataTypes}.\",\"lockupTranched\":\"The address of the {SablierV2LockupTranched} contract.\",\"recipientCount\":\"The total number of recipients who are eligible to claim.\",\"tranchesWithPercentages\":\"The tranches with their respective unlock percentages.\"},\"returns\":{\"merkleLT\":\"The address of the newly created MerkleLockup contract.\"}},\"isPercentagesSum100((uint64,uint40)[])\":{\"details\":\"Reverts if the sum of percentages overflows.\",\"params\":{\"tranches\":\"The tranches with their respective unlock percentages.\"},\"returns\":{\"result\":\"True if the sum of percentages equals 100%, otherwise false.\"}}},\"title\":\"ISablierV2MerkleLockupFactory\",\"version\":1},\"userdoc\":{\"events\":{\"CreateMerkleLL(address,(address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)\":{\"notice\":\"Emitted when a {SablierV2MerkleLL} campaign is created.\"},\"CreateMerkleLT(address,(address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256,uint256)\":{\"notice\":\"Emitted when a {SablierV2MerkleLT} campaign is created.\"}},\"kind\":\"user\",\"methods\":{\"createMerkleLL((address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)\":{\"notice\":\"Creates a new MerkleLockup campaign with a LockupLinear distribution.\"},\"createMerkleLT((address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256)\":{\"notice\":\"Creates a new MerkleLockup campaign with a LockupTranched distribution.\"},\"isPercentagesSum100((uint64,uint40)[])\":{\"notice\":\"Verifies if the sum of percentages in `tranches` equals 100% , i.e. 1e18.\"}},\"notice\":\"Deploys MerkleLockup campaigns with CREATE2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISablierV2MerkleLockupFactory.sol\":\"ISablierV2MerkleLockupFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":@sablier/v2-core/=node_modules/@sablier/v2-core/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339\",\"dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f\",\"dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d\",\"dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd\",\"dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7\",\"dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f\",\"dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol\":{\"keccak256\":\"0x9d7c695e1454bc14b3dd323bd8598fd762f616936553852ed55bfa02a7107e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2401e189b3769aad662a3f7a965f43c71e606556ad548027649c1f809f4ebf1\",\"dweb:/ipfs/QmeLrGETtVockNTi4SW1jtMRg3xkhbwbVZGuTNRxCfyafp\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol\":{\"keccak256\":\"0x40f72f9bd8c03329038307c5e77eec27457032b3637bd14edd02444a4c6b0332\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ff7ad36aa8ddb431e245ee6102de7c374bb24a64f51dd77312035edae07050df\",\"dweb:/ipfs/Qmdyk31NQXivHv2Uvo96NGK3PDqgBuRixXQrvwuYG5AHpV\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupTranched.sol\":{\"keccak256\":\"0x718aa7584349ecbe28990c187ad0e096d2283320a9366cf1d11fb38137a5d0f7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3e9738d60a01934dda7c253ae3ebb853eda9344ebca73845000251d9a3a2bc49\",\"dweb:/ipfs/QmUexrWgknyqKCDC6LqdBfQ2B5Fv8sdKuAriNEbmaArS7t\"]},\"node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol\":{\"keccak256\":\"0x9f70b5549dd3f057ab460c142431fd0815e5a8501b0d3546644a7ded87dc4714\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15863af93766d1f1c426e0e880b21dfc6ebc3c6ce09a243704b3b95536fe4742\",\"dweb:/ipfs/QmSCNWYQ3MeX9JPqzKF8BtnghaoHasEwXW6sRGiGkDULka\"]},\"node_modules/@sablier/v2-core/src/types/DataTypes.sol\":{\"keccak256\":\"0xcb3c3ec3060ab0dbbaa942f08a2fb752bc9b47780ca51f7ed1fdf929f0f13b35\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://feb7f1c8add92280a8dc9c1695a9d5a233a2d7f4d7fefff64e0b5a800311268e\",\"dweb:/ipfs/QmXnYrPTTgrVZx9iBCkkJ73kUwHScBj66MJa1MwKHHdq2a\"]},\"src/interfaces/ISablierV2MerkleLL.sol\":{\"keccak256\":\"0x89c2b1009bb31a6aba9ea5816182d825ce9828b046e0440445cce136a39ed666\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://91927af7b2863f8fdaa9c96620a6ada72b066f18ccc7082dd3bd82c58d072fa6\",\"dweb:/ipfs/QmV68hDAjRq61obRBHJG7vad7WR7tCGGUyTLJCzDui44zi\"]},\"src/interfaces/ISablierV2MerkleLT.sol\":{\"keccak256\":\"0x39edf6b6e9bf36f21fa2c28d90e89db3b9033ef61c2ce399924de4719a80f795\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb63d0d69e8e74474e140040ae32cc80480ed424b5a81a91edbc4234366816cd\",\"dweb:/ipfs/QmVt8r9jACLjt9cNUAFycR47e9bRfSeESEHNCUYn6djD5Z\"]},\"src/interfaces/ISablierV2MerkleLockup.sol\":{\"keccak256\":\"0x3e18f46983b95d26daaa3b2785a961c0743eda4f474df2982a687745e704ee7d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8805f456156409fcde0463a61d4de1c75afb385752435f0a372f76548409fc92\",\"dweb:/ipfs/QmevV62UJwq25M6r5PABTHHXTKLAytyqTDmbht7SbttiMS\"]},\"src/interfaces/ISablierV2MerkleLockupFactory.sol\":{\"keccak256\":\"0x2336685c963d6159fecbb428c054d20b7ca581bf121ed2edcec4bb6df1c5c36b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb6c46413a6cb5f06cc453618aa6766489df55f44058efc2b172504f314fd1d1\",\"dweb:/ipfs/QmNZyEMZqTh2rY8XFjcnHr7TeJHAfvJ6fkM7bEsSbXJ7UT\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x94c38100e2c6ad92f49b39ac2151bcf1aaa30194e7114110b0ab19a6456e4012\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ea43d6a3f11af9586f0a05034d1f85bcc4d90c6100995e24c4fd78d2225dc1dc\",\"dweb:/ipfs/QmZr3pDBbF1hJRWKgzuHiSoPmUmu5JhMnANcwLYrdDViFK\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "contract ISablierV2MerkleLL", "name": "merkleLL", "type": "address", "indexed": true },
            {
              "internalType": "struct MerkleLockup.ConstructorParams",
              "name": "baseParams",
              "type": "tuple",
              "components": [
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "uint40", "name": "expiration", "type": "uint40" },
                { "internalType": "address", "name": "initialAdmin", "type": "address" },
                { "internalType": "string", "name": "ipfsCID", "type": "string" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "string", "name": "name", "type": "string" },
                { "internalType": "bool", "name": "transferable", "type": "bool" }
              ],
              "indexed": false
            },
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct LockupLinear.Durations",
              "name": "streamDurations",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                { "internalType": "uint40", "name": "total", "type": "uint40" }
              ],
              "indexed": false
            },
            { "internalType": "uint256", "name": "aggregateAmount", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "recipientCount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "CreateMerkleLL",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "contract ISablierV2MerkleLT", "name": "merkleLT", "type": "address", "indexed": true },
            {
              "internalType": "struct MerkleLockup.ConstructorParams",
              "name": "baseParams",
              "type": "tuple",
              "components": [
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "uint40", "name": "expiration", "type": "uint40" },
                { "internalType": "address", "name": "initialAdmin", "type": "address" },
                { "internalType": "string", "name": "ipfsCID", "type": "string" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "string", "name": "name", "type": "string" },
                { "internalType": "bool", "name": "transferable", "type": "bool" }
              ],
              "indexed": false
            },
            {
              "internalType": "contract ISablierV2LockupTranched",
              "name": "lockupTranched",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct MerkleLT.TrancheWithPercentage[]",
              "name": "tranchesWithPercentages",
              "type": "tuple[]",
              "components": [
                { "internalType": "UD2x18", "name": "unlockPercentage", "type": "uint64" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ],
              "indexed": false
            },
            { "internalType": "uint256", "name": "totalDuration", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "aggregateAmount", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "recipientCount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "CreateMerkleLT",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct MerkleLockup.ConstructorParams",
              "name": "baseParams",
              "type": "tuple",
              "components": [
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "uint40", "name": "expiration", "type": "uint40" },
                { "internalType": "address", "name": "initialAdmin", "type": "address" },
                { "internalType": "string", "name": "ipfsCID", "type": "string" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "string", "name": "name", "type": "string" },
                { "internalType": "bool", "name": "transferable", "type": "bool" }
              ]
            },
            { "internalType": "contract ISablierV2LockupLinear", "name": "lockupLinear", "type": "address" },
            {
              "internalType": "struct LockupLinear.Durations",
              "name": "streamDurations",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "cliff", "type": "uint40" },
                { "internalType": "uint40", "name": "total", "type": "uint40" }
              ]
            },
            { "internalType": "uint256", "name": "aggregateAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "recipientCount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMerkleLL",
          "outputs": [{ "internalType": "contract ISablierV2MerkleLL", "name": "merkleLL", "type": "address" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MerkleLockup.ConstructorParams",
              "name": "baseParams",
              "type": "tuple",
              "components": [
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "uint40", "name": "expiration", "type": "uint40" },
                { "internalType": "address", "name": "initialAdmin", "type": "address" },
                { "internalType": "string", "name": "ipfsCID", "type": "string" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "string", "name": "name", "type": "string" },
                { "internalType": "bool", "name": "transferable", "type": "bool" }
              ]
            },
            { "internalType": "contract ISablierV2LockupTranched", "name": "lockupTranched", "type": "address" },
            {
              "internalType": "struct MerkleLT.TrancheWithPercentage[]",
              "name": "tranchesWithPercentages",
              "type": "tuple[]",
              "components": [
                { "internalType": "UD2x18", "name": "unlockPercentage", "type": "uint64" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            },
            { "internalType": "uint256", "name": "aggregateAmount", "type": "uint256" },
            { "internalType": "uint256", "name": "recipientCount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createMerkleLT",
          "outputs": [{ "internalType": "contract ISablierV2MerkleLT", "name": "merkleLT", "type": "address" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct MerkleLT.TrancheWithPercentage[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "UD2x18", "name": "unlockPercentage", "type": "uint64" },
                { "internalType": "uint40", "name": "duration", "type": "uint40" }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPercentagesSum100",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createMerkleLL((address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)": {
            "details": "Emits a {CreateMerkleLL} event.",
            "params": {
              "aggregateAmount": "The total amount of ERC-20 assets to be distributed to all recipients.",
              "baseParams": "Struct encapsulating the {SablierV2MerkleLockup} parameters, which are documented in {DataTypes}.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract.",
              "recipientCount": "The total number of recipients who are eligible to claim.",
              "streamDurations": "The durations for each stream."
            },
            "returns": { "merkleLL": "The address of the newly created MerkleLockup contract." }
          },
          "createMerkleLT((address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256)": {
            "details": "Emits a {CreateMerkleLT} event.",
            "params": {
              "aggregateAmount": "The total amount of ERC-20 assets to be distributed to all recipients.",
              "baseParams": "Struct encapsulating the {SablierV2MerkleLockup} parameters, which are documented in {DataTypes}.",
              "lockupTranched": "The address of the {SablierV2LockupTranched} contract.",
              "recipientCount": "The total number of recipients who are eligible to claim.",
              "tranchesWithPercentages": "The tranches with their respective unlock percentages."
            },
            "returns": { "merkleLT": "The address of the newly created MerkleLockup contract." }
          },
          "isPercentagesSum100((uint64,uint40)[])": {
            "details": "Reverts if the sum of percentages overflows.",
            "params": { "tranches": "The tranches with their respective unlock percentages." },
            "returns": { "result": "True if the sum of percentages equals 100%, otherwise false." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createMerkleLL((address,bool,uint40,address,string,bytes32,string,bool),address,(uint40,uint40),uint256,uint256)": {
            "notice": "Creates a new MerkleLockup campaign with a LockupLinear distribution."
          },
          "createMerkleLT((address,bool,uint40,address,string,bytes32,string,bool),address,(uint64,uint40)[],uint256,uint256)": {
            "notice": "Creates a new MerkleLockup campaign with a LockupTranched distribution."
          },
          "isPercentagesSum100((uint64,uint40)[])": {
            "notice": "Verifies if the sum of percentages in `tranches` equals 100% , i.e. 1e18."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "@sablier/v2-core/=node_modules/@sablier/v2-core/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": { "enabled": true, "runs": 10000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/interfaces/ISablierV2MerkleLockupFactory.sol": "ISablierV2MerkleLockupFactory" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585",
        "urls": [
          "bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339",
          "dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4",
        "urls": [
          "bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f",
          "dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0",
        "urls": [
          "bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d",
          "dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07",
        "urls": [
          "bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd",
          "dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09",
        "urls": [
          "bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7",
          "dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "node_modules/@sablier/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b",
        "urls": [
          "bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f",
          "dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2Lockup.sol": {
        "keccak256": "0x9d7c695e1454bc14b3dd323bd8598fd762f616936553852ed55bfa02a7107e93",
        "urls": [
          "bzz-raw://e2401e189b3769aad662a3f7a965f43c71e606556ad548027649c1f809f4ebf1",
          "dweb:/ipfs/QmeLrGETtVockNTi4SW1jtMRg3xkhbwbVZGuTNRxCfyafp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupLinear.sol": {
        "keccak256": "0x40f72f9bd8c03329038307c5e77eec27457032b3637bd14edd02444a4c6b0332",
        "urls": [
          "bzz-raw://ff7ad36aa8ddb431e245ee6102de7c374bb24a64f51dd77312035edae07050df",
          "dweb:/ipfs/Qmdyk31NQXivHv2Uvo96NGK3PDqgBuRixXQrvwuYG5AHpV"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2LockupTranched.sol": {
        "keccak256": "0x718aa7584349ecbe28990c187ad0e096d2283320a9366cf1d11fb38137a5d0f7",
        "urls": [
          "bzz-raw://3e9738d60a01934dda7c253ae3ebb853eda9344ebca73845000251d9a3a2bc49",
          "dweb:/ipfs/QmUexrWgknyqKCDC6LqdBfQ2B5Fv8sdKuAriNEbmaArS7t"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol": {
        "keccak256": "0x9f70b5549dd3f057ab460c142431fd0815e5a8501b0d3546644a7ded87dc4714",
        "urls": [
          "bzz-raw://15863af93766d1f1c426e0e880b21dfc6ebc3c6ce09a243704b3b95536fe4742",
          "dweb:/ipfs/QmSCNWYQ3MeX9JPqzKF8BtnghaoHasEwXW6sRGiGkDULka"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/v2-core/src/types/DataTypes.sol": {
        "keccak256": "0xcb3c3ec3060ab0dbbaa942f08a2fb752bc9b47780ca51f7ed1fdf929f0f13b35",
        "urls": [
          "bzz-raw://feb7f1c8add92280a8dc9c1695a9d5a233a2d7f4d7fefff64e0b5a800311268e",
          "dweb:/ipfs/QmXnYrPTTgrVZx9iBCkkJ73kUwHScBj66MJa1MwKHHdq2a"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleLL.sol": {
        "keccak256": "0x89c2b1009bb31a6aba9ea5816182d825ce9828b046e0440445cce136a39ed666",
        "urls": [
          "bzz-raw://91927af7b2863f8fdaa9c96620a6ada72b066f18ccc7082dd3bd82c58d072fa6",
          "dweb:/ipfs/QmV68hDAjRq61obRBHJG7vad7WR7tCGGUyTLJCzDui44zi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleLT.sol": {
        "keccak256": "0x39edf6b6e9bf36f21fa2c28d90e89db3b9033ef61c2ce399924de4719a80f795",
        "urls": [
          "bzz-raw://bb63d0d69e8e74474e140040ae32cc80480ed424b5a81a91edbc4234366816cd",
          "dweb:/ipfs/QmVt8r9jACLjt9cNUAFycR47e9bRfSeESEHNCUYn6djD5Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleLockup.sol": {
        "keccak256": "0x3e18f46983b95d26daaa3b2785a961c0743eda4f474df2982a687745e704ee7d",
        "urls": [
          "bzz-raw://8805f456156409fcde0463a61d4de1c75afb385752435f0a372f76548409fc92",
          "dweb:/ipfs/QmevV62UJwq25M6r5PABTHHXTKLAytyqTDmbht7SbttiMS"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2MerkleLockupFactory.sol": {
        "keccak256": "0x2336685c963d6159fecbb428c054d20b7ca581bf121ed2edcec4bb6df1c5c36b",
        "urls": [
          "bzz-raw://bb6c46413a6cb5f06cc453618aa6766489df55f44058efc2b172504f314fd1d1",
          "dweb:/ipfs/QmNZyEMZqTh2rY8XFjcnHr7TeJHAfvJ6fkM7bEsSbXJ7UT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0x94c38100e2c6ad92f49b39ac2151bcf1aaa30194e7114110b0ab19a6456e4012",
        "urls": [
          "bzz-raw://ea43d6a3f11af9586f0a05034d1f85bcc4d90c6100995e24c4fd78d2225dc1dc",
          "dweb:/ipfs/QmZr3pDBbF1hJRWKgzuHiSoPmUmu5JhMnANcwLYrdDViFK"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 106
}
