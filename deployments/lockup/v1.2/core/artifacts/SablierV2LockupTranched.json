{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialAdmin", "type": "address", "internalType": "address" },
        { "name": "initialNFTDescriptor", "type": "address", "internalType": "contract ISablierV2NFTDescriptor" },
        { "name": "maxTrancheCount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_BROKER_FEE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "UD60x18" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_TRANCHE_COUNT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancel",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "cancelMultiple",
      "inputs": [{ "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithDurations",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LockupTranched.CreateWithDurations",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            {
              "name": "tranches",
              "type": "tuple[]",
              "internalType": "struct LockupTranched.TrancheWithDuration[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "duration", "type": "uint40", "internalType": "uint40" }
              ]
            },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createWithTimestamps",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LockupTranched.CreateWithTimestamps",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "cancelable", "type": "bool", "internalType": "bool" },
            { "name": "transferable", "type": "bool", "internalType": "bool" },
            { "name": "startTime", "type": "uint40", "internalType": "uint40" },
            {
              "name": "tranches",
              "type": "tuple[]",
              "internalType": "struct LockupTranched.Tranche[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
              ]
            },
            {
              "name": "broker",
              "type": "tuple",
              "internalType": "struct Broker",
              "components": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
              ]
            }
          ]
        }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAsset",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "asset", "type": "address", "internalType": "contract IERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDepositedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "depositedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEndTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "endTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipient",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRefundedAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSender",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "sender", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStartTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "startTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "stream",
          "type": "tuple",
          "internalType": "struct LockupTranched.StreamLT",
          "components": [
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "startTime", "type": "uint40", "internalType": "uint40" },
            { "name": "endTime", "type": "uint40", "internalType": "uint40" },
            { "name": "isCancelable", "type": "bool", "internalType": "bool" },
            { "name": "wasCanceled", "type": "bool", "internalType": "bool" },
            { "name": "asset", "type": "address", "internalType": "contract IERC20" },
            { "name": "isDepleted", "type": "bool", "internalType": "bool" },
            { "name": "isStream", "type": "bool", "internalType": "bool" },
            { "name": "isTransferable", "type": "bool", "internalType": "bool" },
            {
              "name": "amounts",
              "type": "tuple",
              "internalType": "struct Lockup.Amounts",
              "components": [
                { "name": "deposited", "type": "uint128", "internalType": "uint128" },
                { "name": "withdrawn", "type": "uint128", "internalType": "uint128" },
                { "name": "refunded", "type": "uint128", "internalType": "uint128" }
              ]
            },
            {
              "name": "tranches",
              "type": "tuple[]",
              "internalType": "struct LockupTranched.Tranche[]",
              "components": [
                { "name": "amount", "type": "uint128", "internalType": "uint128" },
                { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTimestamps",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "timestamps",
          "type": "tuple",
          "internalType": "struct LockupTranched.Timestamps",
          "components": [
            { "name": "start", "type": "uint40", "internalType": "uint40" },
            { "name": "end", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTranches",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "tranches",
          "type": "tuple[]",
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawnAmount",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isAllowedToHook",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isCold",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransferable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isWarm",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextStreamId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nftDescriptor",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ISablierV2NFTDescriptor" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "refundableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounce",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNFTDescriptor",
      "inputs": [{ "name": "newNFTDescriptor", "type": "address", "internalType": "contract ISablierV2NFTDescriptor" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "statusOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "status", "type": "uint8", "internalType": "enum Lockup.Status" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "streamedAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "streamedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "uri", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [{ "name": "newAdmin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "wasCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawMax",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawMaxAndTransfer",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "newRecipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawMultiple",
      "inputs": [
        { "name": "streamIds", "type": "uint256[]", "internalType": "uint256[]" },
        { "name": "amounts", "type": "uint128[]", "internalType": "uint128[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AllowToHook",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchMetadataUpdate",
      "inputs": [
        { "name": "_fromTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "_toTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CancelLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "asset", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "senderAmount", "type": "uint128", "indexed": false, "internalType": "uint128" },
        { "name": "recipientAmount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateLockupTranchedStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "funder", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        {
          "name": "amounts",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Lockup.CreateAmounts",
          "components": [
            { "name": "deposit", "type": "uint128", "internalType": "uint128" },
            { "name": "brokerFee", "type": "uint128", "internalType": "uint128" }
          ]
        },
        { "name": "asset", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "cancelable", "type": "bool", "indexed": false, "internalType": "bool" },
        { "name": "transferable", "type": "bool", "indexed": false, "internalType": "bool" },
        {
          "name": "tranches",
          "type": "tuple[]",
          "indexed": false,
          "internalType": "struct LockupTranched.Tranche[]",
          "components": [
            { "name": "amount", "type": "uint128", "internalType": "uint128" },
            { "name": "timestamp", "type": "uint40", "internalType": "uint40" }
          ]
        },
        {
          "name": "timestamps",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct LockupTranched.Timestamps",
          "components": [
            { "name": "start", "type": "uint40", "internalType": "uint40" },
            { "name": "end", "type": "uint40", "internalType": "uint40" }
          ]
        },
        { "name": "broker", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MetadataUpdate",
      "inputs": [{ "name": "_tokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RenounceLockupStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNFTDescriptor",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        {
          "name": "oldNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierV2NFTDescriptor"
        },
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierV2NFTDescriptor"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferAdmin",
      "inputs": [
        { "name": "oldAdmin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawFromLockupStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "asset", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [{ "name": "target", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "CallerNotAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "DelegateCall", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [{ "name": "operator", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    {
      "type": "error",
      "name": "PRBMath_MulDiv18_Overflow",
      "inputs": [
        { "name": "x", "type": "uint256", "internalType": "uint256" },
        { "name": "y", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2LockupTranched_DepositAmountNotEqualToTrancheAmountsSum",
      "inputs": [
        { "name": "depositAmount", "type": "uint128", "internalType": "uint128" },
        { "name": "trancheAmountsSum", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2LockupTranched_StartTimeNotLessThanFirstTrancheTimestamp",
      "inputs": [
        { "name": "startTime", "type": "uint40", "internalType": "uint40" },
        { "name": "firstTrancheTimestamp", "type": "uint40", "internalType": "uint40" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2LockupTranched_TrancheCountTooHigh",
      "inputs": [{ "name": "count", "type": "uint256", "internalType": "uint256" }]
    },
    { "type": "error", "name": "SablierV2LockupTranched_TrancheCountZero", "inputs": [] },
    {
      "type": "error",
      "name": "SablierV2LockupTranched_TrancheTimestampsNotOrdered",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" },
        { "name": "previousTimestamp", "type": "uint40", "internalType": "uint40" },
        { "name": "currentTimestamp", "type": "uint40", "internalType": "uint40" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_AllowToHookUnsupportedInterface",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_AllowToHookZeroCodeSize",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_BrokerFeeTooHigh",
      "inputs": [
        { "name": "brokerFee", "type": "uint256", "internalType": "UD60x18" },
        { "name": "maxBrokerFee", "type": "uint256", "internalType": "UD60x18" }
      ]
    },
    { "type": "error", "name": "SablierV2Lockup_DepositAmountZero", "inputs": [] },
    {
      "type": "error",
      "name": "SablierV2Lockup_EndTimeNotInTheFuture",
      "inputs": [
        { "name": "blockTimestamp", "type": "uint40", "internalType": "uint40" },
        { "name": "endTime", "type": "uint40", "internalType": "uint40" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_InvalidHookSelector",
      "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_NotTransferable",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_Null",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_Overdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    { "type": "error", "name": "SablierV2Lockup_StartTimeZero", "inputs": [] },
    {
      "type": "error",
      "name": "SablierV2Lockup_StreamCanceled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_StreamDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_StreamNotCancelable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_StreamNotDepleted",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_StreamSettled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_WithdrawAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_WithdrawArrayCountsNotEqual",
      "inputs": [
        { "name": "streamIdsCount", "type": "uint256", "internalType": "uint256" },
        { "name": "amountsCount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_WithdrawToZeroAddress",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierV2Lockup_WithdrawalAddressNotRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x60c0604052346103e457614e2e6060813803918261001c816103e8565b9384928339810103126103e45780516001600160a01b038116908190036103e45760208201516001600160a01b03811692908390036103e4576040015161006360406103e8565b92601e84527f5361626c696572205632204c6f636b7570205472616e63686564204e46540000602085015261009860406103e8565b60118152705341422d56322d4c4f434b55502d54524160781b602082015230608052845190946001600160401b0382116102e75760015490600182811c921680156103da575b60208310146102c95781601f84931161036c575b50602090601f8311600114610306575f926102fb575b50508160011b915f199060031b1c1916176001555b83516001600160401b0381116102e757600254600181811c911680156102dd575b60208210146102c957601f8111610266575b50602094601f8211600114610203579481929394955f926101f8575b50508160011b915f199060031b1c1916176002555b5f80546001600160a01b031990811685178255600880549091169290921790915560405192907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf808180a360a0526001600755614a20908161040e823960805181613e32015260a051818181612fa10152613edb0152f35b015190505f8061016c565b601f1982169560025f52805f20915f5b88811061024e57508360019596979810610236575b505050811b01600255610181565b01515f1960f88460031b161c191690555f8080610228565b91926020600181928685015181550194019201610213565b60025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f830160051c810191602084106102bf575b601f0160051c01905b8181106102b45750610150565b5f81556001016102a7565b909150819061029e565b634e487b7160e01b5f52602260045260245ffd5b90607f169061013e565b634e487b7160e01b5f52604160045260245ffd5b015190505f80610108565b60015f9081528281209350601f198516905b818110610354575090846001959493921061033c575b505050811b0160015561011d565b01515f1960f88460031b161c191690555f808061032e565b92936020600181928786015181550195019301610318565b60015f529091507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f840160051c810191602085106103d0575b90601f859493920160051c01905b8181106103c257506100f2565b5f81558493506001016103b5565b90915081906103a7565b91607f16916100de565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176102e75760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461330d57508063027b6744146132eb57806306fdde0314613230578063081812fc14613212578063095ea7b31461310d5780631400ecec1461305c5780631c1cdd4c14612ff85780631e99d56914612fdb57806323b872dd14612fc45780632fe4304114612f8a578063303acc8514612f4d57806332fbe22b14612df0578063406887cb14612c8157806340e58ee5146129aa578063425d30dd1461295a57806342842e0e1461293157806342966c681461276d57806344267570146127475780634857501f146126d65780634869e12d1461269c5780634cc55e11146122f657806357404b12146122685780636352211e146122395780636d0cee751461223957806370a08231146121cf57806375829def146121615780637cad6cd1146120705780637de6b1db14611f235780637f5799f914611eca5780638659c27014611b13578063894e9a0d146117d4578063897f362b146115095780638f69b993146114895780639067b6771461143a57806395d89b4114611332578063a22cb4651461127e578063a80fc0711461122d578063ad35efd4146111ce578063b25645691461117e578063b88d4fde146110f4578063b8a3be66146110bf578063b971302a14611071578063bc2be1be14611022578063c156a11d14610c08578063c87b56dd14610afd578063d4dbd20b14610aac578063d511609f14610a61578063d975dfed14610a16578063e985e9c5146109bd578063ea5ead1914610690578063eac8f5b81461063f578063f590c176146105e4578063f851a440146105bf5763fdd46d601461026e575f80fd5b346105bb5760603660031901126105bb5760043561028a61343a565b90604435916001600160801b038316908184036105bb576102a9613e28565b825f52600a60205260ff600160405f20015460a81c16156105a957825f52600a60205260ff600160405f20015460a01c16610596576001600160a01b03811690811561058357821561057057835f5260036020526001600160a01b0360405f205416948583141580610560575b610545576001600160801b0361032b86614680565b1680851161052b575061035090855f52600a602052600260405f20015460801c6146a6565b5f858152600a6020526040902060020180546001600160801b031660809290921b6001600160801b03191691909117815561038a906139ce565b6001600160801b036103ae8160208401511692826040818351169201511690613611565b1611156104f9575b835f52600a6020526103da836001600160a01b03600160405f200154169283614804565b81847f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051878152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051858152a183331415806104e3575b61044057005b604051926392b9102b60e01b84526004840152336024840152604483015260648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f916104a9575b50160361049757005b632187e5e760e21b5f5260045260245ffd5b6104cb915060203d6020116104d1575b6104c3818361359d565b810190613b11565b5f61048e565b503d6104b9565b6040513d5f823e3d90fd5b50835f52600960205260ff60405f20541661043a565b5f848152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556103b6565b848663287ecaef60e21b5f5260045260245260445260645ffd5b828563b34359d360e01b5f526004523360245260445260645ffd5b5061056a8561455b565b15610316565b8363d2aabcd960e01b5f5260045260245ffd5b83630ff7ee2d60e31b5f5260045260245ffd5b82634a5541ef60e01b5f5260045260245ffd5b8262b8e7e760e51b5f5260045260245ffd5b5f80fd5b346105bb575f3660031901126105bb5760206001600160a01b035f5416604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060405f205460f81c6040519015158152f35b62b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160a01b03600160405f20015416604051908152f35b346105bb5760403660031901126105bb576004356106ac61343a565b6106b582614680565b916106be613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c166109ab576001600160a01b0382168015610998576001600160801b03841692831561098557825f5260036020526001600160a01b0360405f205416948583141580610975575b61095a576001600160801b0361074a85614680565b16808611610940575061076f90845f52600a602052600260405f20015460801c6146a6565b5f848152600a6020526040902060020180546001600160801b031660809290921b6001600160801b0319169190911781556107a9906139ce565b6001600160801b036107cd8160208401511692826040818351169201511690613611565b16111561090e575b825f52600a6020526107f9846001600160a01b03600160405f200154169283614804565b81837f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051888152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051848152a183331415806108f8575b610869575b602083604051908152f35b604051916392b9102b60e01b8352600483015233602483015260448201528160648201526020816084815f875af19081156104d8576392b9102b60e01b916001600160e01b0319915f916108d9575b5016036108c657818061085e565b50632187e5e760e21b5f5260045260245ffd5b6108f2915060203d6020116104d1576104c3818361359d565b856108b8565b50835f52600960205260ff60405f205416610859565b5f838152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556107d5565b858563287ecaef60e21b5f5260045260245260445260645ffd5b828463b34359d360e01b5f526004523360245260445260645ffd5b5061097f8461455b565b15610735565b8263d2aabcd960e01b5f5260045260245ffd5b50630ff7ee2d60e31b5f5260045260245ffd5b634a5541ef60e01b5f5260045260245ffd5b346105bb5760403660031901126105bb576109d6613424565b6001600160a01b036109e661343a565b91165f5260066020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e57610a50602091614680565b6001600160801b0360405191168152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a6020526020600260405f20015460801c604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160801b03600360405f20015416604051908152f35b346105bb5760203660031901126105bb57600435610b1a81613b31565b505f6001600160a01b0360085416916044604051809481937fe9dc637500000000000000000000000000000000000000000000000000000000835230600484015260248301525afa80156104d8575f90610b8b575b610b87906040519182916020835260208301906133ff565b0390f35b503d805f833e610b9b818361359d565b8101906020818303126105bb5780519067ffffffffffffffff82116105bb57019080601f830112156105bb57815191610bd3836135bf565b91610be1604051938461359d565b838352602084830101116105bb57610b8792610c0391602080850191016133de565b610b6f565b346105bb5760403660031901126105bb57600435610c2461343a565b610c2c613e28565b815f52600a60205260ff600160405f20015460a81c161561101057815f5260036020526001600160a01b0360405f20541690813303610ff957610c6e83614680565b906001600160801b0382169182158015610d02575b50506001600160a01b03811615610cef57610ca6846001600160a01b0392613cee565b169182610cc05783637e27328960e01b5f5260045260245ffd5b8084918403610cd457602083604051908152f35b9091506364283d7b60e01b5f5260045260245260445260645ffd5b633250574960e11b5f525f60045260245ffd5b610d0a613e28565b855f52600a60205260ff600160405f20015460a81c1615610fe757855f52600a60205260ff600160405f20015460a01c16610fd4578415610fc157610fae57845f5260036020526001600160a01b0360405f205416908185141580610f9e575b610f83576001600160801b03610d7f87614680565b16808511610f695750610da490865f52600a602052600260405f20015460801c6146a6565b5f868152600a6020526040902060020180546001600160801b031660809290921b6001600160801b031916919091178155610dde906139ce565b6001600160801b03610e028160208401511692826040818351169201511690613611565b161115610f37575b845f52600a6020526001600160a01b03600160405f20015416610e2e848683614804565b84867f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051888152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051878152a18033141580610f21575b610e99575b80610c83565b6040516392b9102b60e01b81528560048201523360248201528460448201528360648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f91610f02575b501614610e9357632187e5e760e21b5f5260045260245ffd5b610f1b915060203d6020116104d1576104c3818361359d565b88610ee9565b50805f52600960205260ff60405f205416610e8e565b5f858152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b19169055610e0a565b848763287ecaef60e21b5f5260045260245260445260645ffd5b848663b34359d360e01b5f526004523360245260445260645ffd5b50610fa88661455b565b15610d6a565b8463d2aabcd960e01b5f5260045260245ffd5b85630ff7ee2d60e31b5f5260045260245ffd5b85634a5541ef60e01b5f5260045260245ffd5b8562b8e7e760e51b5f5260045260245ffd5b8263216caf0d60e01b5f526004523360245260445ffd5b5062b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602064ffffffffff60405f205460a01c16604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160a01b0360405f205416604051908152f35b346105bb5760203660031901126105bb576004355f52600a602052602060ff600160405f20015460a81c166040519015158152f35b346105bb5760803660031901126105bb5761110d613424565b61111561343a565b6064359167ffffffffffffffff83116105bb57366023840112156105bb57826004013591611142836135bf565b92611150604051948561359d565b80845236602482870101116105bb576020815f92602461117c9801838801378501015260443591613a21565b005b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060ff600160405f20015460b01c166040519015158152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e5761120690613c5a565b6040516005821015611219576020918152f35b634e487b7160e01b5f52602160045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160801b03600260405f20015416604051908152f35b346105bb5760403660031901126105bb57611297613424565b602435908115158092036105bb576001600160a01b031690811561130657335f52600660205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b507f5b08ba18000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346105bb575f3660031901126105bb576040515f6002548060011c90600181168015611430575b60208310811461141c578285529081156113f8575060011461139a575b610b87836113868185038261359d565b6040519182916020835260208301906133ff565b91905060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace915f905b8082106113de57509091508101602001611386611376565b9192600181602092548385880101520191019092916113c6565b60ff191660208086019190915291151560051b840190910191506113869050611376565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611359565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602064ffffffffff60405f205460c81c16604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e576114c190613c5a565b60058110158061121957600282149081156114fd575b81156114eb575b6020826040519015158152f35b905061121957600460209114826114de565b5050600381145f6114d7565b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb578036036101206003198201126105bb57611544613e28565b60c482013590602219018112156105bb5781019060048201359167ffffffffffffffff83116105bb5760248101908360061b80360383136105bb57600460209161158d87613875565b9661159b604051988961359d565b875282870193010101913683116105bb57905b8282106117ba575050508151916115c483613875565b926115d2604051948561359d565b808452601f196115e182613875565b015f5b81811061179757505064ffffffffff4216916001600160801b0361160782613b52565b51511664ffffffffff80602061161c85613b52565b510151168501166040519161163083613548565b8252602082015261164086613b52565b5261164a85613b52565b5060015b8281106117225750505061166482600401613a00565b9261167160248401613a00565b9261167e6044820161392e565b916064820135936001600160a01b0385168095036105bb5760209661171a966116da966001600160801b0361170f976001600160a01b036116c160848a01613a14565b94816116cf60a48c01613a14565b976040519d8e61352b565b168c52168c8b0152166040890152606088015215156080870152151560a086015260c085015260e084015260e43691016138c3565b610100820152613e82565b604051908152f35b806001600160801b0361173760019385613b5f565b51511664ffffffffff8060206117505f1986018c613b5f565b510151168160206117618689613b5f565b5101511601166040519161177483613548565b825260208201526117858289613b5f565b526117908188613b5f565b500161164e565b6020906040516117a681613548565b5f81525f83820152828289010152016115e4565b60206040916117c9368561388d565b8152019101906115ae565b346105bb5760203660031901126105bb5760043560606101606040516117f981613564565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f61012082015260405161183f81613581565b5f81525f60208201525f60408201526101408201520152805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260405f2060405191610140830183811067ffffffffffffffff821117611aff576040528154916001600160a01b0383168452602084019264ffffffffff8160a01c168452604085019064ffffffffff8160c81c16825285606081019260ff8360f01c1615158452608082019260f81c1515835260018501549260a08301956001600160a01b038516875261193c600260c086019260ff8860a01c161515845260ff61010060e0890198828b60a81c1615158a52019860b01c1615158852016139ce565b6101208b0190815261194d89613c5a565b600581101561121957600214611af7575b5196516001600160a01b0316925164ffffffffff169551151590511515935115159451151595885f52600360205260405f20546001600160a01b03169a516001600160a01b0316995164ffffffffff16985f52600b60205260405f2092511515926040519a6119cc8c613564565b8b5260208b019b8c5260408b01998a5260608b0191825260808b0192835260a08b0193845260c08b0194855260e08b019586526101008b019687526101208b019788526101408b01988952611a209061395a565b986101608b01998a526040519b8c9b60208d52516001600160a01b031660208d0152516001600160a01b031660408c01525164ffffffffff1660608b01525164ffffffffff1660808a015251151560a089015251151560c0880152516001600160a01b031660e08701525115156101008601525115156101208501525115156101408401525180516001600160801b031661016084015260208101516001600160801b0316610180840152604001516001600160801b03166101a0830152516101c082016101c090526101e08201610b87916134cf565b5f875261195e565b634e487b7160e01b5f52604160045260245ffd5b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb57611b4490369060040161349e565b90611b4d613e28565b5f915b808310611b5957005b611b6483828461390a565b3592611b6e613e28565b835f52600a60205260ff600160405f20015460a81c1615611eb857835f52600a60205260ff600160405f20015460a01c165f14611bb85783634a5541ef60e01b5f5260045260245ffd5b909192805f52600a60205260405f205460f81c611ea657611bed815f52600a6020526001600160a01b0360405f205416331490565b15611e9057611bfb81613b73565b90805f52600a602052611c13600260405f20016139ce565b916001600160801b038351166001600160801b0382161015611e7d57815f52600a60205260ff60405f205460f01c1615611e6a57806001600160801b03602081611c67948188511603169501511690613611565b5f828152600a6020526040902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b179055916001600160801b038316908115611e45575b825f52600a602052600360405f20016001600160801b0382166001600160801b0319825416179055825f52600a6020526001600160a01b0360405f205416835f5260036020526001600160a01b0360405f20541694845f52600a60205285827f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa50611d796001600160a01b03600160405f2001541694611d51888588614804565b604080518b81526001600160801b03808b166020830152909216908201529081906060820190565b0390a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a1845f52600960205260ff60405f205416611dca575b50505050506001019190611b50565b60405193630d4af11f60e31b855260048501526024840152604483015260648201526020816084815f865af19081156104d857630d4af11f60e31b916001600160e01b0319915f91611e27575b5016036104975780808080611dbb565b611e3f915060203d81116104d1576104c3818361359d565b87611e17565b825f52600a602052600160405f2001600160a01b60ff60a01b19825416179055611cb1565b506339c6dc7360e21b5f5260045260245ffd5b506322cad1af60e11b5f5260045260245ffd5b63216caf0d60e01b5f526004523360245260445ffd5b63fe19f19f60e01b5f5260045260245ffd5b8362b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600b602052610b87611f0f60405f2061395a565b6040519182916020835260208301906134cf565b346105bb5760203660031901126105bb57600435611f3f613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57611f6381613c5a565b60058110156112195760048103611f875750634a5541ef60e01b5f5260045260245ffd5b60038103611fa2575063fe19f19f60e01b5f5260045260245ffd5b60021461205e57611fc7815f52600a6020526001600160a01b0360405f205416331490565b15611e9057805f52600a60205260ff60405f205460f01c161561204c576020817ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7925f52600a825260405f2060ff60f01b19815416905560405190807f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a28152a1005b6339c6dc7360e21b5f5260045260245ffd5b6322cad1af60e11b5f5260045260245ffd5b346105bb5760203660031901126105bb576004356001600160a01b0381168091036105bb576001600160a01b035f541633810361214b575060085490806001600160a01b03198316176008556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a26007545f1981019081116121375760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b634e487b7160e01b5f52601160045260245ffd5b6331b339a960e21b5f526004523360245260445ffd5b346105bb5760203660031901126105bb5761217a613424565b5f546001600160a01b03811633810361214b57506001600160a01b036001600160a01b0319921691829116175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b346105bb5760203660031901126105bb576001600160a01b036121f0613424565b16801561220d575f526004602052602060405f2054604051908152f35b7f89c62b64000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b346105bb5760203660031901126105bb576020612257600435613b31565b6001600160a01b0360405191168152f35b346105bb5760203660031901126105bb57600435612284613942565b50805f52600a60205260ff600160405f20015460a81c161561062e575f908152600a6020526040908190205481519064ffffffffff60c882901c81169160a01c166122ce83613548565b825260208201526122f48251809264ffffffffff60208092828151168552015116910152565bf35b346105bb5760403660031901126105bb5760043567ffffffffffffffff81116105bb5761232790369060040161349e565b9060243567ffffffffffffffff81116105bb5761234890369060040161349e565b919092612353613e28565b82810361266c575f5b81811061236557005b61237081838561390a565b3561237c82848661390a565b355f5260036020526001600160a01b0360405f205416906123a66123a184888a61390a565b61392e565b916123af613e28565b815f52600a60205260ff600160405f20015460a81c161561101057815f52600a60205260ff600160405f20015460a01c16612659578015610998576001600160801b03831690811561098557825f5260036020526001600160a01b0360405f205416938482141580612649575b61262e576001600160801b0361243185614680565b16808411612614575061245690845f52600a602052600260405f20015460801c6146a6565b5f848152600a6020526040902060020180546001600160801b031660809290921b6001600160801b031916919091178155612490906139ce565b6001600160801b036124b48160208401511692826040818351169201511690613611565b1611156125e2575b825f52600a6020526001600160a01b03600160405f200154166124e0838383614804565b81847f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051878152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051858152a183331415806125cc575b612551575b5050505060010161235c565b604051926392b9102b60e01b84526004840152336024840152604483015260648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f916125ae575b50160361049757808080612545565b6125c6915060203d81116104d1576104c3818361359d565b8961259f565b50835f52600960205260ff60405f205416612540565b5f838152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556124bc565b838563287ecaef60e21b5f5260045260245260445260645ffd5b508263b34359d360e01b5f526004523360245260445260645ffd5b506126538461455b565b1561241c565b50634a5541ef60e01b5f5260045260245ffd5b90507faec93440000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e57610a506020916145cd565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f61270f82613c5a565b60058110156112195760020361272d575b6020906040519015158152f35b505f52600a602052602060ff60405f205460f01c16612720565b346105bb575f3660031901126105bb5760206001600160a01b0360085416604051908152f35b346105bb5760203660031901126105bb57600435612789613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c1615612906576127c88161455b565b15611e9057805f5260036020526001600160a01b0360405f2054161515806128ff575b806128e2575b6128d0577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051838152a1805f5260036020526001600160a01b0360405f2054168015908115612899575b825f52600360205260405f206001600160a01b03198154169055825f827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a45061288757005b637e27328960e01b5f5260045260245ffd5b6128b8835f52600560205260405f206001600160a01b03198154169055565b805f52600460205260405f205f19815401905561283f565b630da9b01360e01b5f5260045260245ffd5b50805f52600a60205260ff600160405f20015460b01c16156127f1565b505f6127eb565b7f817cd639000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346105bb5761117c61294236613464565b906040519261295260208561359d565b5f8452613a21565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060ff600160405f20015460a01c166040519015158152f35b346105bb5760203660031901126105bb576004356129c6613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c165f14612a0f57634a5541ef60e01b5f5260045260245ffd5b805f52600a60205260405f205460f81c611ea657612a41815f52600a6020526001600160a01b0360405f205416331490565b15611e9057612a4f81613b73565b90805f52600a602052612a67600260405f20016139ce565b916001600160801b038351166001600160801b0382161015611e7d57815f52600a60205260ff60405f205460f01c1615611e6a57806001600160801b03602081612abb948188511603169501511690613611565b5f828152600a6020526040902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b179055916001600160801b038316908115612c5c575b825f52600a602052600360405f20016001600160801b0382166001600160801b0319825416179055825f52600a6020526001600160a01b0360405f205416835f5260036020526001600160a01b0360405f20541694845f52600a60205285827f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa50612ba56001600160a01b03600160405f2001541694611d51888588614804565b0390a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a1845f52600960205260ff60405f205416612be857005b60405193630d4af11f60e31b855260048501526024840152604483015260648201526020816084815f865af19081156104d857630d4af11f60e31b916001600160e01b0319915f91612c3d5750160361049757005b612c56915060203d6020116104d1576104c3818361359d565b8461048e565b825f52600a602052600160405f2001600160a01b60ff60a01b19825416179055612b05565b346105bb5760203660031901126105bb57612c9a613424565b6001600160a01b035f541690338203612dd957806001600160a01b03913b15612dad57166040516301ffc9a760e01b81527ff8ee98d3000000000000000000000000000000000000000000000000000000006004820152602081602481855afa9081156104d8575f91612d7e575b5015612d5357805f52600960205260405f20600160ff198254161790556040519081527fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd7280160203392a2005b7f7fb843ea000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b612da0915060203d602011612da6575b612d98818361359d565b8101906138f2565b82612d08565b503d612d8e565b7f5a2b2d83000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b506331b339a960e21b5f526004523360245260445ffd5b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb5761014060031982360301126105bb57612e2a613e28565b604051612e368161352b565b612e4282600401613450565b8152612e5060248301613450565b6020820152612e61604483016135db565b604082015260648201356001600160a01b03811681036105bb576060820152612e8c6084830161351e565b6080820152612e9d60a4830161351e565b60a0820152612eae60c48301613863565b60c082015260e482013567ffffffffffffffff81116105bb57820191366023840112156105bb57600483013592612ee484613875565b90612ef2604051928361359d565b848252602060048184019660061b83010101903682116105bb57602401945b818610612f3357602061171a8661170f878760e08401526101043691016138c3565b6020604091612f42368961388d565b815201950194612f11565b346105bb5760203660031901126105bb576001600160a01b03612f6e613424565b165f526009602052602060ff60405f2054166040519015158152f35b346105bb575f3660031901126105bb5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346105bb5761117c612fd536613464565b91613631565b346105bb575f3660031901126105bb576020600754604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e5761303090613c5a565b6005811015611219578060209115908115613051575b506040519015158152f35b600191501482613046565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e576020905f90805f52600a835260ff60405f205460f01c16806130f1575b6130bf575b506001600160801b0360405191168152f35b6130eb9150805f52600a83526130e56001600160801b03600260405f2001541691613b73565b90613611565b826130ad565b50805f52600a835260ff600160405f20015460a01c16156130a8565b346105bb5760403660031901126105bb57613126613424565b60243561313281613b31565b331515806131ff575b806131cc575b6131a05781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260056020526001600160a01b0360405f2091166001600160a01b03198254161790555f80f35b7fa9fbf51f000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b506001600160a01b0381165f52600660205260405f206001600160a01b0333165f5260205260ff60405f20541615613141565b50336001600160a01b038216141561313b565b346105bb5760203660031901126105bb5760206122576004356135ef565b346105bb575f3660031901126105bb576040515f6001548060011c906001811680156132e1575b60208310811461141c578285529081156113f8575060011461328357610b87836113868185038261359d565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b8082106132c757509091508101602001611386611376565b9192600181602092548385880101520191019092916132af565b91607f1691613257565b346105bb575f3660031901126105bb57602060405167016345785d8a00008152f35b346105bb5760203660031901126105bb57600435906001600160e01b031982168092036105bb57817f490649060000000000000000000000000000000000000000000000000000000060209314908115613369575b5015158152f35b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915081156133b4575b81156133a3575b5083613362565b6301ffc9a760e01b9150148361339c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150613395565b5f5b8381106133ef5750505f910152565b81810151838201526020016133e0565b90602091613418815180928185528580860191016133de565b601f01601f1916010190565b600435906001600160a01b03821682036105bb57565b602435906001600160a01b03821682036105bb57565b35906001600160a01b03821682036105bb57565b60609060031901126105bb576004356001600160a01b03811681036105bb57906024356001600160a01b03811681036105bb579060443590565b9181601f840112156105bb5782359167ffffffffffffffff83116105bb576020808501948460051b0101116105bb57565b90602080835192838152019201905f5b8181106134ec5750505090565b825180516001600160801b0316855260209081015164ffffffffff1681860152604090940193909201916001016134df565b359081151582036105bb57565b610120810190811067ffffffffffffffff821117611aff57604052565b6040810190811067ffffffffffffffff821117611aff57604052565b610180810190811067ffffffffffffffff821117611aff57604052565b6060810190811067ffffffffffffffff821117611aff57604052565b90601f8019910116810190811067ffffffffffffffff821117611aff57604052565b67ffffffffffffffff8111611aff57601f01601f191660200190565b35906001600160801b03821682036105bb57565b6135f881613b31565b505f5260056020526001600160a01b0360405f20541690565b906001600160801b03809116911603906001600160801b03821161213757565b91906001600160a01b03168015610cef57815f5260036020526001600160a01b0360405f20541615158061385b575b8061383e575b61382b577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051848152a1815f5260036020526001600160a01b0360405f20541692823315159283613776575b6001600160a01b0393508561373f575b805f52600460205260405f2060018154019055815f52600360205260405f20816001600160a01b0319825416179055857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a41680830361372757505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b61375e825f52600560205260405f206001600160a01b03198154169055565b855f52600460205260405f205f1981540190556136c6565b91929050806137d4575b1561378d578282916136b6565b82846137a557637e27328960e01b5f5260045260245ffd5b7f177e802f000000000000000000000000000000000000000000000000000000005f523360045260245260445ffd5b503384148015613802575b806137805750825f526005602052336001600160a01b0360405f20541614613780565b50835f52600660205260405f206001600160a01b0333165f5260205260ff60405f2054166137df565b50630da9b01360e01b5f5260045260245ffd5b50815f52600a60205260ff600160405f20015460b01c1615613666565b506001613660565b359064ffffffffff821682036105bb57565b67ffffffffffffffff8111611aff5760051b60200190565b91908260409103126105bb576040516138a581613548565b60206138be8183956138b6816135db565b855201613863565b910152565b91908260409103126105bb576040516138db81613548565b60208082946138e981613450565b84520135910152565b908160209103126105bb575180151581036105bb5790565b919081101561391a5760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160801b03811681036105bb5790565b6040519061394f82613548565b5f6020838281520152565b90815461396681613875565b92613974604051948561359d565b81845260208401905f5260205f205f915b8383106139925750505050565b6001602081926040516139a481613548565b64ffffffffff86546001600160801b038116835260801c1683820152815201920192019190613985565b906040516139db81613581565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b356001600160a01b03811681036105bb5790565b3580151581036105bb5790565b90613a2d838284613631565b803b613a3a575b50505050565b602091613a806001600160a01b03809316956040519586948594630a85bd0160e11b865233600487015216602485015260448401526080606484015260848301906133ff565b03815f865af15f9181613af0575b50613abc5750613a9c614651565b80519081613ab75782633250574960e11b5f5260045260245ffd5b602001fd5b6001600160e01b0319630a85bd0160e11b911603613ade57505f808080613a34565b633250574960e11b5f5260045260245ffd5b613b0a91925060203d6020116104d1576104c3818361359d565b905f613a8e565b908160209103126105bb57516001600160e01b0319811681036105bb5790565b805f5260036020526001600160a01b0360405f205416908115612887575090565b80511561391a5760200190565b805182101561391a5760209160051b010190565b9064ffffffffff421691805f52600b602052613b9160405f2061395a565b908364ffffffffff6020613ba485613b52565b5101511611613c5357805f52600a6020528364ffffffffff60405f205460c81c161115613c3457506001600160801b03613bdd82613b52565b515116916001925b8251841015613c2d578464ffffffffff6020613c018787613b5f565b5101511611613c2d576001600160801b0360019181613c208787613b5f565b5151160116930192613be5565b9350915050565b919250505f52600a6020526001600160801b03600260405f2001541690565b505f925050565b805f52600a60205260ff600160405f20015460a01c165f14613c7c5750600490565b805f52600a60205260405f205460f81c613ce857805f52600a60205264ffffffffff60405f205460a01c164210613ce357613cb681613b73565b905f52600a6020526001600160801b0380600260405f200154169116105f14613cde57600190565b600290565b505f90565b50600390565b90805f5260036020526001600160a01b0360405f205416151580613e16575b80613df9575b6128d0577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051838152a1805f5260036020526001600160a01b038060405f2054169283613dc2575b1680613daa575b815f52600360205260405f20816001600160a01b0319825416179055827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b805f52600460205260405f2060018154019055613d66565b613de1835f52600560205260405f206001600160a01b03198154169055565b835f52600460205260405f205f198154019055613d5f565b50805f52600a60205260ff600160405f20015460b01c1615613d13565b506001600160a01b0382161515613d0d565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003613e5a57565b7fa1c0d6e5000000000000000000000000000000000000000000000000000000005f5260045ffd5b90613ea46001600160801b0360408401511660206101008501510151906146c6565b916001600160801b038351169060e08101519160c082019264ffffffffff845116821561453357801561450b57815180156144e3577f000000000000000000000000000000000000000000000000000000000000000081116144b8575064ffffffffff6020613f1284613b52565b5101511681101561447457505f905f905f81515f905b8082106143ec575050505064ffffffffff804216911690818110156143be5750506001600160801b03169081810361439057505060075493845f52600a60205260405f20916001600160801b038251166001600160801b036002850191166001600160801b03198254161790556001600160a01b03606082015116916001600160a01b036001850193166001600160a01b031984541617835560808201948551151560ff60f01b197eff00000000000000000000000000000000000000000000000000000000000087549260f01b169116178555835493750100000000000000000000000000000000000000000060a08501957fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff76ff000000000000000000000000000000000000000000008851151560b01b169116171790556001600160a01b0380845116166001600160a01b03198654161785555184549060e0840151917fffff00000000000000000000ffffffffffffffffffffffffffffffffffffffff78ffffffffff00000000000000000000000000000000000000007dffffffffff0000000000000000000000000000000000000000000000000060206140f48751975f19890190613b5f565b51015160c81b169360a01b169116171785555f5b8181106142de575050600187016007556001600160a01b036020830151168015610cef5761413e886001600160a01b0392613cee565b166142b257868261418c6001600160a01b0360607ffeb1cb9ce021c8bd5fb1eb836e6284c68866fa32d1d844238de19955238f8076960151166001600160801b0385511690309033906147a3565b6001600160801b0360208401511680614282575b506001600160a01b03815116946142776142596001600160a01b03602085015116986001600160a01b036060860151169a511515935115156001600160a01b0361010060e088015193549764ffffffffff604051996141fe8b613548565b818160a01c168b5260c81c1660208a015201515116946001600160801b0360206040519a8b9a8b5233828c01528281511660408c01520151166060890152608088015260a087015261014060c08701526101408601906134cf565b9260e085019064ffffffffff60208092828151168552015116910152565b6101208301520390a4565b6142ac906001600160a01b036060840151166001600160a01b0361010085015151169033906147a3565b5f6141a0565b7f73c6ac6e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b885f52600b60205260405f20906142f98160e0870151613b5f565b5182549268010000000000000000841015611aff576001840180825584101561391a576001936020915f52815f2001916001600160801b0380825116166001600160801b031984541617835501517fffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffff74ffffffffff0000000000000000000000000000000083549260801b16911617905501614108565b7f6375ff13000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7f210aec0e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b9193509193614410906001600160801b036144078588613b5f565b515116906146a6565b9364ffffffffff8060206144248685613b5f565b5101511694168085111561444057506001849301909291613f28565b8490847fd97494c6000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b64ffffffffff602061448584613b52565b51015116907ff1fb2cc5000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7f73627f74000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f7ea4ccdf000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fd572dbcb000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f6095d3bc000000000000000000000000000000000000000000000000000000005f5260045ffd5b805f5260036020526001600160a01b0360405f205416908133149182156145a1575b508115614588575090565b90506001600160a01b0361459c33926135ef565b161490565b9091505f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416905f61457d565b805f52600a6020526145e4600260405f20016139ce565b90805f52600a60205260ff600160405f20015460a01c165f146146125750602001516001600160801b031690565b90815f52600a60205260405f205460f81c614634575061463190613b73565b90565b61463191506001600160801b036040818351169201511690613611565b3d1561467b573d90614662826135bf565b91614670604051938461359d565b82523d5f602084013e565b606090565b6146319061468d816145cd565b905f52600a602052600260405f20015460801c90613611565b906001600160801b03809116911601906001600160801b03821161213757565b9190916040516146d581613548565b5f81525f6020820152926001600160801b0382169081156147865767016345785d8a0000811161474f576147116001600160801b0391836148d9565b166020850191818352111561473b576001600160801b03918261473692511690613611565b168252565b634e487b7160e01b5f52600160045260245ffd5b7f4fea5c1a000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b505050905060405161479781613548565b5f81525f602082015290565b9091926001600160a01b036148029481604051957f23b872dd0000000000000000000000000000000000000000000000000000000060208801521660248601521660448401526064830152606482526147fd60848361359d565b614854565b565b614802926001600160a01b03604051937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526147fd60648361359d565b5f806001600160a01b0361487d93169360208151910182865af1614876614651565b9083614987565b80519081151591826148be575b50506148935750565b7f5274afe7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6148d192506020809183010191016138f2565b155f8061488a565b9091905f198382098382029182808310920391808303921461497657670de0b6b3a7640000821015614946577faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106699394670de0b6b3a7640000910990828211900360ee1b910360121c170290565b84907f5173648d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5050670de0b6b3a764000090049150565b906149c4575080511561499c57805190602001fd5b7f1425ea42000000000000000000000000000000000000000000000000000000005f5260045ffd5b81511580614a0a575b6149d5575090565b6001600160a01b03907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b156149cd56fea164736f6c634300081a000a",
    "sourceMap": "3726:10045:86:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;3726:10045:86;;;;460:4:89;441:24;;3726:10045:86;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;1470:17:9;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;1470:17:9;3726:10045:86;;-1:-1:-1;3726:10045:86;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;2665:36:90;3726:10045:86;;;;;;;;;;;;;;;;2716:63:90;-1:-1:-1;;2716:63:90;5184:35:86;;3726:10045;5229:16;3726:10045;;;;;;;441:24:89;3726:10045:86;;;;;5184:35;3726:10045;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;1470:17:9;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;1470:17:9;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1470:17:9;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;3726:10045:86;;;;;;-1:-1:-1;3726:10045:86;;;;;;;-1:-1:-1;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;-1:-1:-1;3726:10045:86;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;-1:-1:-1;;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461330d57508063027b6744146132eb57806306fdde0314613230578063081812fc14613212578063095ea7b31461310d5780631400ecec1461305c5780631c1cdd4c14612ff85780631e99d56914612fdb57806323b872dd14612fc45780632fe4304114612f8a578063303acc8514612f4d57806332fbe22b14612df0578063406887cb14612c8157806340e58ee5146129aa578063425d30dd1461295a57806342842e0e1461293157806342966c681461276d57806344267570146127475780634857501f146126d65780634869e12d1461269c5780634cc55e11146122f657806357404b12146122685780636352211e146122395780636d0cee751461223957806370a08231146121cf57806375829def146121615780637cad6cd1146120705780637de6b1db14611f235780637f5799f914611eca5780638659c27014611b13578063894e9a0d146117d4578063897f362b146115095780638f69b993146114895780639067b6771461143a57806395d89b4114611332578063a22cb4651461127e578063a80fc0711461122d578063ad35efd4146111ce578063b25645691461117e578063b88d4fde146110f4578063b8a3be66146110bf578063b971302a14611071578063bc2be1be14611022578063c156a11d14610c08578063c87b56dd14610afd578063d4dbd20b14610aac578063d511609f14610a61578063d975dfed14610a16578063e985e9c5146109bd578063ea5ead1914610690578063eac8f5b81461063f578063f590c176146105e4578063f851a440146105bf5763fdd46d601461026e575f80fd5b346105bb5760603660031901126105bb5760043561028a61343a565b90604435916001600160801b038316908184036105bb576102a9613e28565b825f52600a60205260ff600160405f20015460a81c16156105a957825f52600a60205260ff600160405f20015460a01c16610596576001600160a01b03811690811561058357821561057057835f5260036020526001600160a01b0360405f205416948583141580610560575b610545576001600160801b0361032b86614680565b1680851161052b575061035090855f52600a602052600260405f20015460801c6146a6565b5f858152600a6020526040902060020180546001600160801b031660809290921b6001600160801b03191691909117815561038a906139ce565b6001600160801b036103ae8160208401511692826040818351169201511690613611565b1611156104f9575b835f52600a6020526103da836001600160a01b03600160405f200154169283614804565b81847f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051878152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051858152a183331415806104e3575b61044057005b604051926392b9102b60e01b84526004840152336024840152604483015260648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f916104a9575b50160361049757005b632187e5e760e21b5f5260045260245ffd5b6104cb915060203d6020116104d1575b6104c3818361359d565b810190613b11565b5f61048e565b503d6104b9565b6040513d5f823e3d90fd5b50835f52600960205260ff60405f20541661043a565b5f848152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556103b6565b848663287ecaef60e21b5f5260045260245260445260645ffd5b828563b34359d360e01b5f526004523360245260445260645ffd5b5061056a8561455b565b15610316565b8363d2aabcd960e01b5f5260045260245ffd5b83630ff7ee2d60e31b5f5260045260245ffd5b82634a5541ef60e01b5f5260045260245ffd5b8262b8e7e760e51b5f5260045260245ffd5b5f80fd5b346105bb575f3660031901126105bb5760206001600160a01b035f5416604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060405f205460f81c6040519015158152f35b62b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160a01b03600160405f20015416604051908152f35b346105bb5760403660031901126105bb576004356106ac61343a565b6106b582614680565b916106be613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c166109ab576001600160a01b0382168015610998576001600160801b03841692831561098557825f5260036020526001600160a01b0360405f205416948583141580610975575b61095a576001600160801b0361074a85614680565b16808611610940575061076f90845f52600a602052600260405f20015460801c6146a6565b5f848152600a6020526040902060020180546001600160801b031660809290921b6001600160801b0319169190911781556107a9906139ce565b6001600160801b036107cd8160208401511692826040818351169201511690613611565b16111561090e575b825f52600a6020526107f9846001600160a01b03600160405f200154169283614804565b81837f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051888152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051848152a183331415806108f8575b610869575b602083604051908152f35b604051916392b9102b60e01b8352600483015233602483015260448201528160648201526020816084815f875af19081156104d8576392b9102b60e01b916001600160e01b0319915f916108d9575b5016036108c657818061085e565b50632187e5e760e21b5f5260045260245ffd5b6108f2915060203d6020116104d1576104c3818361359d565b856108b8565b50835f52600960205260ff60405f205416610859565b5f838152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556107d5565b858563287ecaef60e21b5f5260045260245260445260645ffd5b828463b34359d360e01b5f526004523360245260445260645ffd5b5061097f8461455b565b15610735565b8263d2aabcd960e01b5f5260045260245ffd5b50630ff7ee2d60e31b5f5260045260245ffd5b634a5541ef60e01b5f5260045260245ffd5b346105bb5760403660031901126105bb576109d6613424565b6001600160a01b036109e661343a565b91165f5260066020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e57610a50602091614680565b6001600160801b0360405191168152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a6020526020600260405f20015460801c604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160801b03600360405f20015416604051908152f35b346105bb5760203660031901126105bb57600435610b1a81613b31565b505f6001600160a01b0360085416916044604051809481937fe9dc637500000000000000000000000000000000000000000000000000000000835230600484015260248301525afa80156104d8575f90610b8b575b610b87906040519182916020835260208301906133ff565b0390f35b503d805f833e610b9b818361359d565b8101906020818303126105bb5780519067ffffffffffffffff82116105bb57019080601f830112156105bb57815191610bd3836135bf565b91610be1604051938461359d565b838352602084830101116105bb57610b8792610c0391602080850191016133de565b610b6f565b346105bb5760403660031901126105bb57600435610c2461343a565b610c2c613e28565b815f52600a60205260ff600160405f20015460a81c161561101057815f5260036020526001600160a01b0360405f20541690813303610ff957610c6e83614680565b906001600160801b0382169182158015610d02575b50506001600160a01b03811615610cef57610ca6846001600160a01b0392613cee565b169182610cc05783637e27328960e01b5f5260045260245ffd5b8084918403610cd457602083604051908152f35b9091506364283d7b60e01b5f5260045260245260445260645ffd5b633250574960e11b5f525f60045260245ffd5b610d0a613e28565b855f52600a60205260ff600160405f20015460a81c1615610fe757855f52600a60205260ff600160405f20015460a01c16610fd4578415610fc157610fae57845f5260036020526001600160a01b0360405f205416908185141580610f9e575b610f83576001600160801b03610d7f87614680565b16808511610f695750610da490865f52600a602052600260405f20015460801c6146a6565b5f868152600a6020526040902060020180546001600160801b031660809290921b6001600160801b031916919091178155610dde906139ce565b6001600160801b03610e028160208401511692826040818351169201511690613611565b161115610f37575b845f52600a6020526001600160a01b03600160405f20015416610e2e848683614804565b84867f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051888152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051878152a18033141580610f21575b610e99575b80610c83565b6040516392b9102b60e01b81528560048201523360248201528460448201528360648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f91610f02575b501614610e9357632187e5e760e21b5f5260045260245ffd5b610f1b915060203d6020116104d1576104c3818361359d565b88610ee9565b50805f52600960205260ff60405f205416610e8e565b5f858152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b19169055610e0a565b848763287ecaef60e21b5f5260045260245260445260645ffd5b848663b34359d360e01b5f526004523360245260445260645ffd5b50610fa88661455b565b15610d6a565b8463d2aabcd960e01b5f5260045260245ffd5b85630ff7ee2d60e31b5f5260045260245ffd5b85634a5541ef60e01b5f5260045260245ffd5b8562b8e7e760e51b5f5260045260245ffd5b8263216caf0d60e01b5f526004523360245260445ffd5b5062b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602064ffffffffff60405f205460a01c16604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160a01b0360405f205416604051908152f35b346105bb5760203660031901126105bb576004355f52600a602052602060ff600160405f20015460a81c166040519015158152f35b346105bb5760803660031901126105bb5761110d613424565b61111561343a565b6064359167ffffffffffffffff83116105bb57366023840112156105bb57826004013591611142836135bf565b92611150604051948561359d565b80845236602482870101116105bb576020815f92602461117c9801838801378501015260443591613a21565b005b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060ff600160405f20015460b01c166040519015158152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e5761120690613c5a565b6040516005821015611219576020918152f35b634e487b7160e01b5f52602160045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a60205260206001600160801b03600260405f20015416604051908152f35b346105bb5760403660031901126105bb57611297613424565b602435908115158092036105bb576001600160a01b031690811561130657335f52600660205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b507f5b08ba18000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346105bb575f3660031901126105bb576040515f6002548060011c90600181168015611430575b60208310811461141c578285529081156113f8575060011461139a575b610b87836113868185038261359d565b6040519182916020835260208301906133ff565b91905060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace915f905b8082106113de57509091508101602001611386611376565b9192600181602092548385880101520191019092916113c6565b60ff191660208086019190915291151560051b840190910191506113869050611376565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611359565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602064ffffffffff60405f205460c81c16604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e576114c190613c5a565b60058110158061121957600282149081156114fd575b81156114eb575b6020826040519015158152f35b905061121957600460209114826114de565b5050600381145f6114d7565b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb578036036101206003198201126105bb57611544613e28565b60c482013590602219018112156105bb5781019060048201359167ffffffffffffffff83116105bb5760248101908360061b80360383136105bb57600460209161158d87613875565b9661159b604051988961359d565b875282870193010101913683116105bb57905b8282106117ba575050508151916115c483613875565b926115d2604051948561359d565b808452601f196115e182613875565b015f5b81811061179757505064ffffffffff4216916001600160801b0361160782613b52565b51511664ffffffffff80602061161c85613b52565b510151168501166040519161163083613548565b8252602082015261164086613b52565b5261164a85613b52565b5060015b8281106117225750505061166482600401613a00565b9261167160248401613a00565b9261167e6044820161392e565b916064820135936001600160a01b0385168095036105bb5760209661171a966116da966001600160801b0361170f976001600160a01b036116c160848a01613a14565b94816116cf60a48c01613a14565b976040519d8e61352b565b168c52168c8b0152166040890152606088015215156080870152151560a086015260c085015260e084015260e43691016138c3565b610100820152613e82565b604051908152f35b806001600160801b0361173760019385613b5f565b51511664ffffffffff8060206117505f1986018c613b5f565b510151168160206117618689613b5f565b5101511601166040519161177483613548565b825260208201526117858289613b5f565b526117908188613b5f565b500161164e565b6020906040516117a681613548565b5f81525f83820152828289010152016115e4565b60206040916117c9368561388d565b8152019101906115ae565b346105bb5760203660031901126105bb5760043560606101606040516117f981613564565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f61012082015260405161183f81613581565b5f81525f60208201525f60408201526101408201520152805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260405f2060405191610140830183811067ffffffffffffffff821117611aff576040528154916001600160a01b0383168452602084019264ffffffffff8160a01c168452604085019064ffffffffff8160c81c16825285606081019260ff8360f01c1615158452608082019260f81c1515835260018501549260a08301956001600160a01b038516875261193c600260c086019260ff8860a01c161515845260ff61010060e0890198828b60a81c1615158a52019860b01c1615158852016139ce565b6101208b0190815261194d89613c5a565b600581101561121957600214611af7575b5196516001600160a01b0316925164ffffffffff169551151590511515935115159451151595885f52600360205260405f20546001600160a01b03169a516001600160a01b0316995164ffffffffff16985f52600b60205260405f2092511515926040519a6119cc8c613564565b8b5260208b019b8c5260408b01998a5260608b0191825260808b0192835260a08b0193845260c08b0194855260e08b019586526101008b019687526101208b019788526101408b01988952611a209061395a565b986101608b01998a526040519b8c9b60208d52516001600160a01b031660208d0152516001600160a01b031660408c01525164ffffffffff1660608b01525164ffffffffff1660808a015251151560a089015251151560c0880152516001600160a01b031660e08701525115156101008601525115156101208501525115156101408401525180516001600160801b031661016084015260208101516001600160801b0316610180840152604001516001600160801b03166101a0830152516101c082016101c090526101e08201610b87916134cf565b5f875261195e565b634e487b7160e01b5f52604160045260245ffd5b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb57611b4490369060040161349e565b90611b4d613e28565b5f915b808310611b5957005b611b6483828461390a565b3592611b6e613e28565b835f52600a60205260ff600160405f20015460a81c1615611eb857835f52600a60205260ff600160405f20015460a01c165f14611bb85783634a5541ef60e01b5f5260045260245ffd5b909192805f52600a60205260405f205460f81c611ea657611bed815f52600a6020526001600160a01b0360405f205416331490565b15611e9057611bfb81613b73565b90805f52600a602052611c13600260405f20016139ce565b916001600160801b038351166001600160801b0382161015611e7d57815f52600a60205260ff60405f205460f01c1615611e6a57806001600160801b03602081611c67948188511603169501511690613611565b5f828152600a6020526040902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b179055916001600160801b038316908115611e45575b825f52600a602052600360405f20016001600160801b0382166001600160801b0319825416179055825f52600a6020526001600160a01b0360405f205416835f5260036020526001600160a01b0360405f20541694845f52600a60205285827f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa50611d796001600160a01b03600160405f2001541694611d51888588614804565b604080518b81526001600160801b03808b166020830152909216908201529081906060820190565b0390a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a1845f52600960205260ff60405f205416611dca575b50505050506001019190611b50565b60405193630d4af11f60e31b855260048501526024840152604483015260648201526020816084815f865af19081156104d857630d4af11f60e31b916001600160e01b0319915f91611e27575b5016036104975780808080611dbb565b611e3f915060203d81116104d1576104c3818361359d565b87611e17565b825f52600a602052600160405f2001600160a01b60ff60a01b19825416179055611cb1565b506339c6dc7360e21b5f5260045260245ffd5b506322cad1af60e11b5f5260045260245ffd5b63216caf0d60e01b5f526004523360245260445ffd5b63fe19f19f60e01b5f5260045260245ffd5b8362b8e7e760e51b5f5260045260245ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600b602052610b87611f0f60405f2061395a565b6040519182916020835260208301906134cf565b346105bb5760203660031901126105bb57600435611f3f613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57611f6381613c5a565b60058110156112195760048103611f875750634a5541ef60e01b5f5260045260245ffd5b60038103611fa2575063fe19f19f60e01b5f5260045260245ffd5b60021461205e57611fc7815f52600a6020526001600160a01b0360405f205416331490565b15611e9057805f52600a60205260ff60405f205460f01c161561204c576020817ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7925f52600a825260405f2060ff60f01b19815416905560405190807f0eb069207093cd3e51cd1370d2d369770057fbe29947e577e5fb428c6c6fc78f5f80a28152a1005b6339c6dc7360e21b5f5260045260245ffd5b6322cad1af60e11b5f5260045260245ffd5b346105bb5760203660031901126105bb576004356001600160a01b0381168091036105bb576001600160a01b035f541633810361214b575060085490806001600160a01b03198316176008556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a26007545f1981019081116121375760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b634e487b7160e01b5f52601160045260245ffd5b6331b339a960e21b5f526004523360245260445ffd5b346105bb5760203660031901126105bb5761217a613424565b5f546001600160a01b03811633810361214b57506001600160a01b036001600160a01b0319921691829116175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b346105bb5760203660031901126105bb576001600160a01b036121f0613424565b16801561220d575f526004602052602060405f2054604051908152f35b7f89c62b64000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b346105bb5760203660031901126105bb576020612257600435613b31565b6001600160a01b0360405191168152f35b346105bb5760203660031901126105bb57600435612284613942565b50805f52600a60205260ff600160405f20015460a81c161561062e575f908152600a6020526040908190205481519064ffffffffff60c882901c81169160a01c166122ce83613548565b825260208201526122f48251809264ffffffffff60208092828151168552015116910152565bf35b346105bb5760403660031901126105bb5760043567ffffffffffffffff81116105bb5761232790369060040161349e565b9060243567ffffffffffffffff81116105bb5761234890369060040161349e565b919092612353613e28565b82810361266c575f5b81811061236557005b61237081838561390a565b3561237c82848661390a565b355f5260036020526001600160a01b0360405f205416906123a66123a184888a61390a565b61392e565b916123af613e28565b815f52600a60205260ff600160405f20015460a81c161561101057815f52600a60205260ff600160405f20015460a01c16612659578015610998576001600160801b03831690811561098557825f5260036020526001600160a01b0360405f205416938482141580612649575b61262e576001600160801b0361243185614680565b16808411612614575061245690845f52600a602052600260405f20015460801c6146a6565b5f848152600a6020526040902060020180546001600160801b031660809290921b6001600160801b031916919091178155612490906139ce565b6001600160801b036124b48160208401511692826040818351169201511690613611565b1611156125e2575b825f52600a6020526001600160a01b03600160405f200154166124e0838383614804565b81847f40b88e5c41c5a97ffb7b6ef88a0a2d505aa0c634cf8a0275cb236ea7dd87ed4d6020604051878152a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051858152a183331415806125cc575b612551575b5050505060010161235c565b604051926392b9102b60e01b84526004840152336024840152604483015260648201526020816084815f865af19081156104d8576392b9102b60e01b916001600160e01b0319915f916125ae575b50160361049757808080612545565b6125c6915060203d81116104d1576104c3818361359d565b8961259f565b50835f52600960205260ff60405f205416612540565b5f838152600a6020526040902060018101805460ff60a01b1916600160a01b179055805460ff60f01b191690556124bc565b838563287ecaef60e21b5f5260045260245260445260645ffd5b508263b34359d360e01b5f526004523360245260445260645ffd5b506126538461455b565b1561241c565b50634a5541ef60e01b5f5260045260245ffd5b90507faec93440000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e57610a506020916145cd565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f61270f82613c5a565b60058110156112195760020361272d575b6020906040519015158152f35b505f52600a602052602060ff60405f205460f01c16612720565b346105bb575f3660031901126105bb5760206001600160a01b0360085416604051908152f35b346105bb5760203660031901126105bb57600435612789613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c1615612906576127c88161455b565b15611e9057805f5260036020526001600160a01b0360405f2054161515806128ff575b806128e2575b6128d0577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051838152a1805f5260036020526001600160a01b0360405f2054168015908115612899575b825f52600360205260405f206001600160a01b03198154169055825f827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a45061288757005b637e27328960e01b5f5260045260245ffd5b6128b8835f52600560205260405f206001600160a01b03198154169055565b805f52600460205260405f205f19815401905561283f565b630da9b01360e01b5f5260045260245ffd5b50805f52600a60205260ff600160405f20015460b01c16156127f1565b505f6127eb565b7f817cd639000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346105bb5761117c61294236613464565b906040519261295260208561359d565b5f8452613a21565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e575f52600a602052602060ff600160405f20015460a01c166040519015158152f35b346105bb5760203660031901126105bb576004356129c6613e28565b805f52600a60205260ff600160405f20015460a81c161561062e57805f52600a60205260ff600160405f20015460a01c165f14612a0f57634a5541ef60e01b5f5260045260245ffd5b805f52600a60205260405f205460f81c611ea657612a41815f52600a6020526001600160a01b0360405f205416331490565b15611e9057612a4f81613b73565b90805f52600a602052612a67600260405f20016139ce565b916001600160801b038351166001600160801b0382161015611e7d57815f52600a60205260ff60405f205460f01c1615611e6a57806001600160801b03602081612abb948188511603169501511690613611565b5f828152600a6020526040902080547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16600160f81b179055916001600160801b038316908115612c5c575b825f52600a602052600360405f20016001600160801b0382166001600160801b0319825416179055825f52600a6020526001600160a01b0360405f205416835f5260036020526001600160a01b0360405f20541694845f52600a60205285827f5edb27d6c1a327513b90a792050debf074b7194444885e3144d4decc5caaaa50612ba56001600160a01b03600160405f2001541694611d51888588614804565b0390a47ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051868152a1845f52600960205260ff60405f205416612be857005b60405193630d4af11f60e31b855260048501526024840152604483015260648201526020816084815f865af19081156104d857630d4af11f60e31b916001600160e01b0319915f91612c3d5750160361049757005b612c56915060203d6020116104d1576104c3818361359d565b8461048e565b825f52600a602052600160405f2001600160a01b60ff60a01b19825416179055612b05565b346105bb5760203660031901126105bb57612c9a613424565b6001600160a01b035f541690338203612dd957806001600160a01b03913b15612dad57166040516301ffc9a760e01b81527ff8ee98d3000000000000000000000000000000000000000000000000000000006004820152602081602481855afa9081156104d8575f91612d7e575b5015612d5357805f52600960205260405f20600160ff198254161790556040519081527fb4378d4e289cb3f40f4f75a99c9cafa76e3df1c4dc31309babc23dc91bd7280160203392a2005b7f7fb843ea000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b612da0915060203d602011612da6575b612d98818361359d565b8101906138f2565b82612d08565b503d612d8e565b7f5a2b2d83000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b506331b339a960e21b5f526004523360245260445ffd5b346105bb5760203660031901126105bb5760043567ffffffffffffffff81116105bb5761014060031982360301126105bb57612e2a613e28565b604051612e368161352b565b612e4282600401613450565b8152612e5060248301613450565b6020820152612e61604483016135db565b604082015260648201356001600160a01b03811681036105bb576060820152612e8c6084830161351e565b6080820152612e9d60a4830161351e565b60a0820152612eae60c48301613863565b60c082015260e482013567ffffffffffffffff81116105bb57820191366023840112156105bb57600483013592612ee484613875565b90612ef2604051928361359d565b848252602060048184019660061b83010101903682116105bb57602401945b818610612f3357602061171a8661170f878760e08401526101043691016138c3565b6020604091612f42368961388d565b815201950194612f11565b346105bb5760203660031901126105bb576001600160a01b03612f6e613424565b165f526009602052602060ff60405f2054166040519015158152f35b346105bb575f3660031901126105bb5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b346105bb5761117c612fd536613464565b91613631565b346105bb575f3660031901126105bb576020600754604051908152f35b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e5761303090613c5a565b6005811015611219578060209115908115613051575b506040519015158152f35b600191501482613046565b346105bb5760203660031901126105bb57600435805f52600a60205260ff600160405f20015460a81c161561062e576020905f90805f52600a835260ff60405f205460f01c16806130f1575b6130bf575b506001600160801b0360405191168152f35b6130eb9150805f52600a83526130e56001600160801b03600260405f2001541691613b73565b90613611565b826130ad565b50805f52600a835260ff600160405f20015460a01c16156130a8565b346105bb5760403660031901126105bb57613126613424565b60243561313281613b31565b331515806131ff575b806131cc575b6131a05781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260056020526001600160a01b0360405f2091166001600160a01b03198254161790555f80f35b7fa9fbf51f000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b506001600160a01b0381165f52600660205260405f206001600160a01b0333165f5260205260ff60405f20541615613141565b50336001600160a01b038216141561313b565b346105bb5760203660031901126105bb5760206122576004356135ef565b346105bb575f3660031901126105bb576040515f6001548060011c906001811680156132e1575b60208310811461141c578285529081156113f8575060011461328357610b87836113868185038261359d565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b8082106132c757509091508101602001611386611376565b9192600181602092548385880101520191019092916132af565b91607f1691613257565b346105bb575f3660031901126105bb57602060405167016345785d8a00008152f35b346105bb5760203660031901126105bb57600435906001600160e01b031982168092036105bb57817f490649060000000000000000000000000000000000000000000000000000000060209314908115613369575b5015158152f35b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915081156133b4575b81156133a3575b5083613362565b6301ffc9a760e01b9150148361339c565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150613395565b5f5b8381106133ef5750505f910152565b81810151838201526020016133e0565b90602091613418815180928185528580860191016133de565b601f01601f1916010190565b600435906001600160a01b03821682036105bb57565b602435906001600160a01b03821682036105bb57565b35906001600160a01b03821682036105bb57565b60609060031901126105bb576004356001600160a01b03811681036105bb57906024356001600160a01b03811681036105bb579060443590565b9181601f840112156105bb5782359167ffffffffffffffff83116105bb576020808501948460051b0101116105bb57565b90602080835192838152019201905f5b8181106134ec5750505090565b825180516001600160801b0316855260209081015164ffffffffff1681860152604090940193909201916001016134df565b359081151582036105bb57565b610120810190811067ffffffffffffffff821117611aff57604052565b6040810190811067ffffffffffffffff821117611aff57604052565b610180810190811067ffffffffffffffff821117611aff57604052565b6060810190811067ffffffffffffffff821117611aff57604052565b90601f8019910116810190811067ffffffffffffffff821117611aff57604052565b67ffffffffffffffff8111611aff57601f01601f191660200190565b35906001600160801b03821682036105bb57565b6135f881613b31565b505f5260056020526001600160a01b0360405f20541690565b906001600160801b03809116911603906001600160801b03821161213757565b91906001600160a01b03168015610cef57815f5260036020526001600160a01b0360405f20541615158061385b575b8061383e575b61382b577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051848152a1815f5260036020526001600160a01b0360405f20541692823315159283613776575b6001600160a01b0393508561373f575b805f52600460205260405f2060018154019055815f52600360205260405f20816001600160a01b0319825416179055857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a41680830361372757505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b61375e825f52600560205260405f206001600160a01b03198154169055565b855f52600460205260405f205f1981540190556136c6565b91929050806137d4575b1561378d578282916136b6565b82846137a557637e27328960e01b5f5260045260245ffd5b7f177e802f000000000000000000000000000000000000000000000000000000005f523360045260245260445ffd5b503384148015613802575b806137805750825f526005602052336001600160a01b0360405f20541614613780565b50835f52600660205260405f206001600160a01b0333165f5260205260ff60405f2054166137df565b50630da9b01360e01b5f5260045260245ffd5b50815f52600a60205260ff600160405f20015460b01c1615613666565b506001613660565b359064ffffffffff821682036105bb57565b67ffffffffffffffff8111611aff5760051b60200190565b91908260409103126105bb576040516138a581613548565b60206138be8183956138b6816135db565b855201613863565b910152565b91908260409103126105bb576040516138db81613548565b60208082946138e981613450565b84520135910152565b908160209103126105bb575180151581036105bb5790565b919081101561391a5760051b0190565b634e487b7160e01b5f52603260045260245ffd5b356001600160801b03811681036105bb5790565b6040519061394f82613548565b5f6020838281520152565b90815461396681613875565b92613974604051948561359d565b81845260208401905f5260205f205f915b8383106139925750505050565b6001602081926040516139a481613548565b64ffffffffff86546001600160801b038116835260801c1683820152815201920192019190613985565b906040516139db81613581565b60406001600160801b03600183958054838116865260801c6020860152015416910152565b356001600160a01b03811681036105bb5790565b3580151581036105bb5790565b90613a2d838284613631565b803b613a3a575b50505050565b602091613a806001600160a01b03809316956040519586948594630a85bd0160e11b865233600487015216602485015260448401526080606484015260848301906133ff565b03815f865af15f9181613af0575b50613abc5750613a9c614651565b80519081613ab75782633250574960e11b5f5260045260245ffd5b602001fd5b6001600160e01b0319630a85bd0160e11b911603613ade57505f808080613a34565b633250574960e11b5f5260045260245ffd5b613b0a91925060203d6020116104d1576104c3818361359d565b905f613a8e565b908160209103126105bb57516001600160e01b0319811681036105bb5790565b805f5260036020526001600160a01b0360405f205416908115612887575090565b80511561391a5760200190565b805182101561391a5760209160051b010190565b9064ffffffffff421691805f52600b602052613b9160405f2061395a565b908364ffffffffff6020613ba485613b52565b5101511611613c5357805f52600a6020528364ffffffffff60405f205460c81c161115613c3457506001600160801b03613bdd82613b52565b515116916001925b8251841015613c2d578464ffffffffff6020613c018787613b5f565b5101511611613c2d576001600160801b0360019181613c208787613b5f565b5151160116930192613be5565b9350915050565b919250505f52600a6020526001600160801b03600260405f2001541690565b505f925050565b805f52600a60205260ff600160405f20015460a01c165f14613c7c5750600490565b805f52600a60205260405f205460f81c613ce857805f52600a60205264ffffffffff60405f205460a01c164210613ce357613cb681613b73565b905f52600a6020526001600160801b0380600260405f200154169116105f14613cde57600190565b600290565b505f90565b50600390565b90805f5260036020526001600160a01b0360405f205416151580613e16575b80613df9575b6128d0577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020604051838152a1805f5260036020526001600160a01b038060405f2054169283613dc2575b1680613daa575b815f52600360205260405f20816001600160a01b0319825416179055827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b805f52600460205260405f2060018154019055613d66565b613de1835f52600560205260405f206001600160a01b03198154169055565b835f52600460205260405f205f198154019055613d5f565b50805f52600a60205260ff600160405f20015460b01c1615613d13565b506001600160a01b0382161515613d0d565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003613e5a57565b7fa1c0d6e5000000000000000000000000000000000000000000000000000000005f5260045ffd5b90613ea46001600160801b0360408401511660206101008501510151906146c6565b916001600160801b038351169060e08101519160c082019264ffffffffff845116821561453357801561450b57815180156144e3577f000000000000000000000000000000000000000000000000000000000000000081116144b8575064ffffffffff6020613f1284613b52565b5101511681101561447457505f905f905f81515f905b8082106143ec575050505064ffffffffff804216911690818110156143be5750506001600160801b03169081810361439057505060075493845f52600a60205260405f20916001600160801b038251166001600160801b036002850191166001600160801b03198254161790556001600160a01b03606082015116916001600160a01b036001850193166001600160a01b031984541617835560808201948551151560ff60f01b197eff00000000000000000000000000000000000000000000000000000000000087549260f01b169116178555835493750100000000000000000000000000000000000000000060a08501957fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff76ff000000000000000000000000000000000000000000008851151560b01b169116171790556001600160a01b0380845116166001600160a01b03198654161785555184549060e0840151917fffff00000000000000000000ffffffffffffffffffffffffffffffffffffffff78ffffffffff00000000000000000000000000000000000000007dffffffffff0000000000000000000000000000000000000000000000000060206140f48751975f19890190613b5f565b51015160c81b169360a01b169116171785555f5b8181106142de575050600187016007556001600160a01b036020830151168015610cef5761413e886001600160a01b0392613cee565b166142b257868261418c6001600160a01b0360607ffeb1cb9ce021c8bd5fb1eb836e6284c68866fa32d1d844238de19955238f8076960151166001600160801b0385511690309033906147a3565b6001600160801b0360208401511680614282575b506001600160a01b03815116946142776142596001600160a01b03602085015116986001600160a01b036060860151169a511515935115156001600160a01b0361010060e088015193549764ffffffffff604051996141fe8b613548565b818160a01c168b5260c81c1660208a015201515116946001600160801b0360206040519a8b9a8b5233828c01528281511660408c01520151166060890152608088015260a087015261014060c08701526101408601906134cf565b9260e085019064ffffffffff60208092828151168552015116910152565b6101208301520390a4565b6142ac906001600160a01b036060840151166001600160a01b0361010085015151169033906147a3565b5f6141a0565b7f73c6ac6e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b885f52600b60205260405f20906142f98160e0870151613b5f565b5182549268010000000000000000841015611aff576001840180825584101561391a576001936020915f52815f2001916001600160801b0380825116166001600160801b031984541617835501517fffffffffffffffffffffff0000000000ffffffffffffffffffffffffffffffff74ffffffffff0000000000000000000000000000000083549260801b16911617905501614108565b7f6375ff13000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7f210aec0e000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b9193509193614410906001600160801b036144078588613b5f565b515116906146a6565b9364ffffffffff8060206144248685613b5f565b5101511694168085111561444057506001849301909291613f28565b8490847fd97494c6000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b64ffffffffff602061448584613b52565b51015116907ff1fb2cc5000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b7f73627f74000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f7ea4ccdf000000000000000000000000000000000000000000000000000000005f5260045ffd5b7fd572dbcb000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f6095d3bc000000000000000000000000000000000000000000000000000000005f5260045ffd5b805f5260036020526001600160a01b0360405f205416908133149182156145a1575b508115614588575090565b90506001600160a01b0361459c33926135ef565b161490565b9091505f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416905f61457d565b805f52600a6020526145e4600260405f20016139ce565b90805f52600a60205260ff600160405f20015460a01c165f146146125750602001516001600160801b031690565b90815f52600a60205260405f205460f81c614634575061463190613b73565b90565b61463191506001600160801b036040818351169201511690613611565b3d1561467b573d90614662826135bf565b91614670604051938461359d565b82523d5f602084013e565b606090565b6146319061468d816145cd565b905f52600a602052600260405f20015460801c90613611565b906001600160801b03809116911601906001600160801b03821161213757565b9190916040516146d581613548565b5f81525f6020820152926001600160801b0382169081156147865767016345785d8a0000811161474f576147116001600160801b0391836148d9565b166020850191818352111561473b576001600160801b03918261473692511690613611565b168252565b634e487b7160e01b5f52600160045260245ffd5b7f4fea5c1a000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b505050905060405161479781613548565b5f81525f602082015290565b9091926001600160a01b036148029481604051957f23b872dd0000000000000000000000000000000000000000000000000000000060208801521660248601521660448401526064830152606482526147fd60848361359d565b614854565b565b614802926001600160a01b03604051937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526147fd60648361359d565b5f806001600160a01b0361487d93169360208151910182865af1614876614651565b9083614987565b80519081151591826148be575b50506148935750565b7f5274afe7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6148d192506020809183010191016138f2565b155f8061488a565b9091905f198382098382029182808310920391808303921461497657670de0b6b3a7640000821015614946577faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106699394670de0b6b3a7640000910990828211900360ee1b910360121c170290565b84907f5173648d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5050670de0b6b3a764000090049150565b906149c4575080511561499c57805190602001fd5b7f1425ea42000000000000000000000000000000000000000000000000000000005f5260045ffd5b81511580614a0a575b6149d5575090565b6001600160a01b03907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b156149cd56fea164736f6c634300081a000a",
    "sourceMap": "3726:10045:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;14295:29:90;3726:10045:86;;;;14291:114:90;;-1:-1:-1;;;;;3726:10045:86;;14473:16:90;;;14469:108;;14642:11;;14638:100;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;15003:15:90;;;;;:64;;;3726:10045:86;14999:180:90;;-1:-1:-1;;;;;15301:31:90;;;:::i;:::-;3726:10045:86;15346:27:90;;;15342:134;;3726:10045:86;26344:45:90;3726:10045:86;;;;3123:8:90;3726:10045:86;;26344:26:90;3726:10045:86;;;26344:26:90;3726:10045:86;;;26344:45:90;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;26344:26:90;26305;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26729:36:90;26708:17;3726:10045:86;26708:17:90;;3726:10045:86;;;;;;;;;26749:16:90;;3726:10045:86;;26729:36:90;;:::i;:::-;3726:10045:86;-1:-1:-1;26708:57:90;26704:339;;3726:10045:86;;;;3123:8:90;3726:10045:86;;27207:45:90;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;;;27119:24:90;3726:10045:86;;27207:45:90;;;:::i;:::-;3726:10045:86;;27299:70:90;3726:10045:86;;;;;;27299:70:90;15667:38;3726:10045:86;;;;;;15667:38:90;15834:10;;:23;;:52;;;3726:10045:86;15830:558:90;;3726:10045:86;15830:558:90;3726:10045:86;;15920:202:90;-1:-1:-1;;;15920:202:90;;3726:10045:86;15920:202:90;;3726:10045:86;15834:10:90;3726:10045:86;;;;;;;;;;;;;15920:202:90;;;3726:10045:86;15920:202:90;;;;;;;;-1:-1:-1;;;15920:202:90;-1:-1:-1;;;;;;15920:202:90;3726:10045:86;15920:202:90;;;15830:558;3726:10045:86;;16215:68:90;16211:167;;3726:10045:86;16211:167:90;-1:-1:-1;;;3726:10045:86;16310:53:90;3726:10045:86;;;;16310:53:90;15920:202;;;;3726:10045:86;15920:202:90;3726:10045:86;15920:202:90;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;3726:10045:86;;;;;;;;;15834:52:90;3726:10045:86;;;;15861:14:90;3726:10045:86;;;;;;;;15834:52:90;;26704:339;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;26833:29:90;;3726:10045:86;;-1:-1:-1;;;;3726:10045:86;-1:-1:-1;;;3726:10045:86;;;;;-1:-1:-1;;;;3726:10045:86;;;26704:339:90;;15342:134;15396:69;;-1:-1:-1;;;3726:10045:86;15396:69:90;3726:10045:86;;;;;;;;15396:69:90;14999:180;15090:78;;-1:-1:-1;;;3726:10045:86;15090:78:90;3726:10045:86;;15153:10:90;3726:10045:86;;;;;;15090:78:90;15003:64;15023:44;;;;:::i;:::-;15022:45;15003:64;;14638:100;14676:51;-1:-1:-1;;;3726:10045:86;14676:51:90;3726:10045:86;;;;14676:51:90;14469:108;14512:54;-1:-1:-1;;;3726:10045:86;14512:54:90;3726:10045:86;;;;14512:54:90;14291:114;14347:47;-1:-1:-1;;;3726:10045:86;14347:47:90;3726:10045:86;;;;14347:47:90;3118:103;3173:37;-1:-1:-1;;;3726:10045:86;3173:37:90;3726:10045:86;;;;3173:37:90;3726:10045:86;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;;;;;;;;;;;;;;;3118:103:90;-1:-1:-1;;;3726:10045:86;3173:37:90;3726:10045:86;;;;3173:37:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;3620:24:90;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;:::i;:::-;16568:31:90;;;:::i;:::-;519:76:89;;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;14295:29:90;3726:10045:86;;;;14291:114:90;;-1:-1:-1;;;;;3726:10045:86;;14473:16:90;;14469:108;;-1:-1:-1;;;;;3726:10045:86;;14642:11:90;;;14638:100;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;15003:15:90;;;;;:64;;;3726:10045:86;14999:180:90;;-1:-1:-1;;;;;15301:31:90;;;:::i;:::-;3726:10045:86;15346:27:90;;;15342:134;;3726:10045:86;26344:45:90;3726:10045:86;;;;3123:8:90;3726:10045:86;;26344:26:90;3726:10045:86;;;26344:26:90;3726:10045:86;;;26344:45:90;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;26344:26:90;26305;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26729:36:90;26708:17;3726:10045:86;26708:17:90;;3726:10045:86;;;;;;;;;26749:16:90;;3726:10045:86;;26729:36:90;;:::i;:::-;3726:10045:86;-1:-1:-1;26708:57:90;26704:339;;3726:10045:86;;;;3123:8:90;3726:10045:86;;27207:45:90;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;;;27119:24:90;3726:10045:86;;27207:45:90;;;:::i;:::-;3726:10045:86;;27299:70:90;3726:10045:86;;;;;;27299:70:90;15667:38;3726:10045:86;;;;;;15667:38:90;15834:10;;:23;;:52;;;3726:10045:86;15830:558:90;;3726:10045:86;;;;;;;;;15830:558:90;3726:10045:86;;15920:202:90;-1:-1:-1;;;15920:202:90;;3726:10045:86;15920:202:90;;3726:10045:86;15834:10:90;3726:10045:86;;;;;;;;;;;;;;15920:202:90;;;3726:10045:86;15920:202:90;;;;;;;;-1:-1:-1;;;15920:202:90;-1:-1:-1;;;;;;15920:202:90;3726:10045:86;15920:202:90;;;15830:558;3726:10045:86;;16215:68:90;16211:167;;15830:558;;;;16211:167;16310:53;-1:-1:-1;;;3726:10045:86;16310:53:90;3726:10045:86;;;;16310:53:90;15920:202;;;;3726:10045:86;15920:202:90;3726:10045:86;15920:202:90;;;;;;;:::i;:::-;;;;15834:52;3726:10045:86;;;;15861:14:90;3726:10045:86;;;;;;;;15834:52:90;;26704:339;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;26833:29:90;;3726:10045:86;;-1:-1:-1;;;;3726:10045:86;-1:-1:-1;;;3726:10045:86;;;;;-1:-1:-1;;;;3726:10045:86;;;26704:339:90;;15342:134;15396:69;;-1:-1:-1;;;3726:10045:86;15396:69:90;3726:10045:86;;;;;;;;15396:69:90;14999:180;15090:78;;-1:-1:-1;;;3726:10045:86;15090:78:90;3726:10045:86;;15153:10:90;3726:10045:86;;;;;;15090:78:90;15003:64;15023:44;;;;:::i;:::-;15022:45;15003:64;;14638:100;14676:51;-1:-1:-1;;;3726:10045:86;14676:51:90;3726:10045:86;;;;14676:51:90;14469:108;14512:54;-1:-1:-1;;;3726:10045:86;14512:54:90;3726:10045:86;;;;14512:54:90;14291:114;-1:-1:-1;;;3726:10045:86;14347:47:90;3726:10045:86;;;;14347:47:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;-1:-1:-1;;;;;3726:10045:86;;:::i;:::-;;;;;4039:18:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;4039:35:9;3726:10045:86;-1:-1:-1;3726:10045:86;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;9348:31;3726:10045:86;9348:31:90;;:::i;:::-;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;5339:26:90;3726:10045:86;;;5339:26:90;3726:10045:86;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;-1:-1:-1;;;;;4656:35:90;3726:10045:86;;;4656:35:90;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;8727:36:90;;;:::i;:::-;;3726:10045:86;-1:-1:-1;;;;;8835:13:90;3726:10045:86;;;8835:61:90;3726:10045:86;;8835:61:90;;;;3726:10045:86;8835:61:90;;8869:4;3726:10045:86;8835:61:90;;3726:10045:86;;;;;8835:61:90;;;;;;3726:10045:86;8835:61:90;;;3726:10045:86;;;;;;;;;;;;;;;;:::i;:::-;;;;8835:61:90;;;;3726:10045:86;8835:61:90;;;;;;:::i;:::-;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8835:61:90;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;:::i;:::-;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;17117:10:90;;;:30;17113:125;;17333:31;;;:::i;:::-;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;17378:19:90;;;;;17374:129;;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;12098:16:9;12094:87;;12214:32;;-1:-1:-1;;;;;12214:32:9;;:::i;:::-;3726:10045:86;;12260:27:9;;;12310:31;-1:-1:-1;;;3726:10045:86;12310:31:9;3726:10045:86;;;;12310:31:9;12256:211;12362:21;;;;;12358:109;;3726:10045:86;12256:211:9;3726:10045:86;;;;;;12358:109:9;12406:50;;;-1:-1:-1;;;3726:10045:86;12406:50:9;3726:10045:86;;;;;;;;12406:50:9;12094:87;-1:-1:-1;;;3726:10045:86;12137:33:9;3726:10045:86;;;;;12137:33:9;17374:129:90;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;14295:29:90;3726:10045:86;;;;14291:114:90;;14473:16;;14469:108;;14638:100;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;15003:15:90;;;;;:64;;;17374:129;14999:180;;-1:-1:-1;;;;;15301:31:90;;;:::i;:::-;3726:10045:86;15346:27:90;;;15342:134;;3726:10045:86;26344:45:90;3726:10045:86;;;;3123:8:90;3726:10045:86;;26344:26:90;3726:10045:86;;;26344:26:90;3726:10045:86;;;26344:45:90;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;26344:26:90;26305;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26729:36:90;26708:17;3726:10045:86;26708:17:90;;3726:10045:86;;;;;;;;;26749:16:90;;3726:10045:86;;26729:36:90;;:::i;:::-;3726:10045:86;-1:-1:-1;26708:57:90;26704:339;;17374:129;3726:10045:86;;;3123:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;27119:24:90;3726:10045:86;;27207:45:90;;;;;:::i;:::-;3726:10045:86;;27299:70:90;3726:10045:86;;;;;;27299:70:90;15667:38;3726:10045:86;;;;;;15667:38:90;17117:10;;15834:23;;:52;;;17374:129;15830:558;;17374:129;;;;15830:558;3726:10045:86;;-1:-1:-1;;;15920:202:90;;;3726:10045:86;15920:202:90;;3726:10045:86;17117:10:90;3726:10045:86;;;;;;;;;;;;;;;15920:202:90;;;3726:10045:86;15920:202:90;;;;;;;;-1:-1:-1;;;15920:202:90;-1:-1:-1;;;;;;15920:202:90;3726:10045:86;15920:202:90;;;15830:558;-1:-1:-1;3726:10045:86;16211:167:90;15830:558;16211:167;-1:-1:-1;;;3726:10045:86;16310:53:90;3726:10045:86;;;;16310:53:90;15920:202;;;;3726:10045:86;15920:202:90;3726:10045:86;15920:202:90;;;;;;;:::i;:::-;;;;15834:52;3726:10045:86;;;;15861:14:90;3726:10045:86;;;;;;;;15834:52:90;;26704:339;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;26833:29:90;;3726:10045:86;;-1:-1:-1;;;;3726:10045:86;-1:-1:-1;;;3726:10045:86;;;;;-1:-1:-1;;;;3726:10045:86;;;26704:339:90;;15342:134;15396:69;;-1:-1:-1;;;3726:10045:86;15396:69:90;3726:10045:86;;;;;;;;15396:69:90;14999:180;15090:78;;-1:-1:-1;;;3726:10045:86;15090:78:90;3726:10045:86;;17117:10:90;3726:10045:86;;;;;;15090:78:90;15003:64;15023:44;;;;:::i;:::-;15022:45;15003:64;;14638:100;14676:51;-1:-1:-1;;;3726:10045:86;14676:51:90;3726:10045:86;;;;14676:51:90;14469:108;14512:54;-1:-1:-1;;;3726:10045:86;14512:54:90;3726:10045:86;;;;14512:54:90;14291:114;14347:47;-1:-1:-1;;;3726:10045:86;14347:47:90;3726:10045:86;;;;14347:47:90;3118:103;3173:37;-1:-1:-1;;;3726:10045:86;3173:37:90;3726:10045:86;;;;3173:37:90;17113:125;17170:57;-1:-1:-1;;;3726:10045:86;17170:57:90;3726:10045:86;;17117:10:90;3726:10045:86;;;;17170:57:90;3118:103;3173:37;-1:-1:-1;;;3726:10045:86;3173:37:90;3726:10045:86;;;;3173:37:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;6496:8:90;3726:10045:86;;;;;;;;6496:27:90;3726:10045:86;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;;;;;;6697:33:90;3726:10045:86;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;7950:19;;;:::i;:::-;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;-1:-1:-1;;;;;3887:26:90;3726:10045:86;;;3887:26:90;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;15698:22:9;;;15694:91;;735:10:15;3726:10045:86;;15794:18:9;3726:10045:86;;;;;;-1:-1:-1;3726:10045:86;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;15855:41:9;3726:10045:86;735:10:15;15855:41:9;;3726:10045:86;15694:91:9;15743:31;;3726:10045:86;15743:31:9;3726:10045:86;;;;15743:31:9;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;2597:7:9;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;2597:7:9;3726:10045:86;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;-1:-1:-1;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;6006:19;;;:::i;:::-;3726:10045:86;;;;;;;6054:21:90;6044:31;;:67;;;;;3726:10045:86;6044:103:90;;;;3726:10045:86;;;;;;;;;;;6044:103:90;3726:10045:86;;;;;;6115:32:90;;6044:103;;;:67;-1:-1:-1;;6089:22:90;6079:32;;3726:10045:86;6044:67:90;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;519:76:89;;:::i;:::-;7807:15:86;;;3726:10045;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3726:10045:86;;;:::i;:::-;;;;;;;;;2572:15:99;;3726:10045:86;2572:15:99;3726:10045:86;2972:11:99;-1:-1:-1;;;;;2972:11:99;;;:::i;:::-;;3726:10045:86;;;3015:11:99;3726:10045:86;3015:11:99;;;:::i;:::-;;:20;3726:10045:86;;;;;;;;;;;:::i;:::-;;;;2939:99:99;;3726:10045:86;2895:143:99;;;:::i;:::-;;;;;:::i;:::-;;3148:1;3151:16;;;;;;3726:10045:86;;;7992:13;3726:10045;;;7992:13;:::i;:::-;8034:16;;;;;;:::i;:::-;8081:18;;;;;;:::i;:::-;8124:12;;;;3726:10045;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;8166:17;7909:477;8166:17;3726:10045;8166:17;-1:-1:-1;;;;;3726:10045:86;8166:17;-1:-1:-1;;;;;8166:17:86;;;;;:::i;:::-;8215:19;;;;;;;:::i;:::-;3726:10045;;;;;;:::i;:::-;;;;;7930:446;;;3726:10045;;;7930:446;;3726:10045;8124:12;7930:446;;3726:10045;;;8166:17;7930:446;;3726:10045;;;8215:19;7930:446;;3726:10045;7807:15;7930:446;;3726:10045;;7930:446;;3726:10045;8348:13;3726:10045;8348:13;;3726:10045;:::i;:::-;7930:446;;;3726:10045;7909:477;:::i;:::-;3726:10045;;;;;;3169:3:99;3273:11;-1:-1:-1;;;;;3273:11:99;3148:1;3273:11;;;:::i;:::-;;3726:10045:86;;;;;3324:29:99;-1:-1:-1;;3726:10045:86;;3324:29:99;;:::i;:::-;;:39;3726:10045:86;;3366:11:99;3726:10045:86;3366:11:99;;;;:::i;:::-;;:20;3726:10045:86;;;;;;;;;;:::i;:::-;;;;3220:185:99;;3726:10045:86;3192:213:99;;;;:::i;:::-;;;;;;:::i;:::-;;3726:10045:86;3136:13:99;;3726:10045:86;;;;;;;;:::i;:::-;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5872:19;;;:::i;:::-;3726:10045;;;;;;;5872:44;5868:108;;3726:10045;6042:20;3726:10045;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;5799:7:9;3726:10045:86;;;;;;-1:-1:-1;;;;;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;6503:9;3726:10045;;;;;;;;;;;;;;;;:::i;:::-;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;5995:589;;3726:10045;;;;;;:::i;:::-;5995:589;3726:10045;5995:589;;3726:10045;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;:::i;5868:108::-;3726:10045;;;5868:108;;3726:10045;-1:-1:-1;;;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;:::i;:::-;519:76:89;;;:::i;:::-;3726:10045:86;12158:141:90;12178:9;;;;;;3726:10045:86;12189:3:90;12275:12;;;;;:::i;:::-;3726:10045:86;519:76:89;;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;11374:29:90;3726:10045:86;;;;11370:235:90;3726:10045:86;;;11426:47:90;-1:-1:-1;;;3726:10045:86;11426:47:90;3726:10045:86;;;;11426:47:90;11370:235;3726:10045:86;;;;;;3123:8:90;3726:10045:86;;;;;;;;11490:115:90;;11675:31;;-1:-1:-1;3726:10045:86;19772:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;19758:10:90;:39;19663:141;;11675:31;11674:32;11670:127;;21717:34;;;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;21840:26:90;3726:10045:86;;;21840:26:90;3726:10045:86;:::i;:::-;;-1:-1:-1;;;;;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;21926:35:90;;21922:119;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;;;22099:32:90;22095:122;;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;22464:34:90;3726:10045:86;;;;;;;22481:17:90;;3726:10045:86;;22464:34:90;;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;;;;-1:-1:-1;;;3726:10045:86;;;;-1:-1:-1;;;;;3726:10045:86;;;22869:20:90;;22865:87;;11370:235;3726:10045:86;;;3123:8:90;3726:10045:86;;5799:7:9;3726:10045:86;;;23006:35:90;-1:-1:-1;;;;;3726:10045:86;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;23479:102:90;;-1:-1:-1;;;;;3726:10045:86;;;;23297:24:90;3726:10045:86;;23375:55:90;;;;;;:::i;:::-;3726:10045:86;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;23479:102:90;;;;23673:38;3726:10045:86;;;;;;23673:38:90;3726:10045:86;;;23802:14:90;3726:10045:86;;;;;;;;23798:561:90;;11370:235;12189:3;;;;;3726:10045:86;;12163:13:90;;;;23798:561;3726:10045:86;;23861:234:90;-1:-1:-1;;;23861:234:90;;3726:10045:86;23861:234:90;;3726:10045:86;;;;;;;;;;;;;;23861:234:90;;;3726:10045:86;23861:234:90;;;;;;;;-1:-1:-1;;;23861:234:90;-1:-1:-1;;;;;;23861:234:90;3726:10045:86;23861:234:90;;;23798:561;3726:10045:86;;24188:66:90;24184:165;;23798:561;;;;;;23861:234;;;;3726:10045:86;23861:234:90;;;;;;;;;:::i;:::-;;;;22865:87;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;22905:29:90;-1:-1:-1;;;;;;;3726:10045:86;;;;;;22865:87:90;;22095:122;22154:52;-1:-1:-1;;;3726:10045:86;22154:52:90;3726:10045:86;;;;22154:52:90;21922:119;21984:46;-1:-1:-1;;;3726:10045:86;21984:46:90;3726:10045:86;;;;21984:46:90;11670:127;-1:-1:-1;;;3726:10045:86;11729:57:90;3726:10045:86;;11775:10:90;3726:10045:86;;;;11729:57:90;11490:115;-1:-1:-1;;;3726:10045:86;11547:47:90;3726:10045:86;;;;11547:47:90;3118:103;3173:37;-1:-1:-1;;;3726:10045:86;3173:37:90;3726:10045:86;;;;3173:37:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;7198:9;3726:10045;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;3726:10045:86;;;;;;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;12510:19;;;:::i;:::-;3726:10045:86;;;;;;;12543:32:90;;3726:10045:86;;12598:47:90;-1:-1:-1;;;3726:10045:86;12598:47:90;3726:10045:86;;;;12598:47:90;12539:361;12676:22;12666:32;;12676:22;;12721:47;-1:-1:-1;;;3726:10045:86;12721:47:90;3726:10045:86;;;;12721:47:90;12662:238;12799:21;12789:31;12785:115;;12970:31;;-1:-1:-1;3726:10045:86;19772:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;19758:10:90;:39;19663:141;;12970:31;12969:32;12965:127;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;;;24574:32:90;24570:122;;3726:10045:86;;13361:38:90;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;-1:-1:-1;;;;3726:10045:86;;;;;;;13222:47:90;;;3726:10045:86;13222:47:90;;3726:10045:86;;13361:38:90;3726:10045:86;24570:122:90;-1:-1:-1;;;3726:10045:86;24629:52:90;3726:10045:86;;;;24629:52:90;12785:115;-1:-1:-1;;;3726:10045:86;12843:46:90;3726:10045:86;;;;12843:46:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;908:10:88;899:19;;895:116;;3726:10045:86;13641:13:90;3726:10045:86;;;-1:-1:-1;;;;;;3726:10045:86;;;13641:13:90;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;13761:172:90;3726:10045:86;908:10:88;13761:172:90;;14053:12;3726:10045:86;-1:-1:-1;;3726:10045:86;;;;;;;;14002:70:90;3726:10045:86;;;;14038:1:90;3726:10045:86;;;;;;14002:70:90;3726:10045:86;;-1:-1:-1;;;3726:10045:86;;;;;;;;895:116:88;-1:-1:-1;;;3726:10045:86;941:59:88;3726:10045:86;;908:10:88;3726:10045:86;;;;941:59:88;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3726:10045:86;;908:10:88;899:19;;895:116;;3726:10045:86;-1:-1:-1;;;;;;;;;;;3726:10045:86;;;;;;;;;908:10:88;1484:70;3726:10045:86;1484:70:88;;3726:10045:86;;;;;;;-1:-1:-1;;3726:10045:86;;;;-1:-1:-1;;;;;3726:10045:86;;:::i;:::-;;2006:19:9;;2002:87;;3726:10045:86;;;;;;;;;;;;;;;;2002:87:9;2048:30;3726:10045:86;2048:30:9;3726:10045:86;;;;;2048:30:9;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;2274:22:9;3726:10045:86;;2274:22:9;:::i;:::-;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;:::i;:::-;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6845:99;;3726:10045;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;519:76:89;;;;;:::i;:::-;18038:30:90;;;18034:148;;3726:10045:86;18318:18:90;;;;;;3726:10045:86;18338:3:90;18473:12;;;;;:::i;:::-;3726:10045:86;18500:12:90;;;;;:::i;:::-;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;18523:10:90;;;;;;;:::i;:::-;;:::i;:::-;519:76:89;;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;14295:29:90;3726:10045:86;;;;14291:114:90;;14473:16;;14469:108;;-1:-1:-1;;;;;3726:10045:86;;14642:11:90;;;14638:100;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;15003:15:90;;;;;:64;;;18338:3;14999:180;;-1:-1:-1;;;;;15301:31:90;;;:::i;:::-;3726:10045:86;15346:27:90;;;15342:134;;3726:10045:86;26344:45:90;3726:10045:86;;;;3123:8:90;3726:10045:86;;26344:26:90;3726:10045:86;;;26344:26:90;3726:10045:86;;;26344:45:90;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;26344:26:90;26305;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26729:36:90;26708:17;3726:10045:86;26708:17:90;;3726:10045:86;;;;;;;;;26749:16:90;;3726:10045:86;;26729:36:90;;:::i;:::-;3726:10045:86;-1:-1:-1;26708:57:90;26704:339;;18338:3;3726:10045:86;;;3123:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;27119:24:90;3726:10045:86;;27207:45:90;;;;;:::i;:::-;3726:10045:86;;27299:70:90;3726:10045:86;;;;;;27299:70:90;15667:38;3726:10045:86;;;;;;15667:38:90;15834:10;;:23;;:52;;;18338:3;15830:558;;18338:3;;;;;3726:10045:86;;18303:13:90;;15830:558;3726:10045:86;;15920:202:90;-1:-1:-1;;;15920:202:90;;3726:10045:86;15920:202:90;;3726:10045:86;15834:10:90;3726:10045:86;;;;;;;;;;;;;15920:202:90;;;3726:10045:86;15920:202:90;;;;;;;;-1:-1:-1;;;15920:202:90;-1:-1:-1;;;;;;15920:202:90;3726:10045:86;15920:202:90;;;15830:558;3726:10045:86;;16215:68:90;16211:167;;15830:558;;;;;15920:202;;;;3726:10045:86;15920:202:90;;;;;;;;;:::i;:::-;;;;15834:52;3726:10045:86;;;;15861:14:90;3726:10045:86;;;;;;;;15834:52:90;;26704:339;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;26833:29:90;;3726:10045:86;;-1:-1:-1;;;;3726:10045:86;-1:-1:-1;;;3726:10045:86;;;;;-1:-1:-1;;;;3726:10045:86;;;26704:339:90;;15342:134;15396:69;;-1:-1:-1;;;3726:10045:86;15396:69:90;3726:10045:86;;;;;;;;15396:69:90;14999:180;15090:78;;-1:-1:-1;;;3726:10045:86;15090:78:90;3726:10045:86;;15834:10:90;3726:10045:86;;;;;;15090:78:90;15003:64;15023:44;;;;:::i;:::-;15022:45;15003:64;;14291:114;14347:47;-1:-1:-1;;;3726:10045:86;14347:47:90;3726:10045:86;;;;14347:47:90;18034:148;18091:80;;;3726:10045:86;18091:80:90;3726:10045:86;;;;;;18091:80:90;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;8206:27;3726:10045:86;8206:27:90;;:::i;3726:10045:86:-;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;5716:19:90;;;:::i;:::-;3726:10045:86;;;;;;5739:21:90;5716:44;5712:115;;3726:10045:86;;;;;;;;;;;5712:115:90;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;;;;5712:115:90;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;-1:-1:-1;;;;;1753:53:90;3726:10045:86;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;10672:29:90;3726:10045:86;;;;10671:30:90;10667:118;;10958:44;;;:::i;:::-;10957:45;10953:140;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;25723:18:90;;:38;;;3726:10045:86;25723:76:90;;;3726:10045:86;25719:162:90;;25972:38;3726:10045:86;;;;;;25972:38:90;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;9161:18:9;;;;;9157:256;;3726:10045:86;;;;5799:7:9;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;9577:27:9;3726:10045:86;9577:27:9;;;;;11587:96;;;3726:10045:86;11587:96:9;-1:-1:-1;;;3726:10045:86;11641:31:9;3726:10045:86;;;;11641:31:9;9157:256;9319:5;;3726:10045:86;;15346:15:9;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;14720:662:9;9319:5;3726:10045:86;;;;;;;;;;;;;;;;9157:256:9;;25719:162:90;-1:-1:-1;;;3726:10045:86;25822:48:90;3726:10045:86;;;;25822:48:90;25723:76;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;;25766:33:90;3726:10045:86;;;;25765:34:90;25723:76;;:38;;3726:10045:86;25723:38:90;;10667:118;10724:50;3726:10045:86;10724:50:90;3726:10045:86;;;;10724:50:90;3726:10045:86;;;;4873:39:9;3726:10045:86;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4873:39:9;:::i;3726:10045:86:-;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;3123:8:90;3726:10045:86;;;;;;;;6317:29:90;3726:10045:86;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;519:76:89;;:::i;:::-;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;11374:29:90;3726:10045:86;;;;11370:235:90;3726:10045:86;;;-1:-1:-1;;;3726:10045:86;11426:47:90;3726:10045:86;;;;11426:47:90;11370:235;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;11490:115:90;;11675:31;;-1:-1:-1;3726:10045:86;19772:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;19758:10:90;:39;19663:141;;11675:31;11674:32;11670:127;;21717:34;;;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;21840:26:90;3726:10045:86;;;21840:26:90;3726:10045:86;:::i;:::-;;-1:-1:-1;;;;;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;21926:35:90;;21922:119;;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;;;;;22099:32:90;22095:122;;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;22464:34:90;3726:10045:86;;;;;;;22481:17:90;;3726:10045:86;;22464:34:90;;:::i;:::-;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;;;;-1:-1:-1;;;3726:10045:86;;;;-1:-1:-1;;;;;3726:10045:86;;;22869:20:90;;22865:87;;11370:235;3726:10045:86;;;3123:8:90;3726:10045:86;;23006:35:90;3726:10045:86;;;23006:35:90;-1:-1:-1;;;;;3726:10045:86;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;23006:35:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;23479:102:90;;-1:-1:-1;;;;;3726:10045:86;;;;23297:24:90;3726:10045:86;;23375:55:90;;;;;;:::i;23479:102::-;;;;23673:38;3726:10045:86;;;;;;23673:38:90;3726:10045:86;;;23802:14:90;3726:10045:86;;;;;;;;23798:561:90;;3726:10045:86;23798:561:90;3726:10045:86;;23861:234:90;-1:-1:-1;;;23861:234:90;;3726:10045:86;23861:234:90;;3726:10045:86;;;;;;;;;;;;;;23861:234:90;;;3726:10045:86;23861:234:90;;;;;;;;-1:-1:-1;;;23861:234:90;-1:-1:-1;;;;;;23861:234:90;3726:10045:86;23861:234:90;;;3726:10045:86;;24188:66:90;24184:165;;3726:10045:86;23861:234:90;;;;3726:10045:86;23861:234:90;3726:10045:86;23861:234:90;;;;;;;:::i;:::-;;;;22865:87;3726:10045:86;;;3123:8:90;3726:10045:86;;;;;;22905:29:90;-1:-1:-1;;;;;;;3726:10045:86;;;;;;22865:87:90;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;-1:-1:-1;;;;;3726:10045:86;;;908:10:88;;899:19;;895:116;;9772:21:90;-1:-1:-1;;;;;9772:21:90;;:26;9768:121;;3726:10045:86;;;-1:-1:-1;;;10080:65:90;;10024:41;3726:10045:86;10080:65:90;;3726:10045:86;;10080:65:90;;;;;;;;;;;3726:10045:86;10080:65:90;;;3726:10045:86;10079:66:90;;10075:169;;3726:10045:86;;;10309:14:90;3726:10045:86;;;;;10337:4:90;3726:10045:86;;;;;;;;;;;;;10396:73:90;3726:10045:86;908:10:88;10396:73:90;;3726:10045:86;10075:169:90;10168:65;3726:10045:86;10168:65:90;3726:10045:86;;10080:65:90;3726:10045:86;10168:65:90;10080;;;;3726:10045:86;10080:65:90;3726:10045:86;10080:65:90;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;9768:121;9821:57;3726:10045:86;9821:57:90;3726:10045:86;;;;;9821:57:90;895:116:88;941:59;-1:-1:-1;;;3726:10045:86;941:59:88;3726:10045:86;;908:10:88;3726:10045:86;;;;941:59:88;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;519:76:89;;:::i;:::-;3726:10045:86;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8708:15;3726:10045;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;-1:-1:-1;;;;;3726:10045:86;;:::i;:::-;;;;5524:14:90;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;4162:51;3726:10045;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;3726:10045:86;;;;;1673:36:90;3726:10045:86;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;6910:19;;;:::i;:::-;3726:10045:86;;;;;;6948:31:90;3726:10045:86;6948:31:90;;:68;;;;;3726:10045:86;;;;;;;;;;6948:68:90;3726:10045:86;;;6983:33:90;6948:68;;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;3123:8:90;3726:10045:86;;;;;;;3123:27:90;3726:10045:86;;;;3122:28:90;3118:103;;3726:10045:86;3230:1:90;3726:10045:86;;;;;3123:8:90;3726:10045:86;;;;;;;;;;7537:65:90;;;3726:10045:86;7533:188:90;;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;;7533:188:90;7637:73;3726:10045:86;;;;;3123:8:90;3726:10045:86;;7676:34:90;-1:-1:-1;;;;;7637:26:90;3726:10045:86;;;7637:26:90;3726:10045:86;;7676:34:90;;:::i;:::-;7637:73;;:::i;:::-;7533:188;;;7537:65;3726:10045:86;;;;3123:8:90;3726:10045:86;;;;;;;7573:29:90;3726:10045:86;;;;7572:30:90;7537:65;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;:::i;:::-;;;14943:22:9;;;:::i;:::-;735:10:15;15093:18:9;;:35;;;3726:10045:86;15093:69:9;;;3726:10045:86;15089:142:9;;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;15283:28:9;3726:10045:86;15283:28:9;;3726:10045:86;;15346:15:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;15089:142:9;15189:27;3726:10045:86;15189:27:9;735:10:15;3726:10045:86;;;;15189:27:9;15093:69;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;;;4039:18:9;3726:10045:86;;;;;-1:-1:-1;;;;;735:10:15;3726:10045:86;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;3726:10045:86;;;15132:30:9;15093:69;;:35;735:10:15;;-1:-1:-1;;;;;3726:10045:86;;15115:13:9;;15093:35;;3726:10045:86;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;2442:5:9;3726:10045:86;;2442:5:9;3726:10045:86;;2442:5:9;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2442:5:9;3726:10045:86;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;;;;;;;;2442:5:9;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;1622:6:90;3726:10045:86;;;;;;;;;-1:-1:-1;;3726:10045:86;;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;8461:25:90;3726:10045:86;;8461:25:90;;:65;;;;;3726:10045:86;;;;;;;8461:65:90;1713:25:9;1698:40;;;-1:-1:-1;1698:104:9;;;;8461:65:90;1698:156:9;;;;8461:65:90;;;;;1698:156:9;-1:-1:-1;;;861:40:17;;;1698:156:9;;;:104;1769:33;1754:48;;;-1:-1:-1;1698:104:9;;3726:10045:86;;;;;;;;-1:-1:-1;;3726:10045:86;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;3726:10045:86;;;;:::o;:::-;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;:::o;:::-;;;-1:-1:-1;;;;;3726:10045:86;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;3726:10045:86;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;3726:10045:86;;;;:::o;:::-;;;-1:-1:-1;;;;;3726:10045:86;;;;;;:::o;3497:154:9:-;3583:22;;;:::i;:::-;;-1:-1:-1;3726:10045:86;6034:15:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;3497:154:9;:::o;3726:10045:86:-;;-1:-1:-1;;;;;3726:10045:86;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;:::o;4143:578:9:-;;;-1:-1:-1;;;;;3726:10045:86;4237:16:9;;4233:87;;3726:10045:86;4251:1:9;3726:10045:86;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;4251:1:9;3726:10045:86;;;25723:18:90;;:38;;;4143:578:9;25723:76:90;;;4143:578:9;25719:162:90;;25972:38;3726:10045:86;;;;;;25972:38:90;3726:10045:86;4251:1:9;3726:10045:86;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;4251:1:9;3726:10045:86;;;735:10:15;;;9035:18:9;;9031:86;;;;4143:578;-1:-1:-1;;;;;9161:18:9;;;9157:256;;4143:578;3726:10045:86;4251:1:9;3726:10045:86;9487:9:9;3726:10045:86;;;4251:1:9;3726:10045:86;9427:16:9;3726:10045:86;;;;;;4251:1:9;3726:10045:86;5799:7:9;3726:10045:86;;;4251:1:9;3726:10045:86;;-1:-1:-1;;;;;;3726:10045:86;;;;;;9577:27:9;;4251:1;9577:27;;3726:10045:86;4610:21:9;;;4606:109;;4143:578;;;:::o;4606:109::-;-1:-1:-1;;;4251:1:9;4654:50;9487:9;3726:10045:86;;;;;;4251:1:9;4654:50;9157:256;9319:5;;3726:10045:86;;15346:15:9;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;14720:662:9;9319:5;3726:10045:86;4251:1:9;3726:10045:86;9368:9:9;3726:10045:86;;;4251:1:9;3726:10045:86;;;;;;;;9157:256:9;;9031:86;6514:127;;;-1:-1:-1;6514:127:9;;;9031:86;7193:39;7189:255;;9031:86;;;;;7189:255;7252:19;;3726:10045:86;;-1:-1:-1;;;4251:1:9;7298:31;;3726:10045:86;;4251:1:9;7298:31;7248:186;7375:44;4251:1;7375:44;735:10:15;7375:44:9;3726:10045:86;;;;4251:1:9;7375:44;6514:127;735:10:15;;6552:16:9;;:52;;;;6514:127;6552:88;6514:127;6552:88;3726:10045:86;;4251:1:9;3726:10045:86;6034:15:9;3726:10045:86;;735:10:15;-1:-1:-1;;;;;3726:10045:86;4251:1:9;3726:10045:86;;;6608:32:9;6514:127;;6552:52;3726:10045:86;;4251:1:9;3726:10045:86;4039:18:9;3726:10045:86;;;4251:1:9;3726:10045:86;-1:-1:-1;;;;;735:10:15;3726:10045:86;4251:1:9;3726:10045:86;;;;;4251:1:9;3726:10045:86;;;6552:52:9;;25719:162:90;25822:48;-1:-1:-1;;;4251:1:9;25822:48:90;;3726:10045:86;;4251:1:9;25822:48:90;25723:76;3726:10045:86;;4251:1:9;3726:10045:86;25766:8:90;3726:10045:86;;;25766:33:90;3726:10045:86;4251:1:9;3726:10045:86;25766:33:90;3726:10045:86;;;;25765:34:90;25723:76;;:38;;25745:16;25723:38;;3726:10045:86;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;3726:10045:86;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;3726:10045:86;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;-1:-1:-1;3726:10045:86;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;3726:10045:86;;;;;;;:::o;:::-;;;;;;;;;;:::o;4985:208:9:-;;5121:7;;;;;:::i;:::-;17034:14;;17030:664;;4985:208;;;;;:::o;17030:664::-;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;;;17072:71:9;;;;;-1:-1:-1;;;17072:71:9;;735:10:15;17072:71:9;;;3726:10045:86;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:9;;17051:1;17072:71;;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:9;;17331:353;;;:::i;:::-;3726:10045:86;;;17381:18:9;;;17430:25;-1:-1:-1;;;17051:1:9;17430:25;17072:71;3726:10045:86;;17051:1:9;17430:25;17377:293;3726:10045:86;17557:95:9;;17068:616;-1:-1:-1;;;;;;;;;3726:10045:86;;17190:51:9;17186:130;;17068:616;17030:664;;;;;;17186:130;-1:-1:-1;;;17051:1:9;17272:25;17072:71;3726:10045:86;;17051:1:9;17272:25;17072:71;;;;;3726:10045:86;17072:71:9;3726:10045:86;17072:71:9;;;;;;;:::i;:::-;;;;;3726:10045:86;;;;;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;:::o;16138:241:9:-;3726:10045:86;-1:-1:-1;3726:10045:86;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;16267:19:9;;;16263:88;;16360:12;16138:241;:::o;3726:10045:86:-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;9191:1343::-;;3726:10045;9325:15;3726:10045;;;;;9394:9;3726:10045;;;;;;;:::i;:::-;9503:11;;3726:10045;;9503:11;;;:::i;:::-;;:21;3726:10045;;9503:38;9499:77;;3726:10045;;;9668:8;3726:10045;;;;;;;;;;;9668:44;;9664:118;;10031:11;-1:-1:-1;;;;;10031:11:86;;;:::i;:::-;;3726:10045;;10064:13;10076:1;10059:437;10100:3;3726:10045;;10079:19;;;;;10316:11;3726:10045;;10316:11;;;;:::i;:::-;;:21;3726:10045;;10316:38;10312:82;;-1:-1:-1;;;;;10076:1:86;10453:11;;;;;;:::i;:::-;;3726:10045;;;;10100:3;3726:10045;10064:13;;;10312:82;10374:5;-1:-1:-1;10374:5:86;-1:-1:-1;;9191:1343:86:o;9664:118::-;3726:10045;;;;;;9668:8;3726:10045;;-1:-1:-1;;;;;9735:26:86;3726:10045;;;9735:26;3726:10045;;9728:43;:::o;9499:77::-;-1:-1:-1;3726:10045:86;;-1:-1:-1;;9557:8:86:o;19886:594:90:-;3726:10045:86;;;19975:8:90;3726:10045:86;;;19975:29:90;3726:10045:86;;;19975:29:90;3726:10045:86;;;;19971:185:90;3726:10045:86;;;20020:29:90;20027:22;20020:29;:::o;19971:185::-;3726:10045:86;;;19975:8:90;3726:10045:86;;;;;;;;20066:90:90;;3726:10045:86;;;19975:8:90;3726:10045:86;;;;;;;;;;20170:15:90;:46;20166:105;;20285:34;;;:::i;:::-;3726:10045:86;;;19975:8:90;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;20322:26:90;3726:10045:86;;;20322:26:90;3726:10045:86;;;;20285:73:90;20281:193;3726:10045:86;;;19975:29:90;20374:30;:::o;20281:193::-;20322:26;20435:28;:::o;20166:105::-;20232:28;3726:10045:86;20232:28:90;:::o;20066:90::-;20116:29;20123:22;20116:29;:::o;25568:500::-;;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;25723:18:90;;:38;;;25568:500;25723:76;;;25568:500;25719:162;;25972:38;3726:10045:86;;;;;;25972:38:90;3726:10045:86;;;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;;9161:18:9;;9157:256;;25568:500:90;3726:10045:86;9427:16:9;9423:107;;25568:500:90;3726:10045:86;;;5799:7:9;3726:10045:86;;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;9577:27:9;;3726:10045:86;9577:27:9;;25568:500:90;:::o;9423:107:9:-;3726:10045:86;;;9487:9:9;3726:10045:86;;;;;9035:18:9;3726:10045:86;;;;;9423:107:9;;9157:256;9319:5;;3726:10045:86;;15346:15:9;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;14720:662:9;9319:5;3726:10045:86;;;9368:9:9;3726:10045:86;;;;;;;;;;;;9157:256:9;;25723:76:90;3726:10045:86;;;;25766:8:90;3726:10045:86;;;25766:33:90;3726:10045:86;;;25766:33:90;3726:10045:86;;;;25765:34:90;25723:76;;:38;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;25745:16:90;;25723:38;;1115:145:89;-1:-1:-1;;;;;1191:8:89;3726:10045:86;1182:4:89;1174:25;1170:84;;1115:145::o;1170:84::-;1222:21;;;;;;10861:2908:86;;11098:89;-1:-1:-1;;;;;11133:18:86;;;3726:10045;;11153:17;:13;;;;:17;3726:10045;11098:89;;:::i;:::-;3726:10045;-1:-1:-1;;;;;3726:10045:86;;;11312:15;;;;;11348:16;;;;3726:10045;;;;;7920:18:99;;7916:98;;8074:14;;8070:90;;3726:10045:86;;8271:17:99;;8267:104;;11329:17:86;8462:30:99;;8458:132;;12164:11;3726:10045:86;11153:17;12164:11:99;;;:::i;:::-;;:21;3726:10045:86;;12151:34:99;;;12147:208;;12426:25;-1:-1:-1;12461:30:99;-1:-1:-1;12501:31:99;-1:-1:-1;3726:10045:86;;-1:-1:-1;12745:755:99;12769:13;;;;;;13789:15;;;;3726:10045:86;13789:15:99;;3726:10045:86;;;13819:41:99;;;;;13815:164;;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;14067:34:99;;;;14063:207;;3726:10045:86;;11432:12;3726:10045;;;-1:-1:-1;3726:10045:86;11524:8;11153:17;3726:10045;11133:18;-1:-1:-1;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;-1:-1:-1;;;;;11552:14:86;;;3726:10045;;-1:-1:-1;;;;;;3726:10045:86;;;;;;-1:-1:-1;;;;;11625:12:86;;;3726:10045;;11610:12;-1:-1:-1;;;;;3726:10045:86;11610:12;;3726:10045;;-1:-1:-1;;;;;;3726:10045:86;;;;;;11669:17;;;3726:10045;;;;;-1:-1:-1;;;;3726:10045:86;;;;;;;;;;;;;;11752:19;3726:10045;11752:19;;;3726:10045;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;11312:15;;;;11976;3726:10045;;;;11153:17;12029:33;3726:10045;;;;;;;12029:33;;:::i;:::-;;:43;3726:10045;;;;;11752:19;3726:10045;;;;;;;;-1:-1:-1;12345:16:86;;;;;;3726:10045;;;;;11432:12;3726:10045;-1:-1:-1;;;;;11153:17:86;12723:16;;3726:10045;;10022:16:9;;10018:87;;10138:32;;-1:-1:-1;;;;;10138:32:9;;:::i;:::-;3726:10045:86;10180:96:9;;11625:12:86;;12825:100;-1:-1:-1;;;;;11625:12:86;13217:545;11625:12;;3726:10045;;-1:-1:-1;;;;;3726:10045:86;;;12887:4;;12863:10;;12825:100;;:::i;:::-;-1:-1:-1;;;;;11153:17:86;12997:23;;3726:10045;;12997:27;12993:168;;12325:120;3726:10045;-1:-1:-1;;;;;3726:10045:86;;;12723:16;3726:10045;;-1:-1:-1;;;;;11153:17:86;12723:16;;3726:10045;;11625:12;-1:-1:-1;;;;;11625:12:86;;;3726:10045;;;;;;;;;;-1:-1:-1;;;;;11153:13:86;11312:15;;;13592;3726:10045;;;;11133:18;3726:10045;;;;;:::i;:::-;;;11752:19;3726:10045;;;;;;;11153:17;13633:75;;3726:10045;11153:13;13730;3726:10045;;;-1:-1:-1;;;;;11153:17:86;11133:18;3726:10045;;;;;;12863:10;3726:10045;;;;;;;;11133:18;3726:10045;;;12997:23;3726:10045;;11625:12;3726:10045;;;11669:17;3726:10045;;;11752:19;3726:10045;;;;11348:16;3726:10045;;;;;;;;:::i;:::-;;11312:15;3726:10045;;;;;;;;;;;;;;;;;;;;;;;;;13217:545;;;10861:2908::o;12993:168::-;13040:110;11625:12;-1:-1:-1;;;;;11625:12:86;;;3726:10045;;-1:-1:-1;;;;;11153:13:86;;;13094;3726:10045;;12863:10;;13040:110;;:::i;:::-;12993:168;;;10180:96:9;10234:31;-1:-1:-1;10234:31:9;-1:-1:-1;10234:31:9;3726:10045:86;;-1:-1:-1;10234:31:9;12363:3:86;3726:10045;-1:-1:-1;3726:10045:86;12386:9;11153:17;3726:10045;11133:18;-1:-1:-1;3726:10045:86;11312:15;12411:18;11312:15;;;;12411;:18;:::i;:::-;;3726:10045;;;;;;;;;;;;;;;;;;;;;;11153:17;3726:10045;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;;;;-1:-1:-1;;;;;;3726:10045:86;;;;;;;;;;;;;11669:17;3726:10045;;;;;;;;12330:13;;14063:207:99;14124:135;-1:-1:-1;14124:135:99;;3726:10045:86;;;;-1:-1:-1;14124:135:99;13815:164;13883:85;-1:-1:-1;13883:85:99;;3726:10045:86;;;;-1:-1:-1;13883:85:99;12784:7;12886:15;;;;;12865:43;12886:15;-1:-1:-1;;;;;12886:15:99;;;;:::i;:::-;;3726:10045:86;;12865:43:99;;:::i;:::-;13042:15;3726:10045:86;13042:15:99;11153:17:86;13042:15:99;;;;:::i;:::-;;:25;3726:10045:86;;;;13085:51:99;;;;13081:251;;13439:50;3726:10045:86;13439:50:99;12784:7;3726:10045:86;12750:17:99;;;;;13081:251;13163:154;;;;-1:-1:-1;13163:154:99;;3726:10045:86;;;;;;-1:-1:-1;13163:154:99;12147:208;3726:10045:86;11153:17;12309:11:99;;;:::i;:::-;;:21;3726:10045:86;;12208:136:99;;-1:-1:-1;12208:136:99;;3726:10045:86;;;;-1:-1:-1;12208:136:99;8458:132;8515:64;-1:-1:-1;8515:64:99;;3726:10045:86;;-1:-1:-1;8515:64:99;8267:104;8311:49;-1:-1:-1;8311:49:99;;-1:-1:-1;8311:49:99;8070:90;8111:38;-1:-1:-1;8111:38:99;;-1:-1:-1;8111:38:99;7916:98;7961:42;-1:-1:-1;7961:42:99;;-1:-1:-1;7961:42:99;19235:301:90;3726:10045:86;-1:-1:-1;3726:10045:86;5799:7:9;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;-1:-1:-1;3726:10045:86;;;19391:10:90;;;:23;:87;;;;;19235:301;19391:138;;;;;19384:145;19235:301;:::o;19391:138::-;:10;;-1:-1:-1;;;;;19494:21:90;19391:10;19494:21;;:::i;:::-;3726:10045:86;19494:35:90;19235:301;:::o;19391:87::-;3726:10045:86;;;-1:-1:-1;3726:10045:86;4039:18:9;3726:10045:86;;;-1:-1:-1;3726:10045:86;-1:-1:-1;;;;;19391:10:90;3726:10045:86;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;3726:10045:86;;;19391:87:90;;;;20585:408;3726:10045:86;;;20704:8:90;3726:10045:86;;;20704:26:90;3726:10045:86;;;20704:26:90;3726:10045:86;:::i;:::-;;;;;20704:8:90;3726:10045:86;;;20745:29:90;3726:10045:86;;;20745:29:90;3726:10045:86;;;;20741:194:90;3726:10045:86;;;-1:-1:-1;3726:10045:86;20797:17:90;3726:10045:86;-1:-1:-1;;;;;3726:10045:86;;20790:24:90:o;20741:194::-;3726:10045:86;;;;20704:8:90;3726:10045:86;;;;;;;;20831:104:90;;20741:194;20952:34;20741:194;20952:34;:::i;:::-;20585:408;:::o;20831:104::-;20888:36;3726:10045:86;;-1:-1:-1;;;;;3726:10045:86;;;;;20908:16:90;;3726:10045:86;;20888:36:90;;:::i;3726:10045:86:-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;3726:10045:86;;;;:::o;:::-;;;:::o;21098:171:90:-;21196:66;21098:171;21196:27;;;:::i;:::-;3726:10045:86;-1:-1:-1;3726:10045:86;21226:8:90;3726:10045:86;;21226:26:90;3726:10045:86;-1:-1:-1;3726:10045:86;21226:26:90;3726:10045:86;;;21196:66:90;;:::i;3726:10045:86:-;;-1:-1:-1;;;;;3726:10045:86;;;;;;;-1:-1:-1;;;;;3726:10045:86;;;;:::o;3609:1081:99:-;;;;3726:10045:86;;;;;:::i;:::-;-1:-1:-1;3726:10045:86;;-1:-1:-1;3726:10045:86;;;;;-1:-1:-1;;;;;3726:10045:86;;3910:16:99;;;3906:80;;1622:6:90;1033:23:46;;4065:128:99;;19074:39:47;-1:-1:-1;;;;;19074:39:47;;;:::i;:::-;3726:10045:86;4325:17:99;;;3726:10045:86;;;;4504:31:99;3726:10045:86;;;-1:-1:-1;;;;;3726:10045:86;;4652:31:99;3726:10045:86;;;4652:31:99;;:::i;:::-;3726:10045:86;;;3609:1081:99:o;3726:10045:86:-;-1:-1:-1;;;3925:1:99;3726:10045:86;;;;;3925:1:99;3726:10045:86;4065:128:99;4118:64;3925:1;4118:64;;3726:10045:86;1622:6:90;3726:10045:86;;;3925:1:99;4118:64;3906:80;3726:10045:86;;;;;;;;;;:::i;:::-;3925:1:99;3726:10045:86;;3925:1:99;3949:26;;;3726:10045:86;3942:33:99;:::o;1702:188:8:-;;;;-1:-1:-1;;;;;1829:53:8;1702:188;3726:10045:86;;;1829:53:8;3726:10045:86;1829:53:8;;;;3726:10045:86;1829:53:8;;;3726:10045:86;;;;;;;;;;;1829:53:8;;;;;;:::i;:::-;;:::i;:::-;1702:188::o;1303:160::-;1412:43;1303:160;-1:-1:-1;;;;;3726:10045:86;;1412:43:8;3726:10045:86;1412:43:8;;;;3726:10045:86;1412:43:8;;;3726:10045:86;;;;;1412:43:8;;;;;;;:::i;4059:629::-;2847:1:13;4059:629:8;-1:-1:-1;;;;;3510:55:13;4059:629:8;3726:10045:86;3462:31:13;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;3726:10045:86;;4551:22:8;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;4631:40;2847:1:13;4631:40:8;;3726:10045:86;;2847:1:13;4631:40:8;4551:57;4578:30;;;3462:31:13;4578:30:8;;;;;;;;:::i;:::-;4577:31;4551:57;;;;19579:819:21;;;;-1:-1:-1;;19579:819:21;;19693:150;;;;;;;;;;;;;;;19853:10;;19849:86;;1504:4;19945:13;;;19941:74;;20044:352;;;1504:4;20044:352;;;;;;;;;;;;;;;;19579:819;:::o;19941:74::-;19977:31;;;3726:10045:86;19977:31:21;;3726:10045:86;;;;;19977:31:21;19849:86;-1:-1:-1;;1504:4:21;;;;-1:-1:-1;19899:19:21:o;4625:582:13:-;;4797:8;;-1:-1:-1;3726:10045:86;;5874:21:13;:17;;6046:142;;;;;;5870:383;6225:17;5894:1;6225:17;;5894:1;6225:17;4793:408;3726:10045:86;;5045:22:13;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;-1:-1:-1;;;;;5121:24:13;;5066:1;5121:24;3726:10045:86;5121:24:13;3726:10045:86;;5066:1:13;5121:24;5045:49;5071:18;;;:23;5045:49;",
    "linkReferences": {},
    "immutableReferences": {
      "65296": [{ "start": 12193, "length": 32 }, { "start": 16091, "length": 32 }],
      "67013": [{ "start": 15922, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "MAX_BROKER_FEE()": "027b6744",
    "MAX_TRANCHE_COUNT()": "2fe43041",
    "admin()": "f851a440",
    "allowToHook(address)": "406887cb",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "cancel(uint256)": "40e58ee5",
    "cancelMultiple(uint256[])": "8659c270",
    "createWithDurations((address,address,uint128,address,bool,bool,(uint128,uint40)[],(address,uint256)))": "897f362b",
    "createWithTimestamps((address,address,uint128,address,bool,bool,uint40,(uint128,uint40)[],(address,uint256)))": "32fbe22b",
    "getApproved(uint256)": "081812fc",
    "getAsset(uint256)": "eac8f5b8",
    "getDepositedAmount(uint256)": "a80fc071",
    "getEndTime(uint256)": "9067b677",
    "getRecipient(uint256)": "6d0cee75",
    "getRefundedAmount(uint256)": "d4dbd20b",
    "getSender(uint256)": "b971302a",
    "getStartTime(uint256)": "bc2be1be",
    "getStream(uint256)": "894e9a0d",
    "getTimestamps(uint256)": "57404b12",
    "getTranches(uint256)": "7f5799f9",
    "getWithdrawnAmount(uint256)": "d511609f",
    "isAllowedToHook(address)": "303acc85",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isCancelable(uint256)": "4857501f",
    "isCold(uint256)": "8f69b993",
    "isDepleted(uint256)": "425d30dd",
    "isStream(uint256)": "b8a3be66",
    "isTransferable(uint256)": "b2564569",
    "isWarm(uint256)": "1c1cdd4c",
    "name()": "06fdde03",
    "nextStreamId()": "1e99d569",
    "nftDescriptor()": "44267570",
    "ownerOf(uint256)": "6352211e",
    "refundableAmountOf(uint256)": "1400ecec",
    "renounce(uint256)": "7de6b1db",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setNFTDescriptor(address)": "7cad6cd1",
    "statusOf(uint256)": "ad35efd4",
    "streamedAmountOf(uint256)": "4869e12d",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferAdmin(address)": "75829def",
    "transferFrom(address,address,uint256)": "23b872dd",
    "wasCanceled(uint256)": "f590c176",
    "withdraw(uint256,address,uint128)": "fdd46d60",
    "withdrawMax(uint256,address)": "ea5ead19",
    "withdrawMaxAndTransfer(uint256,address)": "c156a11d",
    "withdrawMultiple(uint256[],uint128[])": "4cc55e11",
    "withdrawableAmountOf(uint256)": "d975dfed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"contract ISablierV2NFTDescriptor\",\"name\":\"initialNFTDescriptor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTrancheCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"PRBMath_MulDiv18_Overflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"depositAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"trancheAmountsSum\",\"type\":\"uint128\"}],\"name\":\"SablierV2LockupTranched_DepositAmountNotEqualToTrancheAmountsSum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"firstTrancheTimestamp\",\"type\":\"uint40\"}],\"name\":\"SablierV2LockupTranched_StartTimeNotLessThanFirstTrancheTimestamp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"SablierV2LockupTranched_TrancheCountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2LockupTranched_TrancheCountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"previousTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"currentTimestamp\",\"type\":\"uint40\"}],\"name\":\"SablierV2LockupTranched_TrancheTimestampsNotOrdered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierV2Lockup_AllowToHookUnsupportedInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierV2Lockup_AllowToHookZeroCodeSize\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"UD60x18\",\"name\":\"brokerFee\",\"type\":\"uint256\"},{\"internalType\":\"UD60x18\",\"name\":\"maxBrokerFee\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_BrokerFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2Lockup_DepositAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"blockTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"endTime\",\"type\":\"uint40\"}],\"name\":\"SablierV2Lockup_EndTimeNotInTheFuture\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"SablierV2Lockup_InvalidHookSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_NotTransferable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_Null\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"name\":\"SablierV2Lockup_Overdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2Lockup_StartTimeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_StreamCanceled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_StreamDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_StreamNotCancelable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_StreamNotDepleted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_StreamSettled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SablierV2Lockup_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_WithdrawAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamIdsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountsCount\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_WithdrawArrayCountsNotEqual\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierV2Lockup_WithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SablierV2Lockup_WithdrawalAddressNotRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"AllowToHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"senderAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"recipientAmount\",\"type\":\"uint128\"}],\"name\":\"CancelLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"deposit\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"brokerFee\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct Lockup.CreateAmounts\",\"name\":\"amounts\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"indexed\":false,\"internalType\":\"struct LockupTranched.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"CreateLockupTranchedStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"RenounceLockupStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISablierV2NFTDescriptor\",\"name\":\"oldNFTDescriptor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISablierV2NFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"SetNFTDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"WithdrawFromLockupStream\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BROKER_FEE\",\"outputs\":[{\"internalType\":\"UD60x18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANCHE_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"allowToHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"duration\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.TrancheWithDuration[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupTranched.CreateWithDurations\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"createWithDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupTranched.CreateWithTimestamps\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"createWithTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getDepositedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"depositedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getEndTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"endTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRefundedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStartTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStream\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"endTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"isCancelable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"wasCanceled\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDepleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isTransferable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"deposited\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawn\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"refunded\",\"type\":\"uint128\"}],\"internalType\":\"struct Lockup.Amounts\",\"name\":\"amounts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupTranched.StreamLT\",\"name\":\"stream\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTimestamps\",\"outputs\":[{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Timestamps\",\"name\":\"timestamps\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTranches\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupTranched.Tranche[]\",\"name\":\"tranches\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getWithdrawnAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isAllowedToHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCancelable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isCold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isDepleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isWarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDescriptor\",\"outputs\":[{\"internalType\":\"contract ISablierV2NFTDescriptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"renounce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2NFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"setNFTDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum Lockup.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"streamedAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"streamedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"wasCanceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"withdrawMaxAndTransfer\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"withdrawMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"withdrawableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"params\":{\"admin\":\"The address of the current contract admin.\",\"recipient\":\"The address of the recipient contract put on the allowlist.\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"params\":{\"asset\":\"The contract address of the ERC-20 asset to be distributed.\",\"recipient\":\"The address of the stream's recipient.\",\"recipientAmount\":\"The amount of assets left for the stream's recipient to withdraw, denoted in units of the asset's decimals.\",\"sender\":\"The address of the stream's sender.\",\"senderAmount\":\"The amount of assets refunded to the stream's sender, denoted in units of the asset's decimals.\",\"streamId\":\"The ID of the stream.\"}},\"CreateLockupTranchedStream(uint256,address,address,address,(uint128,uint128),address,bool,bool,(uint128,uint40)[],(uint40,uint40),address)\":{\"params\":{\"amounts\":\"Struct containing (i) the deposit amount, and (ii) the broker fee amount, both denoted in units of the asset's decimals.\",\"asset\":\"The contract address of the ERC-20 asset to be distributed.\",\"broker\":\"The address of the broker who has helped create the stream, e.g. a front-end website.\",\"cancelable\":\"Boolean indicating whether the stream will be cancelable or not.\",\"funder\":\"The address which has funded the stream.\",\"recipient\":\"The address toward which to stream the assets.\",\"sender\":\"The address distributing the assets, which will have the ability to cancel the stream.\",\"streamId\":\"The ID of the newly created stream.\",\"timestamps\":\"Struct containing (i) the stream's start time and (ii) end time, both as Unix timestamps.\",\"tranches\":\"The tranches the protocol uses to compose the tranched distribution function.\",\"transferable\":\"Boolean indicating whether the stream NFT is transferable or not.\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RenounceLockupStream(uint256)\":{\"params\":{\"streamId\":\"The ID of the stream.\"}},\"SetNFTDescriptor(address,address,address)\":{\"params\":{\"admin\":\"The address of the current contract admin.\",\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\",\"oldNFTDescriptor\":\"The address of the old NFT descriptor contract.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"params\":{\"amount\":\"The amount of assets withdrawn, denoted in units of the asset's decimals.\",\"asset\":\"The contract address of the ERC-20 asset to be distributed.\",\"streamId\":\"The ID of the stream.\",\"to\":\"The address that has received the withdrawn assets.\"}}},\"kind\":\"dev\",\"methods\":{\"allowToHook(address)\":{\"details\":\"Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the contract admin. - `recipient` must have a non-zero code size. - `recipient` must implement {ISablierLockupRecipient}.\",\"params\":{\"recipient\":\"The address of the contract to allow for hooks.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Emits a {Transfer} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.\",\"params\":{\"streamId\":\"The ID of the stream NFT to burn.\"}},\"cancel(uint256)\":{\"details\":\"Emits a {Transfer}, {CancelLockupStream}, and {MetadataUpdate} event. Notes: - If there any assets left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - This function attempts to invoke a hook on the recipient, if the resolved address is a contract. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.\",\"params\":{\"streamId\":\"The ID of the stream to cancel.\"}},\"cancelMultiple(uint256[])\":{\"details\":\"Emits multiple {Transfer}, {CancelLockupStream}, and {MetadataUpdate} events. Notes: - Refer to the notes in {cancel}. Requirements: - All requirements from {cancel} must be met for each stream.\",\"params\":{\"streamIds\":\"The IDs of the streams to cancel.\"}},\"constructor\":{\"details\":\"Emits a {TransferAdmin} event.\",\"params\":{\"initialAdmin\":\"The address of the initial contract admin.\",\"initialNFTDescriptor\":\"The address of the NFT descriptor contract.\",\"maxTrancheCount\":\"The maximum number of tranches allowed in a stream.\"}},\"createWithDurations((address,address,uint128,address,bool,bool,(uint128,uint40)[],(address,uint256)))\":{\"details\":\"Emits a {Transfer} and {CreateLockupTrancheStream} event. Requirements: - All requirements in {createWithTimestamps} must be met for the calculated parameters.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createWithTimestamps((address,address,uint128,address,bool,bool,uint40,(uint128,uint40)[],(address,uint256)))\":{\"details\":\"Emits a {Transfer} and {CreateLockupTrancheStream} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.startTime` must be greater than zero and less than the first tranche's timestamp. - `params.tranches` must have at least one tranche, but not more than `MAX_TRANCHE_COUNT`. - The tranche timestamps must be arranged in ascending order. - The last tranche timestamp (i.e. the stream's end time) must be in the future. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` assets.\",\"params\":{\"params\":\"Struct encapsulating the function parameters, which are documented in {DataTypes}.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getAsset(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getDepositedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getEndTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRecipient(uint256)\":{\"details\":\"Reverts if the NFT has been burned.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRefundedAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSender(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getStartTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getStream(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"stream\":\"See the documentation in {DataTypes}.\"}},\"getTimestamps(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"timestamps\":\"See the documentation in {DataTypes}.\"}},\"getTranches(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getWithdrawnAmount(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isAllowedToHook(address)\":{\"details\":\"See {ISablierLockupRecipient} for more information.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isCancelable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isCold(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isDepleted(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isStream(uint256)\":{\"details\":\"Does not revert if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isTransferable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isWarm(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"refundableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"renounce(uint256)\":{\"details\":\"Emits a {RenounceLockupStream} and {MetadataUpdate} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.\",\"params\":{\"streamId\":\"The ID of the stream to renounce.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setNFTDescriptor(address)\":{\"details\":\"Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\"}},\"statusOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"streamedAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"wasCanceled(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"withdraw(uint256,address,uint128)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} event. Notes: - This function attempts to call a hook on the recipient of the stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party.\",\"params\":{\"amount\":\"The amount to withdraw, denoted in units of the asset's decimals.\",\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn assets.\"}},\"withdrawMax(uint256,address)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.\",\"params\":{\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn assets.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the asset's decimals.\"}},\"withdrawMaxAndTransfer(uint256,address)\":{\"details\":\"Emits a {WithdrawFromLockupStream} and a {Transfer} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be the stream's recipient. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.\",\"params\":{\"newRecipient\":\"The address of the new owner of the stream NFT.\",\"streamId\":\"The ID of the stream NFT to transfer.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn, denoted in units of the asset's decimals.\"}},\"withdrawMultiple(uint256[],uint128[])\":{\"details\":\"Emits multiple {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} events. Notes: - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`. - Each stream ID in the array must not reference a null or depleted stream. - Each amount in the array must be greater than zero and must not exceed the withdrawable amount.\",\"params\":{\"amounts\":\"The amounts to withdraw, denoted in units of the asset's decimals.\",\"streamIds\":\"The IDs of the streams to withdraw from.\"}},\"withdrawableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}}},\"stateVariables\":{\"MAX_TRANCHE_COUNT\":{\"details\":\"This is initialized at construction time and cannot be changed later.\"},\"_tranches\":{\"details\":\"Stream tranches mapped by stream IDs. This complements the `_streams` mapping in {SablierV2Lockup}.\"}},\"title\":\"SablierV2LockupTranched\",\"version\":1},\"userdoc\":{\"errors\":{\"CallerNotAdmin(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the admin.\"}],\"DelegateCall()\":[{\"notice\":\"Thrown when trying to delegate call to a function that disallows delegate calls.\"}],\"PRBMath_MulDiv18_Overflow(uint256,uint256)\":[{\"notice\":\"Thrown when the resultant value in {mulDiv18} overflows uint256.\"}],\"SablierV2LockupTranched_DepositAmountNotEqualToTrancheAmountsSum(uint128,uint128)\":[{\"notice\":\"Thrown when trying to create a stream with a deposit amount not equal to the sum of the tranche amounts.\"}],\"SablierV2LockupTranched_StartTimeNotLessThanFirstTrancheTimestamp(uint40,uint40)\":[{\"notice\":\"Thrown when trying to create a stream with a start time not strictly less than the first tranche timestamp.\"}],\"SablierV2LockupTranched_TrancheCountTooHigh(uint256)\":[{\"notice\":\"Thrown when trying to create a stream with more tranches than the maximum allowed.\"}],\"SablierV2LockupTranched_TrancheCountZero()\":[{\"notice\":\"Thrown when trying to create a stream with no tranches.\"}],\"SablierV2LockupTranched_TrancheTimestampsNotOrdered(uint256,uint40,uint40)\":[{\"notice\":\"Thrown when trying to create a stream with unordered tranche timestamps.\"}],\"SablierV2Lockup_AllowToHookUnsupportedInterface(address)\":[{\"notice\":\"Thrown when trying to allow to hook a contract that doesn't implement the interface correctly.\"}],\"SablierV2Lockup_AllowToHookZeroCodeSize(address)\":[{\"notice\":\"Thrown when trying to allow to hook an address with no code.\"}],\"SablierV2Lockup_BrokerFeeTooHigh(uint256,uint256)\":[{\"notice\":\"Thrown when the broker fee exceeds the maximum allowed fee.\"}],\"SablierV2Lockup_DepositAmountZero()\":[{\"notice\":\"Thrown when trying to create a stream with a zero deposit amount.\"}],\"SablierV2Lockup_EndTimeNotInTheFuture(uint40,uint40)\":[{\"notice\":\"Thrown when trying to create a stream with an end time not in the future.\"}],\"SablierV2Lockup_InvalidHookSelector(address)\":[{\"notice\":\"Thrown when the hook does not return the correct selector.\"}],\"SablierV2Lockup_NotTransferable(uint256)\":[{\"notice\":\"Thrown when trying to transfer Stream NFT when transferability is disabled.\"}],\"SablierV2Lockup_Null(uint256)\":[{\"notice\":\"Thrown when the ID references a null stream.\"}],\"SablierV2Lockup_Overdraw(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to withdraw an amount greater than the withdrawable amount.\"}],\"SablierV2Lockup_StartTimeZero()\":[{\"notice\":\"Thrown when trying to create a stream with a zero start time.\"}],\"SablierV2Lockup_StreamCanceled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a canceled stream.\"}],\"SablierV2Lockup_StreamDepleted(uint256)\":[{\"notice\":\"Thrown when trying to cancel, renounce, or withdraw from a depleted stream.\"}],\"SablierV2Lockup_StreamNotCancelable(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a stream that is not cancelable.\"}],\"SablierV2Lockup_StreamNotDepleted(uint256)\":[{\"notice\":\"Thrown when trying to burn a stream that is not depleted.\"}],\"SablierV2Lockup_StreamSettled(uint256)\":[{\"notice\":\"Thrown when trying to cancel or renounce a settled stream.\"}],\"SablierV2Lockup_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"SablierV2Lockup_WithdrawAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to withdraw zero assets from a stream.\"}],\"SablierV2Lockup_WithdrawArrayCountsNotEqual(uint256,uint256)\":[{\"notice\":\"Thrown when trying to withdraw from multiple streams and the number of stream IDs does not match the number of withdraw amounts.\"}],\"SablierV2Lockup_WithdrawToZeroAddress(uint256)\":[{\"notice\":\"Thrown when trying to withdraw to the zero address.\"}],\"SablierV2Lockup_WithdrawalAddressNotRecipient(uint256,address,address)\":[{\"notice\":\"Thrown when trying to withdraw to an address other than the recipient's.\"}]},\"events\":{\"AllowToHook(address,address)\":{\"notice\":\"Emitted when the admin allows a new recipient contract to hook to Sablier.\"},\"CancelLockupStream(uint256,address,address,address,uint128,uint128)\":{\"notice\":\"Emitted when a stream is canceled.\"},\"CreateLockupTranchedStream(uint256,address,address,address,(uint128,uint128),address,bool,bool,(uint128,uint40)[],(uint40,uint40),address)\":{\"notice\":\"Emitted when a stream is created.\"},\"RenounceLockupStream(uint256)\":{\"notice\":\"Emitted when a sender gives up the right to cancel a stream.\"},\"SetNFTDescriptor(address,address,address)\":{\"notice\":\"Emitted when the admin sets a new NFT descriptor contract.\"},\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"},\"WithdrawFromLockupStream(uint256,address,address,uint128)\":{\"notice\":\"Emitted when assets are withdrawn from a stream.\"}},\"kind\":\"user\",\"methods\":{\"MAX_BROKER_FEE()\":{\"notice\":\"Retrieves the maximum broker fee that can be charged by the broker, denoted as a fixed-point number where 1e18 is 100%.\"},\"MAX_TRANCHE_COUNT()\":{\"notice\":\"The maximum number of tranches allowed in a stream.\"},\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"allowToHook(address)\":{\"notice\":\"Allows a recipient contract to hook to Sablier when a stream is canceled or when assets are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts.\"},\"burn(uint256)\":{\"notice\":\"Burns the NFT associated with the stream.\"},\"cancel(uint256)\":{\"notice\":\"Cancels the stream and refunds any remaining assets to the sender.\"},\"cancelMultiple(uint256[])\":{\"notice\":\"Cancels multiple streams and refunds any remaining assets to the sender.\"},\"createWithDurations((address,address,uint128,address,bool,bool,(uint128,uint40)[],(address,uint256)))\":{\"notice\":\"Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"createWithTimestamps((address,address,uint128,address,bool,bool,uint40,(uint128,uint40)[],(address,uint256)))\":{\"notice\":\"Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT.\"},\"getAsset(uint256)\":{\"notice\":\"Retrieves the address of the ERC-20 asset to be distributed.\"},\"getDepositedAmount(uint256)\":{\"notice\":\"Retrieves the amount deposited in the stream, denoted in units of the asset's decimals.\"},\"getEndTime(uint256)\":{\"notice\":\"Retrieves the stream's end time, which is a Unix timestamp.\"},\"getRecipient(uint256)\":{\"notice\":\"Retrieves the stream's recipient.\"},\"getRefundedAmount(uint256)\":{\"notice\":\"Retrieves the amount refunded to the sender after a cancellation, denoted in units of the asset's decimals. This amount is always zero unless the stream was canceled.\"},\"getSender(uint256)\":{\"notice\":\"Retrieves the stream's sender.\"},\"getStartTime(uint256)\":{\"notice\":\"Retrieves the stream's start time, which is a Unix timestamp.\"},\"getStream(uint256)\":{\"notice\":\"Retrieves the full stream details.\"},\"getTimestamps(uint256)\":{\"notice\":\"Retrieves the stream's start and end timestamps.\"},\"getTranches(uint256)\":{\"notice\":\"Retrieves the tranches used to compose the tranched distribution function.\"},\"getWithdrawnAmount(uint256)\":{\"notice\":\"Retrieves the amount withdrawn from the stream, denoted in units of the asset's decimals.\"},\"isAllowedToHook(address)\":{\"notice\":\"Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when assets are withdrawn.\"},\"isCancelable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`.\"},\"isCold(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted.\"},\"isDepleted(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is depleted.\"},\"isStream(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream exists.\"},\"isTransferable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream NFT can be transferred.\"},\"isWarm(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming.\"},\"nextStreamId()\":{\"notice\":\"Counter for stream IDs, used in the create functions.\"},\"nftDescriptor()\":{\"notice\":\"Contract that generates the non-fungible token URI.\"},\"refundableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the asset's decimals.\"},\"renounce(uint256)\":{\"notice\":\"Removes the right of the stream's sender to cancel the stream.\"},\"setNFTDescriptor(address)\":{\"notice\":\"Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs.\"},\"statusOf(uint256)\":{\"notice\":\"Retrieves the stream's status.\"},\"streamedAmountOf(uint256)\":{\"notice\":\"Calculates the amount streamed to the recipient, denoted in units of the asset's decimals.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"},\"wasCanceled(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream was canceled.\"},\"withdraw(uint256,address,uint128)\":{\"notice\":\"Withdraws the provided amount of assets from the stream to the `to` address.\"},\"withdrawMax(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the provided address `to`.\"},\"withdrawMaxAndTransfer(uint256,address)\":{\"notice\":\"Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`.\"},\"withdrawMultiple(uint256[],uint128[])\":{\"notice\":\"Withdraws assets from streams to the recipient of each stream.\"},\"withdrawableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the recipient can withdraw from the stream, denoted in units of the asset's decimals.\"}},\"notice\":\"See the documentation in {ISablierV2LockupTranched}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierV2LockupTranched.sol\":\"SablierV2LockupTranched\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"node_modules/@prb/math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339\",\"dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f\",\"dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d\",\"dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd\",\"dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7\",\"dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"src/SablierV2LockupTranched.sol\":{\"keccak256\":\"0x1d067021272edd5dd722ffa52b7fd1aedd160ac4e844df813cad45c4cb91ae21\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aafe86ef3b46b776800c28c035d69ea2cf73adb4ceb314170b4a5292708522d9\",\"dweb:/ipfs/QmYctaY1LdYJQFVFkB2VbbbpPMpafHtKD54r9kHsa1DGkM\"]},\"src/abstracts/Adminable.sol\":{\"keccak256\":\"0xdbcb26718ab7e57e1df94fd9ecd7de1345b839e6fb4925dc1a1182da770651b6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://02d559eaa018921cb60d10eb015d1d12e5a3ebe35c68afbbb8fb58370238dd37\",\"dweb:/ipfs/QmTKaj3GqGssMXiNjno8NvzkKrCLHwx3dsDdsoFajCDf5c\"]},\"src/abstracts/NoDelegateCall.sol\":{\"keccak256\":\"0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0\",\"dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP\"]},\"src/abstracts/SablierV2Lockup.sol\":{\"keccak256\":\"0x64df7b1170881782596cbf6e5123c342a2aaab9e3c5bc502032249085d30fd51\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4ef1e6a772eb5ebd08d126ee996c16761139a53ecee9be0091a4cef4112cc5ba\",\"dweb:/ipfs/QmdomtC5swgkrWZWYnNosvNMtjRWdMQ2bkikfdqDDYjZMC\"]},\"src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f\",\"dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z\"]},\"src/interfaces/ISablierLockupRecipient.sol\":{\"keccak256\":\"0x42612dfce3658e4c1ddf7e6016e6c90b36f09a0f1d8974975e9573b8bdc12a72\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c4439d907b73c01d82dde3b2c24459b0563597a74ecdf8f39b1ded96281b598a\",\"dweb:/ipfs/Qme9ZqoAGrAsoJcwEjkHKSLmPZEt85XRzveKhDzBeEYcZC\"]},\"src/interfaces/ISablierV2Lockup.sol\":{\"keccak256\":\"0x9d7c695e1454bc14b3dd323bd8598fd762f616936553852ed55bfa02a7107e93\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2401e189b3769aad662a3f7a965f43c71e606556ad548027649c1f809f4ebf1\",\"dweb:/ipfs/QmeLrGETtVockNTi4SW1jtMRg3xkhbwbVZGuTNRxCfyafp\"]},\"src/interfaces/ISablierV2LockupTranched.sol\":{\"keccak256\":\"0x718aa7584349ecbe28990c187ad0e096d2283320a9366cf1d11fb38137a5d0f7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3e9738d60a01934dda7c253ae3ebb853eda9344ebca73845000251d9a3a2bc49\",\"dweb:/ipfs/QmUexrWgknyqKCDC6LqdBfQ2B5Fv8sdKuAriNEbmaArS7t\"]},\"src/interfaces/ISablierV2NFTDescriptor.sol\":{\"keccak256\":\"0x9f70b5549dd3f057ab460c142431fd0815e5a8501b0d3546644a7ded87dc4714\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15863af93766d1f1c426e0e880b21dfc6ebc3c6ce09a243704b3b95536fe4742\",\"dweb:/ipfs/QmSCNWYQ3MeX9JPqzKF8BtnghaoHasEwXW6sRGiGkDULka\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x9920a5ecf9389c32d771063ae14bc8df1a89c871c2943617d39538c3d9f1853b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://59440fa6c9ad36592126c5eb5f9abd26679477453c6223fa72e5320c31e56564\",\"dweb:/ipfs/QmUpMytnZ6CkMHBtsCcHFq78A9mbtgVZy8eeudffF23Mtv\"]},\"src/libraries/Helpers.sol\":{\"keccak256\":\"0x8c9a6d588207e7aad1c0c4773a62ace1b3b699b6528ab100b39e63a300ba9c4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e5ea24618c9de72961b48ce973c2bfff87eccbe3fcc5d8f2928eb3b129cf474\",\"dweb:/ipfs/Qmbou5G7NzFnQyaqc8pKmTBg6iNw1n3mQvTyaV2ACbLWxc\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0xcb3c3ec3060ab0dbbaa942f08a2fb752bc9b47780ca51f7ed1fdf929f0f13b35\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://feb7f1c8add92280a8dc9c1695a9d5a233a2d7f4d7fefff64e0b5a800311268e\",\"dweb:/ipfs/QmXnYrPTTgrVZx9iBCkkJ73kUwHScBj66MJa1MwKHHdq2a\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "initialAdmin", "type": "address" },
            { "internalType": "contract ISablierV2NFTDescriptor", "name": "initialNFTDescriptor", "type": "address" },
            { "internalType": "uint256", "name": "maxTrancheCount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "target", "type": "address" }],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "CallerNotAdmin"
        },
        { "inputs": [], "type": "error", "name": "DelegateCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "x", "type": "uint256" },
            { "internalType": "uint256", "name": "y", "type": "uint256" }
          ],
          "type": "error",
          "name": "PRBMath_MulDiv18_Overflow"
        },
        {
          "inputs": [
            { "internalType": "uint128", "name": "depositAmount", "type": "uint128" },
            { "internalType": "uint128", "name": "trancheAmountsSum", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierV2LockupTranched_DepositAmountNotEqualToTrancheAmountsSum"
        },
        {
          "inputs": [
            { "internalType": "uint40", "name": "startTime", "type": "uint40" },
            { "internalType": "uint40", "name": "firstTrancheTimestamp", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierV2LockupTranched_StartTimeNotLessThanFirstTrancheTimestamp"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "count", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2LockupTranched_TrancheCountTooHigh"
        },
        { "inputs": [], "type": "error", "name": "SablierV2LockupTranched_TrancheCountZero" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" },
            { "internalType": "uint40", "name": "previousTimestamp", "type": "uint40" },
            { "internalType": "uint40", "name": "currentTimestamp", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierV2LockupTranched_TrancheTimestampsNotOrdered"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierV2Lockup_AllowToHookUnsupportedInterface"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierV2Lockup_AllowToHookZeroCodeSize"
        },
        {
          "inputs": [
            { "internalType": "UD60x18", "name": "brokerFee", "type": "uint256" },
            { "internalType": "UD60x18", "name": "maxBrokerFee", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_BrokerFeeTooHigh"
        },
        { "inputs": [], "type": "error", "name": "SablierV2Lockup_DepositAmountZero" },
        {
          "inputs": [
            { "internalType": "uint40", "name": "blockTimestamp", "type": "uint40" },
            { "internalType": "uint40", "name": "endTime", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_EndTimeNotInTheFuture"
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "type": "error",
          "name": "SablierV2Lockup_InvalidHookSelector"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_NotTransferable"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_Null"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_Overdraw"
        },
        { "inputs": [], "type": "error", "name": "SablierV2Lockup_StartTimeZero" },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_StreamCanceled"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_StreamDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_StreamNotCancelable"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_StreamNotDepleted"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_StreamSettled"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_Unauthorized"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_WithdrawAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamIdsCount", "type": "uint256" },
            { "internalType": "uint256", "name": "amountsCount", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_WithdrawArrayCountsNotEqual"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierV2Lockup_WithdrawToZeroAddress"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "type": "error",
          "name": "SablierV2Lockup_WithdrawalAddressNotRecipient"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "AllowToHook",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "approved", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_fromTokenId", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "_toTokenId", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "asset", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "senderAmount", "type": "uint128", "indexed": false },
            { "internalType": "uint128", "name": "recipientAmount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "CancelLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "funder", "type": "address", "indexed": false },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            {
              "internalType": "struct Lockup.CreateAmounts",
              "name": "amounts",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "deposit", "type": "uint128" },
                { "internalType": "uint128", "name": "brokerFee", "type": "uint128" }
              ],
              "indexed": false
            },
            { "internalType": "contract IERC20", "name": "asset", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "cancelable", "type": "bool", "indexed": false },
            { "internalType": "bool", "name": "transferable", "type": "bool", "indexed": false },
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ],
              "indexed": false
            },
            {
              "internalType": "struct LockupTranched.Timestamps",
              "name": "timestamps",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "start", "type": "uint40" },
                { "internalType": "uint40", "name": "end", "type": "uint40" }
              ],
              "indexed": false
            },
            { "internalType": "address", "name": "broker", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "CreateLockupTranchedStream",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_tokenId", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true }],
          "type": "event",
          "name": "RenounceLockupStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            {
              "internalType": "contract ISablierV2NFTDescriptor",
              "name": "oldNFTDescriptor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ISablierV2NFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetNFTDescriptor",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldAdmin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newAdmin", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "asset", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "WithdrawFromLockupStream",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_BROKER_FEE",
          "outputs": [{ "internalType": "UD60x18", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_TRANCHE_COUNT",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowToHook"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelMultiple"
        },
        {
          "inputs": [
            {
              "internalType": "struct LockupTranched.CreateWithDurations",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                {
                  "internalType": "struct LockupTranched.TrancheWithDuration[]",
                  "name": "tranches",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "uint40", "name": "duration", "type": "uint40" }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurations",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LockupTranched.CreateWithTimestamps",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint128", "name": "totalAmount", "type": "uint128" },
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "cancelable", "type": "bool" },
                { "internalType": "bool", "name": "transferable", "type": "bool" },
                { "internalType": "uint40", "name": "startTime", "type": "uint40" },
                {
                  "internalType": "struct LockupTranched.Tranche[]",
                  "name": "tranches",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    { "internalType": "address", "name": "account", "type": "address" },
                    { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithTimestamps",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getAsset",
          "outputs": [{ "internalType": "contract IERC20", "name": "asset", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositedAmount",
          "outputs": [{ "internalType": "uint128", "name": "depositedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getEndTime",
          "outputs": [{ "internalType": "uint40", "name": "endTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipient",
          "outputs": [{ "internalType": "address", "name": "recipient", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRefundedAmount",
          "outputs": [{ "internalType": "uint128", "name": "refundedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSender",
          "outputs": [{ "internalType": "address", "name": "sender", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getStartTime",
          "outputs": [{ "internalType": "uint40", "name": "startTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getStream",
          "outputs": [
            {
              "internalType": "struct LockupTranched.StreamLT",
              "name": "stream",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint40", "name": "startTime", "type": "uint40" },
                { "internalType": "uint40", "name": "endTime", "type": "uint40" },
                { "internalType": "bool", "name": "isCancelable", "type": "bool" },
                { "internalType": "bool", "name": "wasCanceled", "type": "bool" },
                { "internalType": "contract IERC20", "name": "asset", "type": "address" },
                { "internalType": "bool", "name": "isDepleted", "type": "bool" },
                { "internalType": "bool", "name": "isStream", "type": "bool" },
                { "internalType": "bool", "name": "isTransferable", "type": "bool" },
                {
                  "internalType": "struct Lockup.Amounts",
                  "name": "amounts",
                  "type": "tuple",
                  "components": [
                    { "internalType": "uint128", "name": "deposited", "type": "uint128" },
                    { "internalType": "uint128", "name": "withdrawn", "type": "uint128" },
                    { "internalType": "uint128", "name": "refunded", "type": "uint128" }
                  ]
                },
                {
                  "internalType": "struct LockupTranched.Tranche[]",
                  "name": "tranches",
                  "type": "tuple[]",
                  "components": [
                    { "internalType": "uint128", "name": "amount", "type": "uint128" },
                    { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimestamps",
          "outputs": [
            {
              "internalType": "struct LockupTranched.Timestamps",
              "name": "timestamps",
              "type": "tuple",
              "components": [
                { "internalType": "uint40", "name": "start", "type": "uint40" },
                { "internalType": "uint40", "name": "end", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTranches",
          "outputs": [
            {
              "internalType": "struct LockupTranched.Tranche[]",
              "name": "tranches",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint128", "name": "amount", "type": "uint128" },
                { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawnAmount",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isAllowedToHook",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCancelable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isCold",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isDepleted",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isStream",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransferable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isWarm",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextStreamId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDescriptor",
          "outputs": [{ "internalType": "contract ISablierV2NFTDescriptor", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "refundableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "refundableAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounce"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            { "internalType": "contract ISablierV2NFTDescriptor", "name": "newNFTDescriptor", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFTDescriptor"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "statusOf",
          "outputs": [{ "internalType": "enum Lockup.Status", "name": "status", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "streamedAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "streamedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [{ "internalType": "string", "name": "uri", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "newAdmin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "wasCanceled",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMax",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "newRecipient", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMaxAndTransfer",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256[]", "name": "streamIds", "type": "uint256[]" },
            { "internalType": "uint128[]", "name": "amounts", "type": "uint128[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMultiple"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowToHook(address)": {
            "details": "Emits an {AllowToHook} event. Notes: - Does not revert if the contract is already on the allowlist. - This is an irreversible operation. The contract cannot be removed from the allowlist. Requirements: - `msg.sender` must be the contract admin. - `recipient` must have a non-zero code size. - `recipient` must implement {ISablierLockupRecipient}.",
            "params": { "recipient": "The address of the contract to allow for hooks." }
          },
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "burn(uint256)": {
            "details": "Emits a {Transfer} event. Requirements: - Must not be delegate called. - `streamId` must reference a depleted stream. - The NFT must exist. - `msg.sender` must be either the NFT owner or an approved third party.",
            "params": { "streamId": "The ID of the stream NFT to burn." }
          },
          "cancel(uint256)": {
            "details": "Emits a {Transfer}, {CancelLockupStream}, and {MetadataUpdate} event. Notes: - If there any assets left for the recipient to withdraw, the stream is marked as canceled. Otherwise, the stream is marked as depleted. - This function attempts to invoke a hook on the recipient, if the resolved address is a contract. Requirements: - Must not be delegate called. - The stream must be warm and cancelable. - `msg.sender` must be the stream's sender.",
            "params": { "streamId": "The ID of the stream to cancel." }
          },
          "cancelMultiple(uint256[])": {
            "details": "Emits multiple {Transfer}, {CancelLockupStream}, and {MetadataUpdate} events. Notes: - Refer to the notes in {cancel}. Requirements: - All requirements from {cancel} must be met for each stream.",
            "params": { "streamIds": "The IDs of the streams to cancel." }
          },
          "constructor": {
            "details": "Emits a {TransferAdmin} event.",
            "params": {
              "initialAdmin": "The address of the initial contract admin.",
              "initialNFTDescriptor": "The address of the NFT descriptor contract.",
              "maxTrancheCount": "The maximum number of tranches allowed in a stream."
            }
          },
          "createWithDurations((address,address,uint128,address,bool,bool,(uint128,uint40)[],(address,uint256)))": {
            "details": "Emits a {Transfer} and {CreateLockupTrancheStream} event. Requirements: - All requirements in {createWithTimestamps} must be met for the calculated parameters.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createWithTimestamps((address,address,uint128,address,bool,bool,uint40,(uint128,uint40)[],(address,uint256)))": {
            "details": "Emits a {Transfer} and {CreateLockupTrancheStream} event. Notes: - As long as the tranche timestamps are arranged in ascending order, it is not an error for some of them to be in the past. Requirements: - Must not be delegate called. - `params.totalAmount` must be greater than zero. - If set, `params.broker.fee` must not be greater than `MAX_BROKER_FEE`. - `params.startTime` must be greater than zero and less than the first tranche's timestamp. - `params.tranches` must have at least one tranche, but not more than `MAX_TRANCHE_COUNT`. - The tranche timestamps must be arranged in ascending order. - The last tranche timestamp (i.e. the stream's end time) must be in the future. - The sum of the tranche amounts must equal the deposit amount. - `params.recipient` must not be the zero address. - `msg.sender` must have allowed this contract to spend at least `params.totalAmount` assets.",
            "params": {
              "params": "Struct encapsulating the function parameters, which are documented in {DataTypes}."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getAsset(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getDepositedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getEndTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRecipient(uint256)": {
            "details": "Reverts if the NFT has been burned.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRefundedAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSender(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getStartTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getStream(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "stream": "See the documentation in {DataTypes}." }
          },
          "getTimestamps(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "timestamps": "See the documentation in {DataTypes}." }
          },
          "getTranches(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getWithdrawnAmount(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isAllowedToHook(address)": { "details": "See {ISablierLockupRecipient} for more information." },
          "isApprovedForAll(address,address)": { "details": "See {IERC721-isApprovedForAll}." },
          "isCancelable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isCold(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isDepleted(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isStream(uint256)": {
            "details": "Does not revert if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isTransferable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isWarm(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "refundableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "renounce(uint256)": {
            "details": "Emits a {RenounceLockupStream} and {MetadataUpdate} event. Notes: - This is an irreversible operation. Requirements: - Must not be delegate called. - `streamId` must reference a warm stream. - `msg.sender` must be the stream's sender. - The stream must be cancelable.",
            "params": { "streamId": "The ID of the stream to renounce." }
          },
          "safeTransferFrom(address,address,uint256)": { "details": "See {IERC721-safeTransferFrom}." },
          "safeTransferFrom(address,address,uint256,bytes)": { "details": "See {IERC721-safeTransferFrom}." },
          "setApprovalForAll(address,bool)": { "details": "See {IERC721-setApprovalForAll}." },
          "setNFTDescriptor(address)": {
            "details": "Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newNFTDescriptor": "The address of the new NFT descriptor contract." }
          },
          "statusOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "streamedAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream. Notes: - Upon cancellation of the stream, the amount streamed is calculated as the difference between the deposited amount and the refunded amount. Ultimately, when the stream becomes depleted, the streamed amount is equivalent to the total amount withdrawn.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "supportsInterface(bytes4)": { "details": "See {IERC165-supportsInterface}." },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newAdmin": "The address of the new admin." }
          },
          "transferFrom(address,address,uint256)": { "details": "See {IERC721-transferFrom}." },
          "wasCanceled(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "withdraw(uint256,address,uint128)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} event. Notes: - This function attempts to call a hook on the recipient of the stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - `streamId` must not reference a null or depleted stream. - `to` must not be the zero address. - `amount` must be greater than zero and must not exceed the withdrawable amount. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party.",
            "params": {
              "amount": "The amount to withdraw, denoted in units of the asset's decimals.",
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn assets."
            }
          },
          "withdrawMax(uint256,address)": {
            "details": "Emits a {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.",
            "params": {
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn assets."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the asset's decimals." }
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "details": "Emits a {WithdrawFromLockupStream} and a {Transfer} event. Notes: - If the withdrawable amount is zero, the withdrawal is skipped. - Refer to the notes in {withdraw}. Requirements: - `msg.sender` must be the stream's recipient. - Refer to the requirements in {withdraw}. - Refer to the requirements in {IERC721.transferFrom}.",
            "params": {
              "newRecipient": "The address of the new owner of the stream NFT.",
              "streamId": "The ID of the stream NFT to transfer."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn, denoted in units of the asset's decimals." }
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "details": "Emits multiple {Transfer}, {WithdrawFromLockupStream}, and {MetadataUpdate} events. Notes: - This function attempts to call a hook on the recipient of each stream, unless `msg.sender` is the recipient. Requirements: - Must not be delegate called. - There must be an equal number of `streamIds` and `amounts`. - Each stream ID in the array must not reference a null or depleted stream. - Each amount in the array must be greater than zero and must not exceed the withdrawable amount.",
            "params": {
              "amounts": "The amounts to withdraw, denoted in units of the asset's decimals.",
              "streamIds": "The IDs of the streams to withdraw from."
            }
          },
          "withdrawableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_BROKER_FEE()": {
            "notice": "Retrieves the maximum broker fee that can be charged by the broker, denoted as a fixed-point number where 1e18 is 100%."
          },
          "MAX_TRANCHE_COUNT()": { "notice": "The maximum number of tranches allowed in a stream." },
          "admin()": { "notice": "The address of the admin account or contract." },
          "allowToHook(address)": {
            "notice": "Allows a recipient contract to hook to Sablier when a stream is canceled or when assets are withdrawn. Useful for implementing contracts that hold streams on behalf of users, such as vaults or staking contracts."
          },
          "burn(uint256)": { "notice": "Burns the NFT associated with the stream." },
          "cancel(uint256)": { "notice": "Cancels the stream and refunds any remaining assets to the sender." },
          "cancelMultiple(uint256[])": {
            "notice": "Cancels multiple streams and refunds any remaining assets to the sender."
          },
          "createWithDurations((address,address,uint128,address,bool,bool,(uint128,uint40)[],(address,uint256)))": {
            "notice": "Creates a stream by setting the start time to `block.timestamp`, and the end time to the sum of `block.timestamp` and all specified time durations. The tranche timestamps are derived from these durations. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "createWithTimestamps((address,address,uint128,address,bool,bool,uint40,(uint128,uint40)[],(address,uint256)))": {
            "notice": "Creates a stream with the provided tranche timestamps, implying the end time from the last timestamp. The stream is funded by `msg.sender` and is wrapped in an ERC-721 NFT."
          },
          "getAsset(uint256)": { "notice": "Retrieves the address of the ERC-20 asset to be distributed." },
          "getDepositedAmount(uint256)": {
            "notice": "Retrieves the amount deposited in the stream, denoted in units of the asset's decimals."
          },
          "getEndTime(uint256)": { "notice": "Retrieves the stream's end time, which is a Unix timestamp." },
          "getRecipient(uint256)": { "notice": "Retrieves the stream's recipient." },
          "getRefundedAmount(uint256)": {
            "notice": "Retrieves the amount refunded to the sender after a cancellation, denoted in units of the asset's decimals. This amount is always zero unless the stream was canceled."
          },
          "getSender(uint256)": { "notice": "Retrieves the stream's sender." },
          "getStartTime(uint256)": { "notice": "Retrieves the stream's start time, which is a Unix timestamp." },
          "getStream(uint256)": { "notice": "Retrieves the full stream details." },
          "getTimestamps(uint256)": { "notice": "Retrieves the stream's start and end timestamps." },
          "getTranches(uint256)": {
            "notice": "Retrieves the tranches used to compose the tranched distribution function."
          },
          "getWithdrawnAmount(uint256)": {
            "notice": "Retrieves the amount withdrawn from the stream, denoted in units of the asset's decimals."
          },
          "isAllowedToHook(address)": {
            "notice": "Retrieves a flag indicating whether the provided address is a contract allowed to hook to Sablier when a stream is canceled or when assets are withdrawn."
          },
          "isCancelable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream can be canceled. When the stream is cold, this flag is always `false`."
          },
          "isCold(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is cold, i.e. settled, canceled, or depleted."
          },
          "isDepleted(uint256)": { "notice": "Retrieves a flag indicating whether the stream is depleted." },
          "isStream(uint256)": { "notice": "Retrieves a flag indicating whether the stream exists." },
          "isTransferable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream NFT can be transferred."
          },
          "isWarm(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is warm, i.e. either pending or streaming."
          },
          "nextStreamId()": { "notice": "Counter for stream IDs, used in the create functions." },
          "nftDescriptor()": { "notice": "Contract that generates the non-fungible token URI." },
          "refundableAmountOf(uint256)": {
            "notice": "Calculates the amount that the sender would be refunded if the stream were canceled, denoted in units of the asset's decimals."
          },
          "renounce(uint256)": { "notice": "Removes the right of the stream's sender to cancel the stream." },
          "setNFTDescriptor(address)": {
            "notice": "Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs."
          },
          "statusOf(uint256)": { "notice": "Retrieves the stream's status." },
          "streamedAmountOf(uint256)": {
            "notice": "Calculates the amount streamed to the recipient, denoted in units of the asset's decimals."
          },
          "transferAdmin(address)": { "notice": "Transfers the contract admin to a new address." },
          "wasCanceled(uint256)": { "notice": "Retrieves a flag indicating whether the stream was canceled." },
          "withdraw(uint256,address,uint128)": {
            "notice": "Withdraws the provided amount of assets from the stream to the `to` address."
          },
          "withdrawMax(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the provided address `to`."
          },
          "withdrawMaxAndTransfer(uint256,address)": {
            "notice": "Withdraws the maximum withdrawable amount from the stream to the current recipient, and transfers the NFT to `newRecipient`."
          },
          "withdrawMultiple(uint256[],uint128[])": {
            "notice": "Withdraws assets from streams to the recipient of each stream."
          },
          "withdrawableAmountOf(uint256)": {
            "notice": "Calculates the amount that the recipient can withdraw from the stream, denoted in units of the asset's decimals."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/",
        "solarray/=node_modules/solarray/"
      ],
      "optimizer": { "enabled": true, "runs": 1000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/SablierV2LockupTranched.sol": "SablierV2LockupTranched" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0x6496165b80552785a4b65a239b96e2a5fedf62fe54f002eeed72d75e566d7585",
        "urls": [
          "bzz-raw://3a1623b9a1e03f548787d9f876a26647090f40db765a32a99167cb89da145339",
          "dweb:/ipfs/QmezifZR7md7GzQisgdUmYKWJx1zuiqosVRsmJyNkvJxK9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0xa6d00fe5efa215ac0df25c896e3da99a12fb61e799644b2ec32da947313d3db4",
        "urls": [
          "bzz-raw://cbfcf2d9681a2af1e076439791e2853b466066d867bfcbbf6b46b4a4476f712f",
          "dweb:/ipfs/QmWGznYLYdvsjMSyauT2DoipgGLVGW9KASXEknTgR5eRMv"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xa074831139fc89ca0e5a36086b30eb50896bb6770cd5823461b1f2769017d2f0",
        "urls": [
          "bzz-raw://bd0ce38e8e85ed1a5179c1016af6131eb29674f195c66971d5e6da2764222d0d",
          "dweb:/ipfs/QmbHLp9E8dNuz8Fi2rRcYjLVGfVdacLyjrktQzxf62FLXp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x9b1a35d432ef951a415fae8098b3c609a99b630a3d5464b3c8e1efa8893eea07",
        "urls": [
          "bzz-raw://977ab8a458a6aeaf7cfd125c06e1e4c50fa1147f0b72638d1ae1fb4f6ad37ddd",
          "dweb:/ipfs/QmeVVDpmYm1Tc8kpscF1Z2rtYvkpb1NeGBwRoYgLBuwXeA"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0x462144667aac3f96d5f8dba7aa68fe4c5a3f61e1d7bbbc81bee21168817f9c09",
        "urls": [
          "bzz-raw://d9bb7f11754e2202ed03351e52ef72f7ec85120b4a3ddec2f312b7bf5b08d4d7",
          "dweb:/ipfs/Qmd1tg9PEfdHD1GNmTiB8wUM7VrS4jfQFto3KKn1vfYGjw"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "src/SablierV2LockupTranched.sol": {
        "keccak256": "0x1d067021272edd5dd722ffa52b7fd1aedd160ac4e844df813cad45c4cb91ae21",
        "urls": [
          "bzz-raw://aafe86ef3b46b776800c28c035d69ea2cf73adb4ceb314170b4a5292708522d9",
          "dweb:/ipfs/QmYctaY1LdYJQFVFkB2VbbbpPMpafHtKD54r9kHsa1DGkM"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/Adminable.sol": {
        "keccak256": "0xdbcb26718ab7e57e1df94fd9ecd7de1345b839e6fb4925dc1a1182da770651b6",
        "urls": [
          "bzz-raw://02d559eaa018921cb60d10eb015d1d12e5a3ebe35c68afbbb8fb58370238dd37",
          "dweb:/ipfs/QmTKaj3GqGssMXiNjno8NvzkKrCLHwx3dsDdsoFajCDf5c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/NoDelegateCall.sol": {
        "keccak256": "0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059",
        "urls": [
          "bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0",
          "dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/SablierV2Lockup.sol": {
        "keccak256": "0x64df7b1170881782596cbf6e5123c342a2aaab9e3c5bc502032249085d30fd51",
        "urls": [
          "bzz-raw://4ef1e6a772eb5ebd08d126ee996c16761139a53ecee9be0091a4cef4112cc5ba",
          "dweb:/ipfs/QmdomtC5swgkrWZWYnNosvNMtjRWdMQ2bkikfdqDDYjZMC"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAdminable.sol": {
        "keccak256": "0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b",
        "urls": [
          "bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f",
          "dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierLockupRecipient.sol": {
        "keccak256": "0x42612dfce3658e4c1ddf7e6016e6c90b36f09a0f1d8974975e9573b8bdc12a72",
        "urls": [
          "bzz-raw://c4439d907b73c01d82dde3b2c24459b0563597a74ecdf8f39b1ded96281b598a",
          "dweb:/ipfs/Qme9ZqoAGrAsoJcwEjkHKSLmPZEt85XRzveKhDzBeEYcZC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2Lockup.sol": {
        "keccak256": "0x9d7c695e1454bc14b3dd323bd8598fd762f616936553852ed55bfa02a7107e93",
        "urls": [
          "bzz-raw://e2401e189b3769aad662a3f7a965f43c71e606556ad548027649c1f809f4ebf1",
          "dweb:/ipfs/QmeLrGETtVockNTi4SW1jtMRg3xkhbwbVZGuTNRxCfyafp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2LockupTranched.sol": {
        "keccak256": "0x718aa7584349ecbe28990c187ad0e096d2283320a9366cf1d11fb38137a5d0f7",
        "urls": [
          "bzz-raw://3e9738d60a01934dda7c253ae3ebb853eda9344ebca73845000251d9a3a2bc49",
          "dweb:/ipfs/QmUexrWgknyqKCDC6LqdBfQ2B5Fv8sdKuAriNEbmaArS7t"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2NFTDescriptor.sol": {
        "keccak256": "0x9f70b5549dd3f057ab460c142431fd0815e5a8501b0d3546644a7ded87dc4714",
        "urls": [
          "bzz-raw://15863af93766d1f1c426e0e880b21dfc6ebc3c6ce09a243704b3b95536fe4742",
          "dweb:/ipfs/QmSCNWYQ3MeX9JPqzKF8BtnghaoHasEwXW6sRGiGkDULka"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x9920a5ecf9389c32d771063ae14bc8df1a89c871c2943617d39538c3d9f1853b",
        "urls": [
          "bzz-raw://59440fa6c9ad36592126c5eb5f9abd26679477453c6223fa72e5320c31e56564",
          "dweb:/ipfs/QmUpMytnZ6CkMHBtsCcHFq78A9mbtgVZy8eeudffF23Mtv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Helpers.sol": {
        "keccak256": "0x8c9a6d588207e7aad1c0c4773a62ace1b3b699b6528ab100b39e63a300ba9c4a",
        "urls": [
          "bzz-raw://8e5ea24618c9de72961b48ce973c2bfff87eccbe3fcc5d8f2928eb3b129cf474",
          "dweb:/ipfs/Qmbou5G7NzFnQyaqc8pKmTBg6iNw1n3mQvTyaV2ACbLWxc"
        ],
        "license": "BUSL-1.1"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0xcb3c3ec3060ab0dbbaa942f08a2fb752bc9b47780ca51f7ed1fdf929f0f13b35",
        "urls": [
          "bzz-raw://feb7f1c8add92280a8dc9c1695a9d5a233a2d7f4d7fefff64e0b5a800311268e",
          "dweb:/ipfs/QmXnYrPTTgrVZx9iBCkkJ73kUwHScBj66MJa1MwKHHdq2a"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 86
}
