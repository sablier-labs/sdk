{
  "abi": [
    {
      "inputs": [],
      "name": "CallNotDelegateCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SablierV2ProxyTarget_BatchSizeZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "msgValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creditAmount",
          "type": "uint256"
        }
      ],
      "name": "SablierV2ProxyTarget_CreditAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Batch.CancelMultiple[]",
          "name": "batch",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "batchCancelMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "delta",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.SegmentWithDelta[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Batch.CreateWithDeltas[]",
          "name": "batch",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "batchCreateWithDeltas",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "total",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct Batch.CreateWithDurations[]",
          "name": "batch",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "batchCreateWithDurations",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "startTime",
              "type": "uint40"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "milestone",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Batch.CreateWithMilestones[]",
          "name": "batch",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "batchCreateWithMilestones",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "start",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Range",
              "name": "range",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct Batch.CreateWithRange[]",
          "name": "batch",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "batchCreateWithRange",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "delta",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.SegmentWithDelta[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithDeltas",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "cancelAndCreateWithDeltas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStreamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "total",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithDurations",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "cancelAndCreateWithDurations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStreamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "startTime",
              "type": "uint40"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "milestone",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithMilestones",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "cancelAndCreateWithMilestones",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStreamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "start",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Range",
              "name": "range",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithRange",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "cancelAndCreateWithRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newStreamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        }
      ],
      "name": "cancelMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "delta",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.SegmentWithDelta[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithDeltas",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "createWithDeltas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "total",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithDurations",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "createWithDurations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "startTime",
              "type": "uint40"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "milestone",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithMilestones",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "createWithMilestones",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "start",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Range",
              "name": "range",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithRange",
          "name": "createParams",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "transferData",
          "type": "bytes"
        }
      ],
      "name": "createWithRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "name": "renounce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "withdrawMaxAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2Lockup",
          "name": "lockup",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "streamIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint128[]",
          "name": "amounts",
          "type": "uint128[]"
        }
      ],
      "name": "withdrawMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "delta",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.SegmentWithDelta[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithDeltas",
          "name": "createParams",
          "type": "tuple"
        }
      ],
      "name": "wrapAndCreateWithDeltas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "total",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Durations",
              "name": "durations",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithDurations",
          "name": "createParams",
          "type": "tuple"
        }
      ],
      "name": "wrapAndCreateWithDurations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupDynamic",
          "name": "dynamic",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "startTime",
              "type": "uint40"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "UD2x18",
                  "name": "exponent",
                  "type": "uint64"
                },
                {
                  "internalType": "uint40",
                  "name": "milestone",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupDynamic.Segment[]",
              "name": "segments",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct LockupDynamic.CreateWithMilestones",
          "name": "createParams",
          "type": "tuple"
        }
      ],
      "name": "wrapAndCreateWithMilestones",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISablierV2LockupLinear",
          "name": "lockupLinear",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "cancelable",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "uint40",
                  "name": "start",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "cliff",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                }
              ],
              "internalType": "struct LockupLinear.Range",
              "name": "range",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "UD60x18",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple"
            }
          ],
          "internalType": "struct LockupLinear.CreateWithRange",
          "name": "createParams",
          "type": "tuple"
        }
      ],
      "name": "wrapAndCreateWithRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "streamId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523461002357306080526144a090816100298239608051816132470152f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80630cbbef7f14612bab57806310fad8c8146129b257806313b55f011461294a57806314296d161461258b5780631d165efc1461244b57806345188c01146121165780634c4bfa7714611ec85780636a09d49a14611ddb5780636a9c21b714611b205780636f0995f31461188b578063825976161461169957806386f2891e1461162157806387d23ff1146111fa5780638e80029914610fa157806390e2cd7914610de457806398590ef914610bc85780639dc29fac14610b4d578063a3143b7614610ad4578063aa02171414610a64578063ad26c0fb146109d9578063b956b45f1461092e578063e6a64e02146105fe578063ec5b900f14610439578063f16306121461028a5763f2bf799e1461013057600080fd5b3461023c576003199060808236011261023c5761014b612d80565b9167ffffffffffffffff6024358181116102865761016d9036906004016130be565b929091610178612d96565b90606435908111610282576101919036906004016130be565b92909661019c61323d565b6001600160a01b0380911694853b1561027e576101ef9060409995949951977fa2ffb897000000000000000000000000000000000000000000000000000000008952606060048a01526064890191613200565b9716602486015284870301604485015280865260208096019195855b82811061024a57868087818180890381838c5af1801561023f5761022c5750f35b61023590612e25565b61023c5780f35b80fd5b6040513d84823e3d90fd5b90919282806001926fffffffffffffffffffffffffffffffff61026c8c612f34565b1681520198019101969291909661020b565b8780fd5b8580fd5b8380fd5b503461023c57604060031936011261023c5767ffffffffffffffff600435818111610435576102bd9036906004016130be565b916024918235828111610282576102d89036906004016130be565b9390926102e361323d565b851561040b5786906102f586866140df565b93825b88811061030e578361030b89898961422c565b80f35b610319818a84613191565b356001600160a01b03811680910361040757610336828b85613191565b60209081810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561027e570180359086821161027e578201928160051b3603841361027e57803b1561027e57888880946103cc604051978896879586947f8659c2700000000000000000000000000000000000000000000000000000000086526004860152840191613200565b03925af19081156103fc5785916103e8575b50506001016102f8565b6103f190612e25565b6102865783386103de565b6040513d87823e3d90fd5b8480fd5b60046040517f71594532000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b506003199060408236011261023c57610450612d80565b916024359067ffffffffffffffff9081831161028657610100908336030112610435576040519061048082612dda565b61048c83600401612f01565b825261049a60248401612f76565b94602095868401526104ae60448501612f01565b60408401526104bf60648501612f34565b91606084019283526104d360848601612f01565b94608085019586526104e83660a48301612f95565b60a086015260e48101359182116105fa570136602382011215610282579261056d6105a2938796936105258a973690602460048201359101612ff1565b60c085015261053261323d565b6fffffffffffffffffffffffffffffffff9081341683526001600160a01b03809161055f8289511661430b565b169551169151169084613efd565b6040519485809481937fbf061d0a00000000000000000000000000000000000000000000000000000000835260048301613890565b03925af19182156105ee57916105bc575b50604051908152f35b90508181813d83116105e7575b6105d38183612eaa565b810103126105e25751386105b3565b600080fd5b503d6105c9565b604051903d90823e3d90fd5b8680fd5b503461023c5760808060031936011261092a57610619612d80565b90610622612eeb565b906044359067ffffffffffffffff938483116102825736602384011215610282578260040135948086116105fa576024840193602436918860081b0101116105fa576064359081116105fa5761067c903690600401612dac565b505061068661323d565b841561040b578591865b8681106108ed57506001600160a01b0380921661070c836106af6141ad565b9516610705604051866020987f23b872dd000000000000000000000000000000000000000000000000000000008a840152166024820152306044820152826064820152606481526106ff81612e8e565b89613349565b8783613efd565b61071587613609565b9683899716965b81811061073557604051806107318b82613083565b0390f35b60c0908161074482858b6135dc565b0183606093818c8c86886107598286856135dc565b0161076390613658565b9361076d926135dc565b968d8d8d8161077d8b8a866135dc565b0161078790613665565b928a610794818b846135dc565b61079d90613665565b996107a7926135dc565b6040016107b3906135ec565b9281604051996107c28b612dda565b16895216908701526fffffffffffffffffffffffffffffffff1660408601528401521515888301528436037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016040136105e2576108548a9361088d966040519061082c82612e72565b6108378c8201612f83565b825261084660a0809201612f83565b878301528501523690612f95565b908201528c60405180809681947f1b4103a900000000000000000000000000000000000000000000000000000000835260048301613679565b0391885af180156108e2578b906108b4575b600192506108ad828c613712565b520161071c565b508682813d83116108db575b6108ca8183612eaa565b810103126105e2576001915161089f565b503d6108c0565b6040513d8d823e3d90fd5b926001600160a01b036001916fffffffffffffffffffffffffffffffff610920604061091a898d8c6135dc565b016135ec565b1601169301610690565b5080fd5b503461023c57608060031936011261023c5780610949612d80565b610951612d96565b610959612f15565b9161096261323d565b6001600160a01b03809116803b15610407578492836064926fffffffffffffffffffffffffffffffff60405197889687957ffdd46d6000000000000000000000000000000000000000000000000000000000875260243560048801521660248601521660448401525af1801561023f5761022c5750f35b503461023c57806001600160a01b036109f13661315d565b9290916109fc61323d565b1691823b15610a5f576040517fc156a11d00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b031660248201529082908290818381604481015b03925af1801561023f5761022c5750f35b505050fd5b503461023c576003199060608236011261023c57610a80612d80565b916024359167ffffffffffffffff9182841161092a5761010090843603011261023c5760443591821161023c576020610acc8585610ac13660048801612dac565b505060040190613aed565b604051908152f35b503461023c57806001600160a01b03610aec3661315d565b929091610af761323d565b1691823b15610a5f576040517fea5ead1900000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b03166024820152908290829081838160448101610a4e565b503461023c57604060031936011261023c57806001600160a01b03610b70612d80565b610b7861323d565b16803b15610bc5578180916024604051809481937f42966c68000000000000000000000000000000000000000000000000000000008352833560048401525af1801561023f5761022c5750f35b50fd5b503461023c57604060031936011261023c57610be2612d80565b602435610bed61323d565b6001600160a01b0380921691604051917feac8f5b8000000000000000000000000000000000000000000000000000000008352806004840152846020928385602481895afa94851561023f578295610dac575b50841691604051957f70a0823100000000000000000000000000000000000000000000000000000000918288523060048901528588602481885afa978815610da1578498610d6e575b50813b156102865783916024839260405196879384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af1928315610d61578593610d48575b505060246040518094819382523060048301525afa9182156103fc578592610d18575b505061030b92610d0991613299565b90610d126141ad565b906132d5565b90809250813d8311610d41575b610d2f8183612eaa565b810103126105e2575182610d09610cfa565b503d610d25565b610d5491929350612e25565b6102825782908638610cd7565b50604051903d90823e3d90fd5b86809299508195503d8311610d9a575b610d888183612eaa565b810103126105e2578792519638610c89565b503d610d7e565b6040513d86823e3d90fd5b9094508381813d8311610ddd575b610dc48183612eaa565b8101031261092a5751848116810361092a579338610c40565b503d610dba565b5061014060031936011261023c57610dfa612d80565b906101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c5760405191610e3383612dda565b610e3b612eeb565b8352610e45612d96565b9260209384820152610e55612f15565b9060408101918252610e65612f51565b60608201908152610e74612f67565b608083015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c3601126105e257604051610eaf81612e72565b64ffffffffff60c43581811681036105e257825260e43590811681036105e2578782015260a083015260407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefc3601126105e25760405191610f0f83612e72565b610104356001600160a01b039485821682036105e2578796899686610f6c946105a29852610124358982015260c0860152610f4861323d565b806fffffffffffffffffffffffffffffffff92833416855261055f8289511661430b565b6040519485809481937f1b4103a900000000000000000000000000000000000000000000000000000000835260048301613679565b503461023c5760031960a08136011261092a57610fbc612d80565b9160243591610fc9612d96565b916064359167ffffffffffffffff908184116104355761012090843603011261092a5760843590811161092a57611004903690600401612dac565b505061100e61323d565b61101661323d565b6001600160a01b0380951690604051947feac8f5b80000000000000000000000000000000000000000000000000000000086528060048701526020968787602481875afa9687156111ef5783976111b7575b50861690604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528986602481875afa9586156103fc578596611188575b50813b156104075784916024839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af18015610da157899291859161116f575b505060246040518094819382523060048301525afa9182156105ee579161113e575b5093610d0961113592610acc96613299565b60040190613d70565b9490508585813d8311611168575b6111568183612eaa565b810103126105e2579351610d09611123565b503d61114c565b61117b91929350612e25565b6104355787908338611101565b9095508981813d83116111b0575b6111a08183612eaa565b810103126105e2575194386110b1565b503d611196565b9096508781813d83116111e8575b6111cf8183612eaa565b8101031261043557518681168103610435579538611068565b503d6111c5565b6040513d85823e3d90fd5b503461023c576101c060031936011261023c57611215612d80565b6024803591611222612d96565b6101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c360112610407576101a43567ffffffffffffffff81116102825761126e903690600401612dac565b505061127861323d565b61128061323d565b6001600160a01b03809216604051907feac8f5b800000000000000000000000000000000000000000000000000000000825285600483015260209586838781855afa92831561158e5788936115e9575b508785841691604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528a868b81885afa958615610da15784966115b6575b50813b156102865783918a839260405196879384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af1928315610d61578a93611599575b5050876040518094819382523060048301525afa90811561158e578596979891611556575b5061139b9291610d0991613299565b6113a361323d565b169060c435818116908181036105e25760a435906fffffffffffffffffffffffffffffffff82168092036105e257816114359161142f6113e16141ad565b87604051917f23b872dd000000000000000000000000000000000000000000000000000000008d840152168a8201523060448201528360648201526064815261142981612e8e565b82613349565b86613efd565b604051947f4bc78b730000000000000000000000000000000000000000000000000000000086526064358481168091036105e2576004870152608435908482168092036105e2578601526044850152606484015260e4358015158091036105e25760848401526101049081359064ffffffffff918281168091036105e25760a48601526101249283358381168091036105e25760c48701526101449283359081168091036105e25760e4870152610164359182168092036105e25786948694859360009385015261018435908401525af190811561154a5760009161151d5750604051908152f35b908282813d8311611543575b6115338183612eaa565b8101031261023c575051386105b3565b503d611529565b6040513d6000823e3d90fd5b9450909190508684813d8111611587575b6115718183612eaa565b810103126105e25792518493919061139b61138c565b503d611567565b6040513d8a823e3d90fd5b6115a591929350612e25565b6115b25787908938611367565b8880fd5b8b809297508195503d83116115e2575b6115d08183612eaa565b810103126105e2578a9251943861131a565b503d6115c6565b9092508681813d831161161a575b6116018183612eaa565b8101031261027e5751848116810361027e5791386112d0565b503d6115f7565b503461023c57604060031936011261023c57806001600160a01b03611644612d80565b61164c61323d565b16803b15610bc5578180916024604051809481937f7de6b1db000000000000000000000000000000000000000000000000000000008352833560048401525af1801561023f5761022c5750f35b503461023c5761018060031936011261023c576116b4612d80565b906101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c57610164359067ffffffffffffffff821161023c5750611703903690600401612dac565b505061170d61323d565b608435906001600160a01b038281169181168284036105e257606435926fffffffffffffffffffffffffffffffff84168094036105e2576117a5846117506141ad565b9661179f6040518760209a7f23b872dd000000000000000000000000000000000000000000000000000000008c8401521660248201523060448201528360648201526064815261142981612e8e565b84613efd565b604051937f4bc78b730000000000000000000000000000000000000000000000000000000085526024358481168091036105e25760048601526044358481168091036105e25760248601526044850152606484015260a4358015158091036105e257608484015260c4359164ffffffffff928381168091036105e25760a485015260e4358381168091036105e25760c48501526101049283359081168091036105e25760e48501526101249081359081168091036105e2576000859384928896840152610144938435908401525af190811561154a5760009161151d5750604051908152f35b503461023c5761189a366130ef565b505090926118a661323d565b811561040b578490855b838110611ae957506001600160a01b0361193a9116916119336001600160a01b036118d96141ad565b9216916001600160a01b03604051917f23b872dd0000000000000000000000000000000000000000000000000000000060208401521660248201523060448201528260648201526064815261192d81612e8e565b86613349565b8483613efd565b61194382613609565b93855b83811061195b57604051806107318882613083565b6119668185846137fc565b608001906119758186856137fc565b60200161198190613658565b61198c8287866137fc565b60400161199890613665565b926119a48388876137fc565b60c081016119b19161383c565b9190926119bf858a896137fc565b6119c890613665565b956119d4868b8a6137fc565b6060016119e0906135ec565b91604051976119ee89612dda565b6001600160a01b03168852151560208801526001600160a01b031660408701526fffffffffffffffffffffffffffffffff1660608601526001600160a01b038916608086015236611a3e91612f95565b60a08501523690611a4e92612ff1565b60c0830152836040518080947fbf061d0a0000000000000000000000000000000000000000000000000000000082526004820190611a8b91613890565b03818b5a94602095f1801561158e578890611ab6575b60019250611aaf8289613712565b5201611946565b506020823d602011611ae1575b81611ad060209383612eaa565b810103126105e25760019151611aa1565b3d9150611ac3565b916001600160a01b036001916fffffffffffffffffffffffffffffffff611b16606061091a888a8d6137fc565b16011692016118b0565b503461023c57611b2f366130ef565b5050909192611b3c61323d565b811561040b5784805b838210611da457611bce9150611bbe6001600160a01b03611b646141ad565b9216916001600160a01b03604051917f23b872dd00000000000000000000000000000000000000000000000000000000602084015216602482015230604482015282606482015260648152611bb881612e8e565b87613349565b856001600160a01b038416613efd565b611bd782613609565b93855b838110611bef57604051806107318882613083565b60a0611bfc828688613996565b0190611c146040611c0e83888a613996565b01613658565b86611c2b6060611c25858a85613996565b01613665565b91611c44611c3a858a85613996565b60e081019061383c565b6020611c64878c611c5e611c5983838b613996565b613665565b97613996565b01359464ffffffffff86168603611da057611d3c976fffffffffffffffffffffffffffffffff611cc7966001600160a01b038f948f9864ffffffffff60209c848f608061091a611d049f92611cbc93611cf89e613996565b966040519e8f612e39565b168d52168c8c0152151560408b01521660608901521660808701526001600160a01b038a1660a08701523690612f95565b60c08501523691612ff1565b60e0820152604051809481927f21714be1000000000000000000000000000000000000000000000000000000008352600483016139d6565b03818b6001600160a01b0389165af1801561158e578890611d6d575b60019250611d668289613712565b5201611bda565b506020823d602011611d98575b81611d8760209383612eaa565b810103126105e25760019151611d58565b3d9150611d7a565b8d80fd5b6001600160a01b036001916fffffffffffffffffffffffffffffffff611dd0608061091a878a8c613996565b160116910190611b45565b503461023c57606060031936011261023c57611df5612d80565b8167ffffffffffffffff60243581811161043557611e179036906004016130be565b92909160443590811161092a57611e329036906004016130be565b611e3a61323d565b6001600160a01b03611e4c86866140df565b961691823b1561028657611e9a928492836040518096819582947f8659c270000000000000000000000000000000000000000000000000000000008452602060048501526024840191613200565b03925af1801561023f57611eb4575b505061030b9261422c565b611ebd90612e25565b610286578338611ea9565b503461023c5760031960a08136011261092a57611ee3612d80565b9160243591611ef0612d96565b916064359167ffffffffffffffff908184116104355761010090843603011261092a5760843590811161092a57611f2b903690600401612dac565b5050611f3561323d565b611f3d61323d565b6001600160a01b0380951690604051947feac8f5b80000000000000000000000000000000000000000000000000000000086528060048701526020968787602481875afa9687156111ef5783976120de575b50861690604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528986602481875afa9586156103fc5785966120af575b50813b156104075784916024839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af18015610da1578992918591612096575b505060246040518094819382523060048301525afa9182156105ee5791612065575b5093610d0961205c92610acc96613299565b60040190613aed565b9490508585813d831161208f575b61207d8183612eaa565b810103126105e2579351610d0961204a565b503d612073565b6120a291929350612e25565b6104355787908338612028565b9095508981813d83116120d7575b6120c78183612eaa565b810103126105e257519438611fd8565b503d6120bd565b9096508781813d831161210f575b6120f68183612eaa565b8101031261043557518681168103610435579538611f8f565b503d6120ec565b503461023c5760808060031936011261092a57612131612d80565b9161213a612eeb565b60443567ffffffffffffffff938482116102865736602383011215610286578160040135948086116104075760248301926024369161012089020101116104075760643590811161040757612193903690600401612dac565b505061219d61323d565b841561040b579091839190825b86811061240f57506001600160a01b03809716612226886121c96141ad565b951661221f6040518b6020987f23b872dd000000000000000000000000000000000000000000000000000000008a8401521660248201523060448201528260648201526064815261221981612e8e565b85613349565b8383613efd565b61222f87613609565b9688879316925b81811061224b57604051806107318b82613083565b806122588392838a613726565b60e0018260608d8161226b86858f613726565b0161227590613658565b908b8d87612284818884613726565b9961228e92613726565b0161229890613665565b908d876122a6818884613726565b6122af90613665565b966122b992613726565b6040016122c5906135ec565b9181604051966122d488612dda565b168652168c8501526fffffffffffffffffffffffffffffffff16604084015288828401521515898301528436037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001126105e2576123ae936123778a9360405161233d81612e56565b6123488c8501612f83565b815260a0612357818601612f83565b8783015261236860c0809601612f83565b60408301528501523690612f95565b90820152604051809481927f4bc78b7300000000000000000000000000000000000000000000000000000000835260048301613737565b03818c885af180156124045789906123d6575b600192506123cf828c613712565b5201612236565b508682813d83116123fd575b6123ec8183612eaa565b810103126105e257600191516123c1565b503d6123e2565b6040513d8b823e3d90fd5b926001600160a01b036001916fffffffffffffffffffffffffffffffff61243e604061091a898d8c999c613726565b16011693019390936121aa565b506003199060408236011261023c57612462612d80565b916024359067ffffffffffffffff9081831161028657610120908336030112610435576040519061249282612e39565b61249e83600401612f01565b82526124ac60248401612f83565b94602095868401526124c060448501612f76565b60408401526124d160648501612f01565b60608401526124e260848501612f34565b91608084019283526124f660a48601612f01565b9460a0850195865261250b3660c48301612f95565b60c08601526101048101359182116105fa57013660238201121561028257926125566105a2938796936125498a973690602460048201359101612ff1565b60e085015261053261323d565b6040519485809481937f21714be1000000000000000000000000000000000000000000000000000000008352600483016139d6565b503461023c576101a060031936011261023c576125a6612d80565b60248035916125b3612d96565b6101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c360112610407576101843567ffffffffffffffff8111610282576125ff903690600401612dac565b505061260961323d565b61261161323d565b6040517feac8f5b8000000000000000000000000000000000000000000000000000000008152600481018590526020946001600160a01b0393841686838781845afa92831561158e578893612912575b508483169088604051937f70a0823100000000000000000000000000000000000000000000000000000000928386523060048701528a868b81885afa9586156111ef5783966128e3575b50803b156104355789839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af180156128d8576128c5575b508790876040518094819382523060048301525afa90811561158e57859697989161288d575b506127289291610d0991613299565b61273061323d565b1660c435828116908181036105e25760a435906fffffffffffffffffffffffffffffffff82168092036105e257816127bb916127b561276d6141ad565b88604051917f23b872dd000000000000000000000000000000000000000000000000000000008d840152168a8201523060448201528360648201526064815261142981612e8e565b85613efd565b604051947f1b4103a90000000000000000000000000000000000000000000000000000000086526064358581168091036105e2576004870152608435908582168092036105e2578601526044850152606484015260e4358015158091036105e257608484015264ffffffffff6101048035828116908190036105e25760a48601526101249182359081168091036105e25760c4860152610144359384168094036105e257600085938492889660e485015261016435908401525af190811561154a5760009161151d5750604051908152f35b9450909190508684813d81116128be575b6128a88183612eaa565b810103126105e257925184939190612728612719565b503d61289e565b986128d189929a612e25565b98906126f3565b6040513d8c823e3d90fd5b9095508a81813d831161290b575b6128fb8183612eaa565b81010312610435575194386126ab565b503d6128f1565b9092508681813d8311612943575b61292a8183612eaa565b8101031261027e5751848116810361027e579138612661565b503d612920565b503461023c576003199060608236011261023c57612966612d80565b916024359167ffffffffffffffff9182841161092a5761012090843603011261023c5760443591821161023c576020610acc85856129a73660048801612dac565b505060040190613d70565b5061016060031936011261023c576129c8612d80565b906101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c5760405191612a0183612dda565b612a09612eeb565b8352612a13612d96565b9260209384820152612a23612f15565b60408201908152612a32612f51565b9260608301938452612a42612f67565b608084015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c36011261040757604051612a7d81612e56565b64ffffffffff60c435818116810361027e57825260e435818116810361027e57888301526101043590811681036105fa57604082015260a084015260407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedc36011261040757604051612aee81612e72565b6001600160a01b039061012435828116810361027e579387969389969383612b5f97612b2a9552610144358982015260c0860152610f4861323d565b6040519485809481937f4bc78b7300000000000000000000000000000000000000000000000000000000835260048301613737565b03925af19182156105ee578092612b7b575b5050604051908152f35b9091508282813d8311612ba4575b612b938183612eaa565b8101031261023c5750513880612b71565b503d612b89565b503461023c5761016060031936011261023c57612bc6612d80565b906101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c576101443567ffffffffffffffff811161092a57612c13903690600401612dac565b5050612c1d61323d565b608435916001600160a01b0383811691811682850361028657606435926fffffffffffffffffffffffffffffffff841680940361040757612caf84612c606141ad565b9761179f6040518760209b7f23b872dd000000000000000000000000000000000000000000000000000000008d8401521660248201523060448201528360648201526064815261142981612e8e565b604051937f1b4103a90000000000000000000000000000000000000000000000000000000085526024358481168091036105fa5760048601526044358481168091036105fa5760248601526044850152606484015260a43580151580910361040757608484015260c43564ffffffffff908181168091036102825760a485015260e4359081168091036104075760c4840152610104918235908116809103610407579183858193889560e4840152610124938435908401525af19182156105ee578092612b7b575050604051908152f35b600435906001600160a01b03821682036105e257565b604435906001600160a01b03821682036105e257565b9181601f840112156105e25782359167ffffffffffffffff83116105e257602083818601950101116105e257565b60e0810190811067ffffffffffffffff821117612df657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111612df657604052565b610100810190811067ffffffffffffffff821117612df657604052565b6060810190811067ffffffffffffffff821117612df657604052565b6040810190811067ffffffffffffffff821117612df657604052565b60a0810190811067ffffffffffffffff821117612df657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612df657604052565b602435906001600160a01b03821682036105e257565b35906001600160a01b03821682036105e257565b606435906fffffffffffffffffffffffffffffffff821682036105e257565b35906fffffffffffffffffffffffffffffffff821682036105e257565b608435906001600160a01b03821682036105e257565b60a4359081151582036105e257565b359081151582036105e257565b359064ffffffffff821682036105e257565b91908260409103126105e257604051612fad81612e72565b6020808294612fbb81612f01565b84520135910152565b67ffffffffffffffff8111612df65760051b60200190565b359067ffffffffffffffff821682036105e257565b929192612ffd82612fc4565b60409461300c86519283612eaa565b819584835260208093019160608096028501948186116105e257925b8584106130385750505050505050565b86848303126105e257848791845161304f81612e56565b61305887612f34565b8152613065838801612fdc565b83820152613074868801612f83565b86820152815201930192613028565b6020908160408183019282815285518094520193019160005b8281106130aa575050505090565b83518552938101939281019260010161309c565b9181601f840112156105e25782359167ffffffffffffffff83116105e2576020808501948460051b0101116105e257565b60806003198201126105e2576001600160a01b039160043583811681036105e2579260243590811681036105e2579167ffffffffffffffff916044358381116105e2578261313f916004016130be565b939093926064359182116105e25761315991600401612dac565b9091565b60031960609101126105e2576001600160a01b0360043581811681036105e257916024359160443590811681036105e25790565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1813603018212156105e2570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116105e25760209260051b809284830137010190565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301461326f57565b60046040517fbbff6135000000000000000000000000000000000000000000000000000000008152fd5b919082039182116132a657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b0392909216602483015260448083019390935291815261332f9161332a606483612eaa565b613349565b565b908160209103126105e2575180151581036105e25790565b6040516133a7916001600160a01b031661336282612e72565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16133a161345c565b916134ba565b805190828215928315613444575b505050156133c05750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6134549350820181019101613331565b3882816133b5565b3d156134b5573d9067ffffffffffffffff8211612df657604051916134a960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184612eaa565b82523d6000602084013e565b606090565b9192901561353557508151156134ce575090565b3b156134d75790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156135485750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106135c5575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201613584565b91908110156131d15760081b0190565b356fffffffffffffffffffffffffffffffff811681036105e25790565b9061361382612fc4565b6136206040519182612eaa565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061364e8294612fc4565b0190602036910137565b3580151581036105e25790565b356001600160a01b03811681036105e25790565b61332f9092919260e060c06101208301956001600160a01b038082511685528060208301511660208601526fffffffffffffffffffffffffffffffff6040830151166040860152606082015116606085015260808101511515608085015260a0810151602064ffffffffff918281511660a0880152015116828501520151910190602080916001600160a01b0381511684520151910152565b80518210156131d15760209160051b010190565b91908110156131d157610120020190565b61332f9092919261010060c06101408301956001600160a01b038082511685528060208301511660208601526fffffffffffffffffffffffffffffffff6040830151166040860152606082015116606085015260808101511515608085015260a0810151604064ffffffffff918281511660a0880152826020820151168588015201511660e08501520151910190602080916001600160a01b0381511684520151910152565b602080916001600160a01b036137f282612f01565b1684520135910152565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21813603018212156105e2570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156105e2570180359067ffffffffffffffff82116105e2576020019160608202360383136105e257565b9060208083526101208301908061014060c06001600160a01b0395868151168489015283810151151560408901526040810151968060609816888a01526fffffffffffffffffffffffffffffffff888301511660808a015260808201511660a089015261391760a0820151838a0190602080916001600160a01b0381511684520151910152565b015195610100808201528651809552019401926000905b83821061393d57505050505090565b90919293948382826139896001948a5164ffffffffff604080926fffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152015116910152565b019601949392019061392e565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01813603018212156105e2570190565b9060208083526101408301908061016060e06001600160a01b0395868151168489015264ffffffffff848201511660408901526040810151966060971515888a015280888301511660808a01526fffffffffffffffffffffffffffffffff60808301511660a08a015260a08201511660c0890152613a6e60c0820151838a0190602080916001600160a01b0381511684520151910152565b015195610120808201528651809552019401926000905b838210613a9457505050505090565b9091929394838282613ae06001948a5164ffffffffff604080926fffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152015116910152565b0196019493920190613a85565b90613af661323d565b7f23b872dd000000000000000000000000000000000000000000000000000000006001600160a01b03809316926080830193613b3185613665565b936060613c39818301926fffffffffffffffffffffffffffffffff95613b9987613b5a876135ec565b16613b636141ad565b9a613b936040518560209e8f9e8f8401521660248201523060448201528360648201526064815261142981612e8e565b88613efd565b613c196040519a8b987fbf061d0a000000000000000000000000000000000000000000000000000000008a528a60048b0152613c0e6101248b019885613bde88612f01565b1660248d0152613bef8d8801612f76565b151560448d015285613c0360408901612f01565b1660648d0152612f34565b1660848a0152612f01565b1660a4870152613c2f60c4870160a083016137dd565b60e0810190613ccc565b809193610100610104880152526101448501929160005b828110613ca55750505050600083809203925af190811561154a57600091613c79575b50905090565b82813d8311613c9e575b613c8d8183612eaa565b8101031261023c5750518038613c73565b503d613c83565b9295506001919496508084613cbb829689613d1f565b019501910192879492879694613c50565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156105e257016020813591019167ffffffffffffffff82116105e25760608202360383136105e257565b64ffffffffff613d6a604080936fffffffffffffffffffffffffffffffff613d4682612f34565b16865267ffffffffffffffff613d5e60208301612fdc565b16602087015201612f83565b16910152565b907f23b872dd00000000000000000000000000000000000000000000000000000000613e7692613d9e61323d565b6001600160a01b0380911660a0840191613db783613665565b94613e9760808201916fffffffffffffffffffffffffffffffff93613ddf85613b5a866135ec565b604051998a977f21714be10000000000000000000000000000000000000000000000000000000089528960048a015261014489019683613e1e86612f01565b1660248b015264ffffffffff613e358c8701612f83565b1660448b0152613e4760408601612f76565b151560648b0152613e6b60609785613e608a8901612f01565b1660848d0152612f34565b1660a48a0152612f01565b1660c4870152613e8c60e4870160c083016137dd565b610100810190613ccc565b809193610120610124880152526101648501929160005b828110613ed65750505050600083809203925af190811561154a57600091613c795750905090565b9295506001919496508084613eec829689613d1f565b019501910192879492879694613eae565b91906001600160a01b039283821690604051947fdd62ed3e0000000000000000000000000000000000000000000000000000000086523060048701528116918260248701526020958681604481855afa801561154a57869160009161409f575b5010613f6c575b505050505050565b60008060405196613fee88613fc28b8201937f095ea7b3000000000000000000000000000000000000000000000000000000009889865260248401602090939291936001600160a01b0360408201951681520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018a5289612eaa565b87519082855af190613ffe61345c565b8261406c575b5081614061575b5015614018575b80613f64565b60405194850152602484015260006044840152604483526080830183811067ffffffffffffffff821117612df6576140579361332a9160405282613349565b3880808080614012565b90503b15153861400b565b809192505190878215928315614087575b5050509038614004565b6140979350820181019101613331565b38878161407d565b91508782813d83116140c8575b6140b68183612eaa565b8101031261023c575085905138613f5d565b503d6140ac565b91908110156131d15760051b0190565b9190916140eb83613609565b9260005b8181106140fb57505050565b6001600160a01b03614111611c598385876140cf565b16906040805180937f70a0823100000000000000000000000000000000000000000000000000000000825230600483015281602460209687935afa9182156141a35750600091614172575b506001925061416b8288613712565b52016140ef565b919282813d831161419c575b6141888183612eaa565b8101031261023c575090600191513861415c565b503d61417e565b513d6000823e3d90fd5b6040517f8da5cb5b000000000000000000000000000000000000000000000000000000008152602081600481305afa90811561154a576000916141ee575090565b6020813d8211614224575b8161420660209383612eaa565b8101031261092a5751906001600160a01b038216820361023c575090565b3d91506141f9565b909160005b81811061423e5750505050565b6001600160a01b03614254611c598385886140cf565b16906040805180937f70a0823100000000000000000000000000000000000000000000000000000000825230600483015281602460209687935afa9182156141a357506000916142d8575b50600192506142bc6142d2916142b58488613712565b5190613299565b6142ca611c5984878a6140cf565b610d126141ad565b01614231565b919282813d8311614304575b6142ee8183612eaa565b8101031261023c575051600191906142bc61429f565b503d6142e4565b6001600160a01b031660409081517f70a08231000000000000000000000000000000000000000000000000000000008082526000903060048401526020908184602481885afa938415614496578394614467575b50843b156104355785517fd0e30db00000000000000000000000000000000000000000000000000000000081528381600481348a5af1801561445d5761444a575b508190602487518097819382523060048301525afa91821561443f579161440f575b506143cd9250613299565b903482036143d9575050565b6044925051907fe5f762580000000000000000000000000000000000000000000000000000000082523460048301526024820152fd5b905082813d8311614438575b6144258183612eaa565b810103126105e2576143cd9151386143c2565b503d61441b565b8551903d90823e3d90fd5b92614456839294612e25565b92906143a0565b87513d86823e3d90fd5b9093508181813d831161448f575b61447f8183612eaa565b810103126104355751923861435f565b503d614475565b86513d85823e3d90fd",
    "sourceMap": "450:885:115:-:0;;;;;;;469:4:118;449:25;;450:885:115;;;;;;449:25:118;450:885:115;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b6000803560e01c80630cbbef7f14612bab57806310fad8c8146129b257806313b55f011461294a57806314296d161461258b5780631d165efc1461244b57806345188c01146121165780634c4bfa7714611ec85780636a09d49a14611ddb5780636a9c21b714611b205780636f0995f31461188b578063825976161461169957806386f2891e1461162157806387d23ff1146111fa5780638e80029914610fa157806390e2cd7914610de457806398590ef914610bc85780639dc29fac14610b4d578063a3143b7614610ad4578063aa02171414610a64578063ad26c0fb146109d9578063b956b45f1461092e578063e6a64e02146105fe578063ec5b900f14610439578063f16306121461028a5763f2bf799e1461013057600080fd5b3461023c576003199060808236011261023c5761014b612d80565b9167ffffffffffffffff6024358181116102865761016d9036906004016130be565b929091610178612d96565b90606435908111610282576101919036906004016130be565b92909661019c61323d565b6001600160a01b0380911694853b1561027e576101ef9060409995949951977fa2ffb897000000000000000000000000000000000000000000000000000000008952606060048a01526064890191613200565b9716602486015284870301604485015280865260208096019195855b82811061024a57868087818180890381838c5af1801561023f5761022c5750f35b61023590612e25565b61023c5780f35b80fd5b6040513d84823e3d90fd5b90919282806001926fffffffffffffffffffffffffffffffff61026c8c612f34565b1681520198019101969291909661020b565b8780fd5b8580fd5b8380fd5b503461023c57604060031936011261023c5767ffffffffffffffff600435818111610435576102bd9036906004016130be565b916024918235828111610282576102d89036906004016130be565b9390926102e361323d565b851561040b5786906102f586866140df565b93825b88811061030e578361030b89898961422c565b80f35b610319818a84613191565b356001600160a01b03811680910361040757610336828b85613191565b60209081810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561027e570180359086821161027e578201928160051b3603841361027e57803b1561027e57888880946103cc604051978896879586947f8659c2700000000000000000000000000000000000000000000000000000000086526004860152840191613200565b03925af19081156103fc5785916103e8575b50506001016102f8565b6103f190612e25565b6102865783386103de565b6040513d87823e3d90fd5b8480fd5b60046040517f71594532000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b506003199060408236011261023c57610450612d80565b916024359067ffffffffffffffff9081831161028657610100908336030112610435576040519061048082612dda565b61048c83600401612f01565b825261049a60248401612f76565b94602095868401526104ae60448501612f01565b60408401526104bf60648501612f34565b91606084019283526104d360848601612f01565b94608085019586526104e83660a48301612f95565b60a086015260e48101359182116105fa570136602382011215610282579261056d6105a2938796936105258a973690602460048201359101612ff1565b60c085015261053261323d565b6fffffffffffffffffffffffffffffffff9081341683526001600160a01b03809161055f8289511661430b565b169551169151169084613efd565b6040519485809481937fbf061d0a00000000000000000000000000000000000000000000000000000000835260048301613890565b03925af19182156105ee57916105bc575b50604051908152f35b90508181813d83116105e7575b6105d38183612eaa565b810103126105e25751386105b3565b600080fd5b503d6105c9565b604051903d90823e3d90fd5b8680fd5b503461023c5760808060031936011261092a57610619612d80565b90610622612eeb565b906044359067ffffffffffffffff938483116102825736602384011215610282578260040135948086116105fa576024840193602436918860081b0101116105fa576064359081116105fa5761067c903690600401612dac565b505061068661323d565b841561040b578591865b8681106108ed57506001600160a01b0380921661070c836106af6141ad565b9516610705604051866020987f23b872dd000000000000000000000000000000000000000000000000000000008a840152166024820152306044820152826064820152606481526106ff81612e8e565b89613349565b8783613efd565b61071587613609565b9683899716965b81811061073557604051806107318b82613083565b0390f35b60c0908161074482858b6135dc565b0183606093818c8c86886107598286856135dc565b0161076390613658565b9361076d926135dc565b968d8d8d8161077d8b8a866135dc565b0161078790613665565b928a610794818b846135dc565b61079d90613665565b996107a7926135dc565b6040016107b3906135ec565b9281604051996107c28b612dda565b16895216908701526fffffffffffffffffffffffffffffffff1660408601528401521515888301528436037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016040136105e2576108548a9361088d966040519061082c82612e72565b6108378c8201612f83565b825261084660a0809201612f83565b878301528501523690612f95565b908201528c60405180809681947f1b4103a900000000000000000000000000000000000000000000000000000000835260048301613679565b0391885af180156108e2578b906108b4575b600192506108ad828c613712565b520161071c565b508682813d83116108db575b6108ca8183612eaa565b810103126105e2576001915161089f565b503d6108c0565b6040513d8d823e3d90fd5b926001600160a01b036001916fffffffffffffffffffffffffffffffff610920604061091a898d8c6135dc565b016135ec565b1601169301610690565b5080fd5b503461023c57608060031936011261023c5780610949612d80565b610951612d96565b610959612f15565b9161096261323d565b6001600160a01b03809116803b15610407578492836064926fffffffffffffffffffffffffffffffff60405197889687957ffdd46d6000000000000000000000000000000000000000000000000000000000875260243560048801521660248601521660448401525af1801561023f5761022c5750f35b503461023c57806001600160a01b036109f13661315d565b9290916109fc61323d565b1691823b15610a5f576040517fc156a11d00000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b031660248201529082908290818381604481015b03925af1801561023f5761022c5750f35b505050fd5b503461023c576003199060608236011261023c57610a80612d80565b916024359167ffffffffffffffff9182841161092a5761010090843603011261023c5760443591821161023c576020610acc8585610ac13660048801612dac565b505060040190613aed565b604051908152f35b503461023c57806001600160a01b03610aec3661315d565b929091610af761323d565b1691823b15610a5f576040517fea5ead1900000000000000000000000000000000000000000000000000000000815260048101929092526001600160a01b03166024820152908290829081838160448101610a4e565b503461023c57604060031936011261023c57806001600160a01b03610b70612d80565b610b7861323d565b16803b15610bc5578180916024604051809481937f42966c68000000000000000000000000000000000000000000000000000000008352833560048401525af1801561023f5761022c5750f35b50fd5b503461023c57604060031936011261023c57610be2612d80565b602435610bed61323d565b6001600160a01b0380921691604051917feac8f5b8000000000000000000000000000000000000000000000000000000008352806004840152846020928385602481895afa94851561023f578295610dac575b50841691604051957f70a0823100000000000000000000000000000000000000000000000000000000918288523060048901528588602481885afa978815610da1578498610d6e575b50813b156102865783916024839260405196879384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af1928315610d61578593610d48575b505060246040518094819382523060048301525afa9182156103fc578592610d18575b505061030b92610d0991613299565b90610d126141ad565b906132d5565b90809250813d8311610d41575b610d2f8183612eaa565b810103126105e2575182610d09610cfa565b503d610d25565b610d5491929350612e25565b6102825782908638610cd7565b50604051903d90823e3d90fd5b86809299508195503d8311610d9a575b610d888183612eaa565b810103126105e2578792519638610c89565b503d610d7e565b6040513d86823e3d90fd5b9094508381813d8311610ddd575b610dc48183612eaa565b8101031261092a5751848116810361092a579338610c40565b503d610dba565b5061014060031936011261023c57610dfa612d80565b906101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c5760405191610e3383612dda565b610e3b612eeb565b8352610e45612d96565b9260209384820152610e55612f15565b9060408101918252610e65612f51565b60608201908152610e74612f67565b608083015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c3601126105e257604051610eaf81612e72565b64ffffffffff60c43581811681036105e257825260e43590811681036105e2578782015260a083015260407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefc3601126105e25760405191610f0f83612e72565b610104356001600160a01b039485821682036105e2578796899686610f6c946105a29852610124358982015260c0860152610f4861323d565b806fffffffffffffffffffffffffffffffff92833416855261055f8289511661430b565b6040519485809481937f1b4103a900000000000000000000000000000000000000000000000000000000835260048301613679565b503461023c5760031960a08136011261092a57610fbc612d80565b9160243591610fc9612d96565b916064359167ffffffffffffffff908184116104355761012090843603011261092a5760843590811161092a57611004903690600401612dac565b505061100e61323d565b61101661323d565b6001600160a01b0380951690604051947feac8f5b80000000000000000000000000000000000000000000000000000000086528060048701526020968787602481875afa9687156111ef5783976111b7575b50861690604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528986602481875afa9586156103fc578596611188575b50813b156104075784916024839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af18015610da157899291859161116f575b505060246040518094819382523060048301525afa9182156105ee579161113e575b5093610d0961113592610acc96613299565b60040190613d70565b9490508585813d8311611168575b6111568183612eaa565b810103126105e2579351610d09611123565b503d61114c565b61117b91929350612e25565b6104355787908338611101565b9095508981813d83116111b0575b6111a08183612eaa565b810103126105e2575194386110b1565b503d611196565b9096508781813d83116111e8575b6111cf8183612eaa565b8101031261043557518681168103610435579538611068565b503d6111c5565b6040513d85823e3d90fd5b503461023c576101c060031936011261023c57611215612d80565b6024803591611222612d96565b6101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c360112610407576101a43567ffffffffffffffff81116102825761126e903690600401612dac565b505061127861323d565b61128061323d565b6001600160a01b03809216604051907feac8f5b800000000000000000000000000000000000000000000000000000000825285600483015260209586838781855afa92831561158e5788936115e9575b508785841691604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528a868b81885afa958615610da15784966115b6575b50813b156102865783918a839260405196879384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af1928315610d61578a93611599575b5050876040518094819382523060048301525afa90811561158e578596979891611556575b5061139b9291610d0991613299565b6113a361323d565b169060c435818116908181036105e25760a435906fffffffffffffffffffffffffffffffff82168092036105e257816114359161142f6113e16141ad565b87604051917f23b872dd000000000000000000000000000000000000000000000000000000008d840152168a8201523060448201528360648201526064815261142981612e8e565b82613349565b86613efd565b604051947f4bc78b730000000000000000000000000000000000000000000000000000000086526064358481168091036105e2576004870152608435908482168092036105e2578601526044850152606484015260e4358015158091036105e25760848401526101049081359064ffffffffff918281168091036105e25760a48601526101249283358381168091036105e25760c48701526101449283359081168091036105e25760e4870152610164359182168092036105e25786948694859360009385015261018435908401525af190811561154a5760009161151d5750604051908152f35b908282813d8311611543575b6115338183612eaa565b8101031261023c575051386105b3565b503d611529565b6040513d6000823e3d90fd5b9450909190508684813d8111611587575b6115718183612eaa565b810103126105e25792518493919061139b61138c565b503d611567565b6040513d8a823e3d90fd5b6115a591929350612e25565b6115b25787908938611367565b8880fd5b8b809297508195503d83116115e2575b6115d08183612eaa565b810103126105e2578a9251943861131a565b503d6115c6565b9092508681813d831161161a575b6116018183612eaa565b8101031261027e5751848116810361027e5791386112d0565b503d6115f7565b503461023c57604060031936011261023c57806001600160a01b03611644612d80565b61164c61323d565b16803b15610bc5578180916024604051809481937f7de6b1db000000000000000000000000000000000000000000000000000000008352833560048401525af1801561023f5761022c5750f35b503461023c5761018060031936011261023c576116b4612d80565b906101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c57610164359067ffffffffffffffff821161023c5750611703903690600401612dac565b505061170d61323d565b608435906001600160a01b038281169181168284036105e257606435926fffffffffffffffffffffffffffffffff84168094036105e2576117a5846117506141ad565b9661179f6040518760209a7f23b872dd000000000000000000000000000000000000000000000000000000008c8401521660248201523060448201528360648201526064815261142981612e8e565b84613efd565b604051937f4bc78b730000000000000000000000000000000000000000000000000000000085526024358481168091036105e25760048601526044358481168091036105e25760248601526044850152606484015260a4358015158091036105e257608484015260c4359164ffffffffff928381168091036105e25760a485015260e4358381168091036105e25760c48501526101049283359081168091036105e25760e48501526101249081359081168091036105e2576000859384928896840152610144938435908401525af190811561154a5760009161151d5750604051908152f35b503461023c5761189a366130ef565b505090926118a661323d565b811561040b578490855b838110611ae957506001600160a01b0361193a9116916119336001600160a01b036118d96141ad565b9216916001600160a01b03604051917f23b872dd0000000000000000000000000000000000000000000000000000000060208401521660248201523060448201528260648201526064815261192d81612e8e565b86613349565b8483613efd565b61194382613609565b93855b83811061195b57604051806107318882613083565b6119668185846137fc565b608001906119758186856137fc565b60200161198190613658565b61198c8287866137fc565b60400161199890613665565b926119a48388876137fc565b60c081016119b19161383c565b9190926119bf858a896137fc565b6119c890613665565b956119d4868b8a6137fc565b6060016119e0906135ec565b91604051976119ee89612dda565b6001600160a01b03168852151560208801526001600160a01b031660408701526fffffffffffffffffffffffffffffffff1660608601526001600160a01b038916608086015236611a3e91612f95565b60a08501523690611a4e92612ff1565b60c0830152836040518080947fbf061d0a0000000000000000000000000000000000000000000000000000000082526004820190611a8b91613890565b03818b5a94602095f1801561158e578890611ab6575b60019250611aaf8289613712565b5201611946565b506020823d602011611ae1575b81611ad060209383612eaa565b810103126105e25760019151611aa1565b3d9150611ac3565b916001600160a01b036001916fffffffffffffffffffffffffffffffff611b16606061091a888a8d6137fc565b16011692016118b0565b503461023c57611b2f366130ef565b5050909192611b3c61323d565b811561040b5784805b838210611da457611bce9150611bbe6001600160a01b03611b646141ad565b9216916001600160a01b03604051917f23b872dd00000000000000000000000000000000000000000000000000000000602084015216602482015230604482015282606482015260648152611bb881612e8e565b87613349565b856001600160a01b038416613efd565b611bd782613609565b93855b838110611bef57604051806107318882613083565b60a0611bfc828688613996565b0190611c146040611c0e83888a613996565b01613658565b86611c2b6060611c25858a85613996565b01613665565b91611c44611c3a858a85613996565b60e081019061383c565b6020611c64878c611c5e611c5983838b613996565b613665565b97613996565b01359464ffffffffff86168603611da057611d3c976fffffffffffffffffffffffffffffffff611cc7966001600160a01b038f948f9864ffffffffff60209c848f608061091a611d049f92611cbc93611cf89e613996565b966040519e8f612e39565b168d52168c8c0152151560408b01521660608901521660808701526001600160a01b038a1660a08701523690612f95565b60c08501523691612ff1565b60e0820152604051809481927f21714be1000000000000000000000000000000000000000000000000000000008352600483016139d6565b03818b6001600160a01b0389165af1801561158e578890611d6d575b60019250611d668289613712565b5201611bda565b506020823d602011611d98575b81611d8760209383612eaa565b810103126105e25760019151611d58565b3d9150611d7a565b8d80fd5b6001600160a01b036001916fffffffffffffffffffffffffffffffff611dd0608061091a878a8c613996565b160116910190611b45565b503461023c57606060031936011261023c57611df5612d80565b8167ffffffffffffffff60243581811161043557611e179036906004016130be565b92909160443590811161092a57611e329036906004016130be565b611e3a61323d565b6001600160a01b03611e4c86866140df565b961691823b1561028657611e9a928492836040518096819582947f8659c270000000000000000000000000000000000000000000000000000000008452602060048501526024840191613200565b03925af1801561023f57611eb4575b505061030b9261422c565b611ebd90612e25565b610286578338611ea9565b503461023c5760031960a08136011261092a57611ee3612d80565b9160243591611ef0612d96565b916064359167ffffffffffffffff908184116104355761010090843603011261092a5760843590811161092a57611f2b903690600401612dac565b5050611f3561323d565b611f3d61323d565b6001600160a01b0380951690604051947feac8f5b80000000000000000000000000000000000000000000000000000000086528060048701526020968787602481875afa9687156111ef5783976120de575b50861690604051937f70a0823100000000000000000000000000000000000000000000000000000000918286523060048701528986602481875afa9586156103fc5785966120af575b50813b156104075784916024839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af18015610da1578992918591612096575b505060246040518094819382523060048301525afa9182156105ee5791612065575b5093610d0961205c92610acc96613299565b60040190613aed565b9490508585813d831161208f575b61207d8183612eaa565b810103126105e2579351610d0961204a565b503d612073565b6120a291929350612e25565b6104355787908338612028565b9095508981813d83116120d7575b6120c78183612eaa565b810103126105e257519438611fd8565b503d6120bd565b9096508781813d831161210f575b6120f68183612eaa565b8101031261043557518681168103610435579538611f8f565b503d6120ec565b503461023c5760808060031936011261092a57612131612d80565b9161213a612eeb565b60443567ffffffffffffffff938482116102865736602383011215610286578160040135948086116104075760248301926024369161012089020101116104075760643590811161040757612193903690600401612dac565b505061219d61323d565b841561040b579091839190825b86811061240f57506001600160a01b03809716612226886121c96141ad565b951661221f6040518b6020987f23b872dd000000000000000000000000000000000000000000000000000000008a8401521660248201523060448201528260648201526064815261221981612e8e565b85613349565b8383613efd565b61222f87613609565b9688879316925b81811061224b57604051806107318b82613083565b806122588392838a613726565b60e0018260608d8161226b86858f613726565b0161227590613658565b908b8d87612284818884613726565b9961228e92613726565b0161229890613665565b908d876122a6818884613726565b6122af90613665565b966122b992613726565b6040016122c5906135ec565b9181604051966122d488612dda565b168652168c8501526fffffffffffffffffffffffffffffffff16604084015288828401521515898301528436037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001126105e2576123ae936123778a9360405161233d81612e56565b6123488c8501612f83565b815260a0612357818601612f83565b8783015261236860c0809601612f83565b60408301528501523690612f95565b90820152604051809481927f4bc78b7300000000000000000000000000000000000000000000000000000000835260048301613737565b03818c885af180156124045789906123d6575b600192506123cf828c613712565b5201612236565b508682813d83116123fd575b6123ec8183612eaa565b810103126105e257600191516123c1565b503d6123e2565b6040513d8b823e3d90fd5b926001600160a01b036001916fffffffffffffffffffffffffffffffff61243e604061091a898d8c999c613726565b16011693019390936121aa565b506003199060408236011261023c57612462612d80565b916024359067ffffffffffffffff9081831161028657610120908336030112610435576040519061249282612e39565b61249e83600401612f01565b82526124ac60248401612f83565b94602095868401526124c060448501612f76565b60408401526124d160648501612f01565b60608401526124e260848501612f34565b91608084019283526124f660a48601612f01565b9460a0850195865261250b3660c48301612f95565b60c08601526101048101359182116105fa57013660238201121561028257926125566105a2938796936125498a973690602460048201359101612ff1565b60e085015261053261323d565b6040519485809481937f21714be1000000000000000000000000000000000000000000000000000000008352600483016139d6565b503461023c576101a060031936011261023c576125a6612d80565b60248035916125b3612d96565b6101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c360112610407576101843567ffffffffffffffff8111610282576125ff903690600401612dac565b505061260961323d565b61261161323d565b6040517feac8f5b8000000000000000000000000000000000000000000000000000000008152600481018590526020946001600160a01b0393841686838781845afa92831561158e578893612912575b508483169088604051937f70a0823100000000000000000000000000000000000000000000000000000000928386523060048701528a868b81885afa9586156111ef5783966128e3575b50803b156104355789839260405194859384927f40e58ee500000000000000000000000000000000000000000000000000000000845260048401525af180156128d8576128c5575b508790876040518094819382523060048301525afa90811561158e57859697989161288d575b506127289291610d0991613299565b61273061323d565b1660c435828116908181036105e25760a435906fffffffffffffffffffffffffffffffff82168092036105e257816127bb916127b561276d6141ad565b88604051917f23b872dd000000000000000000000000000000000000000000000000000000008d840152168a8201523060448201528360648201526064815261142981612e8e565b85613efd565b604051947f1b4103a90000000000000000000000000000000000000000000000000000000086526064358581168091036105e2576004870152608435908582168092036105e2578601526044850152606484015260e4358015158091036105e257608484015264ffffffffff6101048035828116908190036105e25760a48601526101249182359081168091036105e25760c4860152610144359384168094036105e257600085938492889660e485015261016435908401525af190811561154a5760009161151d5750604051908152f35b9450909190508684813d81116128be575b6128a88183612eaa565b810103126105e257925184939190612728612719565b503d61289e565b986128d189929a612e25565b98906126f3565b6040513d8c823e3d90fd5b9095508a81813d831161290b575b6128fb8183612eaa565b81010312610435575194386126ab565b503d6128f1565b9092508681813d8311612943575b61292a8183612eaa565b8101031261027e5751848116810361027e579138612661565b503d612920565b503461023c576003199060608236011261023c57612966612d80565b916024359167ffffffffffffffff9182841161092a5761012090843603011261023c5760443591821161023c576020610acc85856129a73660048801612dac565b505060040190613d70565b5061016060031936011261023c576129c8612d80565b906101407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c5760405191612a0183612dda565b612a09612eeb565b8352612a13612d96565b9260209384820152612a23612f15565b60408201908152612a32612f51565b9260608301938452612a42612f67565b608084015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3c36011261040757604051612a7d81612e56565b64ffffffffff60c435818116810361027e57825260e435818116810361027e57888301526101043590811681036105fa57604082015260a084015260407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffedc36011261040757604051612aee81612e72565b6001600160a01b039061012435828116810361027e579387969389969383612b5f97612b2a9552610144358982015260c0860152610f4861323d565b6040519485809481937f4bc78b7300000000000000000000000000000000000000000000000000000000835260048301613737565b03925af19182156105ee578092612b7b575b5050604051908152f35b9091508282813d8311612ba4575b612b938183612eaa565b8101031261023c5750513880612b71565b503d612b89565b503461023c5761016060031936011261023c57612bc6612d80565b906101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261023c576101443567ffffffffffffffff811161092a57612c13903690600401612dac565b5050612c1d61323d565b608435916001600160a01b0383811691811682850361028657606435926fffffffffffffffffffffffffffffffff841680940361040757612caf84612c606141ad565b9761179f6040518760209b7f23b872dd000000000000000000000000000000000000000000000000000000008d8401521660248201523060448201528360648201526064815261142981612e8e565b604051937f1b4103a90000000000000000000000000000000000000000000000000000000085526024358481168091036105fa5760048601526044358481168091036105fa5760248601526044850152606484015260a43580151580910361040757608484015260c43564ffffffffff908181168091036102825760a485015260e4359081168091036104075760c4840152610104918235908116809103610407579183858193889560e4840152610124938435908401525af19182156105ee578092612b7b575050604051908152f35b600435906001600160a01b03821682036105e257565b604435906001600160a01b03821682036105e257565b9181601f840112156105e25782359167ffffffffffffffff83116105e257602083818601950101116105e257565b60e0810190811067ffffffffffffffff821117612df657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111612df657604052565b610100810190811067ffffffffffffffff821117612df657604052565b6060810190811067ffffffffffffffff821117612df657604052565b6040810190811067ffffffffffffffff821117612df657604052565b60a0810190811067ffffffffffffffff821117612df657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612df657604052565b602435906001600160a01b03821682036105e257565b35906001600160a01b03821682036105e257565b606435906fffffffffffffffffffffffffffffffff821682036105e257565b35906fffffffffffffffffffffffffffffffff821682036105e257565b608435906001600160a01b03821682036105e257565b60a4359081151582036105e257565b359081151582036105e257565b359064ffffffffff821682036105e257565b91908260409103126105e257604051612fad81612e72565b6020808294612fbb81612f01565b84520135910152565b67ffffffffffffffff8111612df65760051b60200190565b359067ffffffffffffffff821682036105e257565b929192612ffd82612fc4565b60409461300c86519283612eaa565b819584835260208093019160608096028501948186116105e257925b8584106130385750505050505050565b86848303126105e257848791845161304f81612e56565b61305887612f34565b8152613065838801612fdc565b83820152613074868801612f83565b86820152815201930192613028565b6020908160408183019282815285518094520193019160005b8281106130aa575050505090565b83518552938101939281019260010161309c565b9181601f840112156105e25782359167ffffffffffffffff83116105e2576020808501948460051b0101116105e257565b60806003198201126105e2576001600160a01b039160043583811681036105e2579260243590811681036105e2579167ffffffffffffffff916044358381116105e2578261313f916004016130be565b939093926064359182116105e25761315991600401612dac565b9091565b60031960609101126105e2576001600160a01b0360043581811681036105e257916024359160443590811681036105e25790565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1813603018212156105e2570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116105e25760209260051b809284830137010190565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301461326f57565b60046040517fbbff6135000000000000000000000000000000000000000000000000000000008152fd5b919082039182116132a657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b0392909216602483015260448083019390935291815261332f9161332a606483612eaa565b613349565b565b908160209103126105e2575180151581036105e25790565b6040516133a7916001600160a01b031661336282612e72565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af16133a161345c565b916134ba565b805190828215928315613444575b505050156133c05750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6134549350820181019101613331565b3882816133b5565b3d156134b5573d9067ffffffffffffffff8211612df657604051916134a960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184612eaa565b82523d6000602084013e565b606090565b9192901561353557508151156134ce575090565b3b156134d75790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b8251909150156135485750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106135c5575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201613584565b91908110156131d15760081b0190565b356fffffffffffffffffffffffffffffffff811681036105e25790565b9061361382612fc4565b6136206040519182612eaa565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061364e8294612fc4565b0190602036910137565b3580151581036105e25790565b356001600160a01b03811681036105e25790565b61332f9092919260e060c06101208301956001600160a01b038082511685528060208301511660208601526fffffffffffffffffffffffffffffffff6040830151166040860152606082015116606085015260808101511515608085015260a0810151602064ffffffffff918281511660a0880152015116828501520151910190602080916001600160a01b0381511684520151910152565b80518210156131d15760209160051b010190565b91908110156131d157610120020190565b61332f9092919261010060c06101408301956001600160a01b038082511685528060208301511660208601526fffffffffffffffffffffffffffffffff6040830151166040860152606082015116606085015260808101511515608085015260a0810151604064ffffffffff918281511660a0880152826020820151168588015201511660e08501520151910190602080916001600160a01b0381511684520151910152565b602080916001600160a01b036137f282612f01565b1684520135910152565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21813603018212156105e2570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156105e2570180359067ffffffffffffffff82116105e2576020019160608202360383136105e257565b9060208083526101208301908061014060c06001600160a01b0395868151168489015283810151151560408901526040810151968060609816888a01526fffffffffffffffffffffffffffffffff888301511660808a015260808201511660a089015261391760a0820151838a0190602080916001600160a01b0381511684520151910152565b015195610100808201528651809552019401926000905b83821061393d57505050505090565b90919293948382826139896001948a5164ffffffffff604080926fffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152015116910152565b019601949392019061392e565b91908110156131d15760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01813603018212156105e2570190565b9060208083526101408301908061016060e06001600160a01b0395868151168489015264ffffffffff848201511660408901526040810151966060971515888a015280888301511660808a01526fffffffffffffffffffffffffffffffff60808301511660a08a015260a08201511660c0890152613a6e60c0820151838a0190602080916001600160a01b0381511684520151910152565b015195610120808201528651809552019401926000905b838210613a9457505050505090565b9091929394838282613ae06001948a5164ffffffffff604080926fffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152015116910152565b0196019493920190613a85565b90613af661323d565b7f23b872dd000000000000000000000000000000000000000000000000000000006001600160a01b03809316926080830193613b3185613665565b936060613c39818301926fffffffffffffffffffffffffffffffff95613b9987613b5a876135ec565b16613b636141ad565b9a613b936040518560209e8f9e8f8401521660248201523060448201528360648201526064815261142981612e8e565b88613efd565b613c196040519a8b987fbf061d0a000000000000000000000000000000000000000000000000000000008a528a60048b0152613c0e6101248b019885613bde88612f01565b1660248d0152613bef8d8801612f76565b151560448d015285613c0360408901612f01565b1660648d0152612f34565b1660848a0152612f01565b1660a4870152613c2f60c4870160a083016137dd565b60e0810190613ccc565b809193610100610104880152526101448501929160005b828110613ca55750505050600083809203925af190811561154a57600091613c79575b50905090565b82813d8311613c9e575b613c8d8183612eaa565b8101031261023c5750518038613c73565b503d613c83565b9295506001919496508084613cbb829689613d1f565b019501910192879492879694613c50565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156105e257016020813591019167ffffffffffffffff82116105e25760608202360383136105e257565b64ffffffffff613d6a604080936fffffffffffffffffffffffffffffffff613d4682612f34565b16865267ffffffffffffffff613d5e60208301612fdc565b16602087015201612f83565b16910152565b907f23b872dd00000000000000000000000000000000000000000000000000000000613e7692613d9e61323d565b6001600160a01b0380911660a0840191613db783613665565b94613e9760808201916fffffffffffffffffffffffffffffffff93613ddf85613b5a866135ec565b604051998a977f21714be10000000000000000000000000000000000000000000000000000000089528960048a015261014489019683613e1e86612f01565b1660248b015264ffffffffff613e358c8701612f83565b1660448b0152613e4760408601612f76565b151560648b0152613e6b60609785613e608a8901612f01565b1660848d0152612f34565b1660a48a0152612f01565b1660c4870152613e8c60e4870160c083016137dd565b610100810190613ccc565b809193610120610124880152526101648501929160005b828110613ed65750505050600083809203925af190811561154a57600091613c795750905090565b9295506001919496508084613eec829689613d1f565b019501910192879492879694613eae565b91906001600160a01b039283821690604051947fdd62ed3e0000000000000000000000000000000000000000000000000000000086523060048701528116918260248701526020958681604481855afa801561154a57869160009161409f575b5010613f6c575b505050505050565b60008060405196613fee88613fc28b8201937f095ea7b3000000000000000000000000000000000000000000000000000000009889865260248401602090939291936001600160a01b0360408201951681520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018a5289612eaa565b87519082855af190613ffe61345c565b8261406c575b5081614061575b5015614018575b80613f64565b60405194850152602484015260006044840152604483526080830183811067ffffffffffffffff821117612df6576140579361332a9160405282613349565b3880808080614012565b90503b15153861400b565b809192505190878215928315614087575b5050509038614004565b6140979350820181019101613331565b38878161407d565b91508782813d83116140c8575b6140b68183612eaa565b8101031261023c575085905138613f5d565b503d6140ac565b91908110156131d15760051b0190565b9190916140eb83613609565b9260005b8181106140fb57505050565b6001600160a01b03614111611c598385876140cf565b16906040805180937f70a0823100000000000000000000000000000000000000000000000000000000825230600483015281602460209687935afa9182156141a35750600091614172575b506001925061416b8288613712565b52016140ef565b919282813d831161419c575b6141888183612eaa565b8101031261023c575090600191513861415c565b503d61417e565b513d6000823e3d90fd5b6040517f8da5cb5b000000000000000000000000000000000000000000000000000000008152602081600481305afa90811561154a576000916141ee575090565b6020813d8211614224575b8161420660209383612eaa565b8101031261092a5751906001600160a01b038216820361023c575090565b3d91506141f9565b909160005b81811061423e5750505050565b6001600160a01b03614254611c598385886140cf565b16906040805180937f70a0823100000000000000000000000000000000000000000000000000000000825230600483015281602460209687935afa9182156141a357506000916142d8575b50600192506142bc6142d2916142b58488613712565b5190613299565b6142ca611c5984878a6140cf565b610d126141ad565b01614231565b919282813d8311614304575b6142ee8183612eaa565b8101031261023c575051600191906142bc61429f565b503d6142e4565b6001600160a01b031660409081517f70a08231000000000000000000000000000000000000000000000000000000008082526000903060048401526020908184602481885afa938415614496578394614467575b50843b156104355785517fd0e30db00000000000000000000000000000000000000000000000000000000081528381600481348a5af1801561445d5761444a575b508190602487518097819382523060048301525afa91821561443f579161440f575b506143cd9250613299565b903482036143d9575050565b6044925051907fe5f762580000000000000000000000000000000000000000000000000000000082523460048301526024820152fd5b905082813d8311614438575b6144258183612eaa565b810103126105e2576143cd9151386143c2565b503d61441b565b8551903d90823e3d90fd5b92614456839294612e25565b92906143a0565b87513d86823e3d90fd5b9093508181813d831161448f575b61447f8183612eaa565b810103126104355751923861435f565b503d614475565b86513d85823e3d90fd",
    "sourceMap": "450:885:115:-:0;;;;;;;;;;;;;;;;;;;;;;;1482:68:18;450:885:115;1482:68:18;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:68:18;450:885:115;1482:68:18;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;7727:47:120;;;;;;450:885:115;;;;;;;;7727:47:120;450:885:115;7727:47:120;;450:885:115;;7727:47:120;;450:885:115;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7727:47:120;;;;;;;;;;;;;;;;;;;450:885:115;;7727:47:120;;;;:::i;:::-;450:885:115;;7727:47:120;450:885:115;;;;7727:47:120;450:885:115;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7727:47:120;450:885:115;;;;;;;;;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;;:::i;:::-;4376:14:120;;4372:95;;4567:20;;;;;;:::i;:::-;4603:13;;4618;;;;;;4973:6;;;;;;:::i;:::-;450:885:115;;4603:13:120;4683:8;;;;;:::i;:::-;450:885:115;-1:-1:-1;;;;;450:885:115;;;;;;;4714:8:120;;;;;:::i;:::-;450:885:115;4714:18:120;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4683:50:120;;;;;450:885:115;;;;;;;4683:50:120;;;;;;;450:885:115;4683:50:120;;450:885:115;4683:50:120;;450:885:115;;;;;:::i;:::-;4683:50:120;;;;;;;;;;;;;4603:13;450:885:115;;4829:1:120;450:885:115;4603:13:120;;4683:50;;;;:::i;:::-;450:885:115;;4683:50:120;;;;;450:885:115;;;;;;;;;;;;;4372:95:120;450:885:115;;;4413:43:120;;;;450:885:115;;;;;;-1:-1:-1;;450:885:115;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;22203:72:120;22327:38;450:885:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;531:80:118;;:::i;:::-;450:885:115;22022:9:120;;;450:885:115;;;-1:-1:-1;;;;;450:885:115;;22117:18:120;450:885:115;;;;22117:18:120;:::i;:::-;450:885:115;;;;;;;22203:72:120;;;:::i;:::-;450:885:115;;22327:38:120;;;;;;450:885:115;22327:38:120;;450:885:115;22327:38:120;;;:::i;:::-;;;;;;;;;;;;;450:885:115;;;;;;;;22327:38:120;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;22327:38:120;;;450:885:115;;;;22327:38:120;;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;8457:14:120;;8453:95;;8753:22;8790:5;;8797:13;;;;;;450:885:115;-1:-1:-1;;;;;450:885:115;;;1286:40;1063:11;;;:::i;:::-;450:885;;1482:68:18;450:885:115;;;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;;1482:68:18;;450:885:115;1196:4;450:885;;;;;;;;;;1482:68:18;;;;;:::i;:::-;;;:::i;:::-;1286:40:115;;;:::i;:::-;9212:24:120;;;:::i;:::-;9251:5;;;450:885:115;;9246:663:120;9258:13;;;;;;450:885:115;;;;;;;:::i;:::-;;;;9251:5:120;9484:15;:8;;;;;;;:::i;:::-;:15;450:885:115;;9533:8:120;;;;;;;;;;;:::i;:::-;:19;;;;:::i;:::-;9585:8;;;;:::i;:::-;9636;;;;;;;;;;:::i;:::-;:18;;;;:::i;:::-;9684:8;;;;;;;:::i;:::-;:15;;;:::i;:::-;9734:8;;;;:::i;:::-;450:885:115;9734:20:120;;;;:::i;:::-;450:885:115;;;;;;;;:::i;:::-;;;;;9387:386:120;;;450:885:115;;;;9387:386:120;;450:885:115;9387:386:120;;450:885:115;;;9387:386:120;;;450:885:115;;;;;;;-1:-1:-1;450:885:115;;;;;9337:450:120;450:885:115;;;;;;;:::i;:::-;;9585:18:120;;;450:885:115;:::i;:::-;;;;;;;;;:::i;:::-;;;;;9387:386:120;;450:885:115;;;;:::i;:::-;9387:386:120;;;450:885:115;;;;9337:450:120;;;;;450:885:115;9337:450:120;;450:885:115;9337:450:120;;;:::i;:::-;;;;;;;;;;;;;;9251:5;8916:1;9322:465;;;;;;:::i;:::-;450:885:115;;9251:5:120;;9337:450;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;8916:1:120;450:885:115;;9337:450:120;;;;;;;;450:885:115;;;;;;;;;8790:5:120;8873:8;-1:-1:-1;;;;;8916:1:120;8873:8;450:885:115;8873:20:120;450:885:115;8873:8:120;;;;;:::i;:::-;:20;;:::i;:::-;450:885:115;;;;;8790:5:120;;450:885:115;;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;531:80:118;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;6930:37:120;;;;;450:885:115;;;;;;;;6930:37:120;;;;;450:885:115;6930:37:120;;450:885:115;;;6930:37:120;;450:885:115;;;;;;;;;;;6930:37:120;;;;;;;;450:885:115;;;;;;;;-1:-1:-1;;;;;450:885:115;;;:::i;:::-;531:80:118;;;;;:::i;:::-;450:885:115;7404:53:120;;;;;;450:885:115;;;7404:53:120;;450:885:115;7404:53:120;;450:885:115;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;7404:53:120;;;;;;;;;;;450:885:115;;7404:53:120;450:885:115;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;:::i;:::-;531:80:118;;;;;:::i;:::-;450:885:115;7134:32:120;;;;;;450:885:115;;;7134:32:120;;450:885:115;7134:32:120;;450:885:115;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;7134:32:120;450:885:115;;;;;;;-1:-1:-1;;450:885:115;;;;;;-1:-1:-1;;;;;450:885:115;;:::i;:::-;531:80:118;;:::i;:::-;450:885:115;5128:21:120;;;;;450:885:115;;;;;;5128:21:120;;;;450:885:115;5128:21:120;;450:885:115;;;5128:21:120;;450:885:115;5128:21:120;;;;;;;;450:885:115;;5128:21:120;450:885:115;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;531:80:118;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;;5362:25:120;450:885:115;5362:25:120;;;450:885:115;5362:25:120;;450:885:115;;;5362:25:120;;;450:885:115;5362:25:120;;;;;;;;;;;;;450:885:115;;;;;;;;;5476:30:120;;;;5500:4;450:885:115;5476:30:120;;450:885:115;5476:30:120;;450:885:115;5476:30:120;;;;;;;;;;;;;450:885:115;5547:23:120;;;;;;450:885:115;;;;;;;5547:23:120;;;;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;;;;;;;;;;450:885:115;;;;;;5683:30:120;;;;;;5500:4;450:885:115;5683:30:120;;450:885:115;5683:30:120;;;;;;;;;;;450:885:115;5746:29:120;;5944:12;5746:29;;;;:::i;:::-;5924:11;;;:::i;:::-;5944:12;;:::i;5683:30::-;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;5746:29:120;5683:30;;;;;;;5547:23;;;;;;;:::i;:::-;450:885:115;;5547:23:120;;;;;;;450:885:115;;;;;;;;;;;5476:30:120;;;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;5476:30:120;;;;;;;;;;450:885:115;;;;;;;;;5362:25:120;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;;;;;5362:25:120;;;;;;;;;450:885:115;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;14481:77:120;450:885:115;14610:46:120;450:885:115;;;;;;;;;;;;531:80:118;;:::i;:::-;450:885:115;;14300:9:120;;;450:885:115;;;14395:18:120;450:885:115;;;;14395:18:120;:::i;14481:77::-;450:885:115;;14610:46:120;;;;;;450:885:115;14610:46:120;;450:885:115;14610:46:120;;;:::i;450:885:115:-;;;;;-1:-1:-1;;450:885:115;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;;5362:25:120;450:885:115;5362:25:120;;;450:885:115;5362:25:120;;450:885:115;;5362:25:120;;;450:885:115;5362:25:120;;;;;;;;;;;;;450:885:115;;;;;;;;;5476:30:120;;;;5500:4;450:885:115;5476:30:120;;450:885:115;5476:30:120;;450:885:115;5476:30:120;;;;;;;;;;;;;450:885:115;5547:23:120;;;;;;450:885:115;;;;;;;5547:23:120;;;;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;;;;;;;;;;;;450:885:115;;;;;;5683:30:120;;;;;;5500:4;450:885:115;5683:30:120;;450:885:115;5683:30:120;;;;;;;;;;450:885:115;5746:29:120;;;5944:12;5746:29;20511:71;5746:29;;:::i;5944:12::-;450:885:115;;20511:71:120;;:::i;5683:30::-;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;5746:29:120;5683:30;;;;;;;5547:23;;;;;;;:::i;:::-;450:885:115;;5547:23:120;;;;;;5476:30;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;5476:30:120;;;;;;;;;5362:25;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;;;;;5362:25:120;;;;;;;;;;450:885:115;;;;;;;;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;5362:25:120;450:885:115;5362:25:120;;;450:885:115;5362:25:120;;450:885:115;;5362:25:120;;;;;;;;;;;;;;;;;450:885:115;;;;;;;;;;;5476:30:120;;;;5500:4;450:885:115;5476:30:120;;450:885:115;5476:30:120;;;;;;;;;;;;;;;;450:885:115;5547:23:120;;;;;;450:885:115;;;;;;;5547:23:120;;;;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;;;;;;;;;;450:885:115;;;;;;5683:30:120;;;;;;5500:4;450:885:115;5683:30:120;;450:885:115;5683:30:120;;;;;;;;;;;;;;450:885:115;5746:29:120;5944:12;5746:29;;;;;:::i;5944:12::-;531:80:118;;:::i;:::-;450:885:115;;13711:18:120;450:885:115;;;;;;;;;;13731:24:120;450:885:115;;;;;;;;;;1063:11;1286:40;1063:11;1482:68:18;1063:11:115;;:::i;:::-;450:885;;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;1482:68:18;;;450:885:115;5500:4:120;450:885:115;;;;;;;;;;1482:68:18;;;;;:::i;:::-;;;:::i;:::-;1286:40:115;;:::i;:::-;450:885;;13791:42:120;450:885:115;13791:42:120;;450:885:115;;;;;;;;;;;13791:42:120;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13731:24:120;450:885:115;;;;;;;;;;;;;;;13711:18:120;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13791:42:120;;;;;;;450:885:115;13791:42:120;;;450:885:115;;;;;;;13791:42:120;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;13791:42:120;;;;;;;;;450:885:115;;;;;;;;;5683:30:120;;-1:-1:-1;5683:30:120;;;-1:-1:-1;5683:30:120;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;5683:30:120;450:885:115;5944:12:120;5683:30;;;;;;;;450:885:115;;;;;;;;;5547:23:120;;;;;;;:::i;:::-;450:885:115;;5547:23:120;;;;;;450:885:115;;;;5476:30:120;;;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;5476:30:120;;;;;;;;;5362:25;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;;;;;5362:25:120;;;;;;;;;450:885:115;;;;;;-1:-1:-1;;450:885:115;;;;;;-1:-1:-1;;;;;450:885:115;;:::i;:::-;531:80:118;;:::i;:::-;450:885:115;6667:25:120;;;;;450:885:115;;;;;;6667:25:120;;;;450:885:115;6667:25:120;;450:885:115;;;6667:25:120;;450:885:115;6667:25:120;;;;;;;;450:885:115;;;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;13711:18:120;450:885:115;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;13731:24:120;450:885:115;;;;;;;;;;1286:40;1063:11;;;:::i;:::-;450:885;1482:68:18;450:885:115;;1482:68:18;;;450:885:115;1482:68:18;;;;450:885:115;;1482:68:18;;450:885:115;1196:4;450:885;;;;;13731:24:120;450:885:115;;;13731:24:120;1482:68:18;;;;;:::i;:::-;1286:40:115;;:::i;:::-;450:885;;13791:42:120;450:885:115;13791:42:120;;450:885:115;;;;;;;;;;;13791:42:120;;450:885:115;;;;;;;;;;;;;;;;;;;13731:24:120;450:885:115;;;;;;;;;;;;;13711:18:120;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13791:42:120;;;;;;;450:885:115;13791:42:120;;;450:885:115;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;;;:::i;:::-;16140:14:120;;16136:95;;16436:22;16473:5;;16480:13;;;;;;450:885:115;-1:-1:-1;;;;;1286:40:115;450:885;;1063:11;1482:68:18;-1:-1:-1;;;;;1063:11:115;;:::i;:::-;450:885;;;-1:-1:-1;;;;;450:885:115;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;1482:68:18;;;450:885:115;1196:4;450:885;;;;;;;;;;1482:68:18;;;;;:::i;:::-;;;:::i;:::-;1286:40:115;;;:::i;:::-;16903:24:120;;;:::i;:::-;16942:5;;16949:13;;;;;;450:885:115;;;;;;;:::i;16942:5:120:-;17165:8;;;;;:::i;:::-;:15;;17214:8;;;;;;:::i;:::-;1482:68:18;17214:19:120;;;;:::i;:::-;17266:8;;;;;:::i;:::-;450:885:115;17266:18:120;;;;:::i;:::-;17316:8;;;;;;:::i;:::-;:17;;;;;;:::i;:::-;17363:8;;;;;;;;:::i;:::-;:15;;;:::i;:::-;17413:8;;;;;;:::i;:::-;450:885:115;17413:20:120;;;;:::i;:::-;450:885:115;;;;;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;1482:68:18;17070:382:120;;450:885:115;-1:-1:-1;;;;;450:885:115;;17070:382:120;;450:885:115;;;;17070:382:120;;450:885:115;-1:-1:-1;;;;;450:885:115;;17165:15:120;17070:382;;450:885:115;;;;;:::i;:::-;17070:382:120;;;450:885:115;;;;;;:::i;:::-;17316:17:120;17070:382;;450:885:115;;;;17028:438:120;;;450:885:115;17028:438:120;;450:885:115;17028:438:120;;;;;;:::i;:::-;;;;;;1482:68:18;17028:438:120;;;;;;;;;;16942:5;16599:1;17013:453;;;;;;:::i;:::-;450:885:115;;16942:5:120;;17028:438;;1482:68:18;17028:438:120;;1482:68:18;17028:438:120;;;;;;1482:68:18;17028:438:120;;;:::i;:::-;;;450:885:115;;;;16599:1:120;450:885:115;;17028:438:120;;;;;-1:-1:-1;17028:438:120;;16473:5;16556:8;-1:-1:-1;;;;;16599:1:120;16556:8;450:885:115;16556:20:120;450:885:115;16556:8:120;;;;;:::i;:20::-;450:885:115;;;;;16473:5:120;;450:885:115;;;;;;;;:::i;:::-;531:80:118;;;;;;;:::i;:::-;18050:14:120;;18046:95;;18346:22;;18390:13;;;;;;1286:40:115;1063:11;;1482:68:18;-1:-1:-1;;;;;1063:11:115;;:::i;:::-;450:885;;;-1:-1:-1;;;;;450:885:115;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;1482:68:18;;;450:885:115;1196:4;450:885;;;;;;;;;;1482:68:18;;;;;:::i;:::-;;;:::i;:::-;450:885:115;-1:-1:-1;;;;;450:885:115;;1286:40;:::i;:::-;18813:24:120;;;:::i;:::-;18852:5;;18859:13;;;;;;450:885:115;;;;;;;:::i;18852:5:120:-;19083:15;:8;;;;;:::i;:::-;:15;19132:8;:19;450:885:115;19132:8:120;;;;;:::i;:::-;:19;;:::i;:::-;19184:8;:18;450:885:115;19184:8:120;;;;;:::i;:::-;:18;;:::i;:::-;19234:8;:17;:8;;;;;:::i;:::-;450:885:115;19234:17:120;;;;:::i;:::-;1482:68:18;19329:8:120;19281;;:15;:8;;;;;:::i;:::-;:15;:::i;:::-;19329:8;;:::i;:::-;:18;450:885:115;;;;;;;;;18938:497:120;19382:8;450:885:115;;19382:8:120;-1:-1:-1;;;;;19382:8:120;;;;450:885:115;1482:68:18;19382:8:120;;;18466:20;19382:8;450:885:115;19382:8:120;;:20;:8;450:885:115;19382:8:120;;:::i;:20::-;450:885:115;;;;;;:::i;:::-;;;;;18984:437:120;;;450:885:115;;;;18984:437:120;;450:885:115;;;18984:437:120;;450:885:115;;18466:20:120;18984:437;;450:885:115;-1:-1:-1;;;;;450:885:115;;19083:15:120;18984:437;;450:885:115;;;;:::i;:::-;18984:437:120;;;450:885:115;;;;:::i;:::-;;18984:437:120;;450:885:115;;;18938:497:120;;;;450:885:115;18938:497:120;;450:885:115;18938:497:120;;;:::i;:::-;;450:885:115;;-1:-1:-1;;;;;450:885:115;;18938:497:120;;;;;;;;;;18852:5;18509:1;18923:512;;;;;;:::i;:::-;450:885:115;;18852:5:120;;18938:497;;1482:68:18;18938:497:120;;1482:68:18;18938:497:120;;;;;;1482:68:18;18938:497:120;;;:::i;:::-;;;450:885:115;;;;18509:1:120;450:885:115;;18938:497:120;;;;;-1:-1:-1;18938:497:120;;450:885:115;;;;18383:5:120;-1:-1:-1;;;;;18509:1:120;18466:8;450:885:115;18466:20:120;;:8;;;;;:::i;:20::-;450:885:115;;;;;18383:5:120;;;450:885:115;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;:::i;:::-;-1:-1:-1;;;;;6295:20:120;;;;:::i;:::-;450:885:115;;6357:32:120;;;;;;450:885:115;;;;;;;6357:32:120;;;;;;450:885:115;6357:32:120;;450:885:115;;6357:32:120;;450:885:115;;;;;;:::i;:::-;6357:32:120;;;;;;;;;;450:885:115;6508:6:120;;;;;:::i;6357:32::-;;;;:::i;:::-;450:885:115;;6357:32:120;;;;450:885:115;;;;;-1:-1:-1;;450:885:115;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;;5362:25:120;450:885:115;5362:25:120;;;450:885:115;5362:25:120;;450:885:115;;5362:25:120;;;450:885:115;5362:25:120;;;;;;;;;;;;;450:885:115;;;;;;;;;5476:30:120;;;;5500:4;450:885:115;5476:30:120;;450:885:115;5476:30:120;;450:885:115;5476:30:120;;;;;;;;;;;;;450:885:115;5547:23:120;;;;;;450:885:115;;;;;;;5547:23:120;;;;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;;;;;;;;;;;;450:885:115;;;;;;5683:30:120;;;;;;5500:4;450:885:115;5683:30:120;;450:885:115;5683:30:120;;;;;;;;;;450:885:115;5746:29:120;;;5944:12;5746:29;19996:67;5746:29;;:::i;5944:12::-;450:885:115;;19996:67:120;;:::i;5683:30::-;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;5746:29:120;5683:30;;;;;;;5547:23;;;;;;;:::i;:::-;450:885:115;;5547:23:120;;;;;;5476:30;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;5476:30:120;;;;;;;;;5362:25;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;;;;;5362:25:120;;;;;;;;;450:885:115;;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;10361:14:120;;10357:95;;10638:9;;;;-1:-1:-1;10638:9:120;10701:13;;;;;;450:885:115;-1:-1:-1;;;;;450:885:115;;;1286:40;1063:11;;;:::i;:::-;450:885;;1482:68:18;450:885:115;;;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;;1482:68:18;;450:885:115;1196:4;450:885;;;;;;;;;;1482:68:18;;;;;:::i;:::-;;;:::i;:::-;1286:40:115;;;:::i;:::-;11115:24:120;;;:::i;:::-;11154:5;;;450:885:115;;11149:647:120;11161:13;;;;;;450:885:115;;;;;;;:::i;11154:5:120:-;11379:8;;;;;;;:::i;:::-;450:885:115;11379:15:120;450:885:115;;;;11428:8:120;450:885:115;;;11428:8:120;:::i;:::-;:19;;;;:::i;:::-;11476:8;;;;;;;;;:::i;:::-;11523;;;;:::i;:::-;:18;;;;:::i;:::-;11571:8;;;;;;;;:::i;:::-;:15;;;:::i;:::-;11621:8;;;;:::i;:::-;450:885:115;11621:20:120;;;;:::i;:::-;450:885:115;;;;;;;;:::i;:::-;;;;;11286:374:120;;;450:885:115;;;;11286:374:120;;450:885:115;11286:374:120;;;;450:885:115;;;11286:374:120;;;450:885:115;;;;;;;;;11240:434:120;450:885:115;;;;;;;;;:::i;:::-;;11476:14:120;;;450:885:115;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;11286:374:120;;450:885:115;;;;:::i;:::-;11286:374:120;;;450:885:115;;;11240:434:120;;;;450:885:115;11240:434:120;;450:885:115;11240:434:120;;;:::i;:::-;;;;;;;;;;;;;;;11154:5;10820:1;11225:449;;;;;;:::i;:::-;450:885:115;;11154:5:120;;11240:434;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;10820:1:120;450:885:115;;11240:434:120;;;;;;;;450:885:115;;;;;;;;;10694:5:120;10777:8;-1:-1:-1;;;;;10820:1:120;10777:8;450:885:115;10777:20:120;450:885:115;10777:8:120;;;;;;;:::i;:20::-;450:885:115;;;;;10694:5:120;;;;;450:885:115;;-1:-1:-1;;450:885:115;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;23012:72:120;23136:42;450:885:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;531:80:118;;:::i;23012:72:120:-;450:885:115;;23136:42:120;;;;;;450:885:115;23136:42:120;;450:885:115;23136:42:120;;;:::i;450:885:115:-;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;;;:::i;:::-;450:885:115;;;5362:25:120;;450:885:115;5362:25:120;;450:885:115;;;;;-1:-1:-1;;;;;450:885:115;;;;;5362:25:120;450:885:115;;5362:25:120;;;;;;;;;;;450:885:115;;;;;;;;;;;5476:30:120;;;;5500:4;450:885:115;5476:30:120;;450:885:115;5476:30:120;;;;;;;;;;;;;;;;450:885:115;5547:23:120;;;;;;450:885:115;;;;;5547:23:120;;;;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;450:885:115;5547:23:120;;;;;;;;450:885:115;;;;;;;5683:30:120;;;;;;5500:4;450:885:115;5683:30:120;;450:885:115;5683:30:120;;;;;;;;;;;;;;450:885:115;5746:29:120;5944:12;5746:29;;;;;:::i;5944:12::-;531:80:118;;:::i;:::-;450:885:115;13212:18:120;450:885:115;;;;;;;;;;13232:24:120;450:885:115;;;;;;;;;;1063:11;1286:40;1063:11;1482:68:18;1063:11:115;;:::i;:::-;450:885;;;1482:68:18;450:885:115;1482:68:18;;;;450:885:115;1482:68:18;;;450:885:115;5500:4:120;450:885:115;;;;;;;;;;1482:68:18;;;;;:::i;:::-;1286:40:115;;:::i;:::-;450:885;;13292:46:120;450:885:115;13292:46:120;;450:885:115;;;;;;;;;;;13292:46:120;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13232:24:120;450:885:115;;;;;;;;;;;;;;;13212:18:120;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13292:46:120;;;;;;;450:885:115;13292:46:120;;;450:885:115;;;;;;;5683:30:120;;-1:-1:-1;5683:30:120;;;-1:-1:-1;5683:30:120;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;5683:30:120;450:885:115;5944:12:120;5683:30;;;;;;;5547:23;;;;;;;:::i;:::-;;;;;;450:885:115;;;;;;;;;5476:30:120;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;5476:30:120;;;;;;;;;5362:25;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;;;;;5362:25:120;;;;;;;;;450:885:115;;;;;-1:-1:-1;;450:885:115;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;15425:42:120;450:885:115;15296:77:120;450:885:115;;;;;;;;;;;;531:80:118;;:::i;15296:77:120:-;450:885:115;;15425:42:120;;;;;;450:885:115;15425:42:120;;450:885:115;15425:42:120;;;:::i;:::-;;;;;;;;;;;;;;450:885:115;;;;;;;;;15425:42:120;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;15425:42:120;;;;;;;;;450:885:115;;;;;;-1:-1:-1;;450:885:115;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;531:80:118;;;;:::i;:::-;13212:18:120;450:885:115;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;13232:24:120;450:885:115;;;;;;;;;;1286:40;1063:11;;;:::i;:::-;450:885;1482:68:18;450:885:115;;1482:68:18;;;450:885:115;1482:68:18;;;;450:885:115;;1482:68:18;;450:885:115;1196:4;450:885;;;;;13232:24:120;450:885:115;;;13232:24:120;1482:68:18;;;;;:::i;1286:40:115:-;450:885;;13292:46:120;450:885:115;13292:46:120;;450:885:115;;;;;;;;;;;13292:46:120;;450:885:115;;;;;;;;;;;;;;;;;;;13232:24:120;450:885:115;;;;;;;;;;;;;13212:18:120;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13292:46:120;;;;;;;;;;;450:885:115;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;450:885:115;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;450:885:115;;;;;;:::o;:::-;;;-1:-1:-1;;;;;450:885:115;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;450:885:115;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;450:885:115;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;-1:-1:-1;;450:885:115;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1136:155:118:-;-1:-1:-1;;;;;1214:9:118;450:885:115;1205:4:118;1197:26;1193:92;;1136:155::o;1193:92::-;1246:28;450:885:115;;1246:28:118;;;;450:885:115;;;;;;;;;;:::o;:::-;;;;;;;;;;941:175:18;450:885:115;;;1050:58:18;;;;-1:-1:-1;;;;;450:885:115;;;;1050:58:18;;;450:885:115;;;;;;;;;1050:58:18;;;;;;450:885:115;;1050:58:18;:::i;:::-;;:::i;:::-;941:175::o;450:885:115:-;;;;;;;;;;;;;;;;;;:::o;5173:642:18:-;450:885:115;;5535:69:23;;-1:-1:-1;;;;;450:885:115;;;;:::i;:::-;-1:-1:-1;450:885:115;;;;;;;;;;;5487:31:23;;;;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;450:885:115;;5705:22:18;;;;:56;;;;;5173:642;450:885:115;;;;;;5173:642:18;:::o;450:885:115:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5705:56:18;5731:30;;-1:-1:-1;5731:30:18;;;;;;;:::i;:::-;5705:56;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;450:885:115;;;;:::o;:::-;;;:::o;7671:628:23:-;;;;7875:418;;;450:885:115;;;7906:22:23;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;450:885:115;;8201:17:23;:::o;450:885:115:-;;;;;;;;;;;;;;;;;;;;;;;7875:418:23;450:885:115;;;;-1:-1:-1;8980:21:23;:17;;9152:142;;;;;;;8976:379;450:885:115;;9324:20:23;;;;450:885:115;;9324:20:23;;;;450:885:115;;;;;;;;;9000:1:23;450:885:115;;;;;;;;;;;;9000:1:23;450:885:115;;;;;;;;;;;9324:20:23;;;;450:885:115;;;;;;;;;;;;;;;-1:-1:-1;450:885:115;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;450:885:115;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:80:118;;;;:::i;:::-;450:885:115;-1:-1:-1;;;;;450:885:115;;;20949:18:120;;;;;;;;:::i;:::-;20969:24;;450:885:115;20969:24:120;;;450:885:115;;20969:24:120;1286:40:115;20969:24:120;;;;:::i;:::-;450:885:115;1063:11;;:::i;:::-;450:885;1482:68:18;450:885:115;;1482:68:18;;;;;;;;;450:885:115;1482:68:18;;;450:885:115;1196:4;450:885;;;;;;;;;;1482:68:18;;;;;:::i;:::-;1286:40:115;;:::i;:::-;450:885;;;21029:38:120;;;450:885:115;21029:38:120;;;;;;450:885:115;;;;;;;;;;:::i;:::-;;1482:68:18;450:885:115;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;21029:38:120;;;;450:885:115;21029:38:120;;;;;;;;;;;;450:885:115;21029:38:120;;;450:885:115;603:1:118;;;531:80;:::o;21029:38:120:-;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;21029:38:120;;;;;;;;;450:885:115;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::o;531:80:118:-;;450:885:115;;531:80:118;;;:::i;:::-;-1:-1:-1;;;;;450:885:115;;;21442:18:120;;;;;;;:::i;:::-;21462:24;450:885:115;21462:24:120;;;450:885:115;;21462:24:120;1286:40:115;21462:24:120;;;;:::i;1286:40:115:-;450:885;;21522:42:120;;;450:885:115;21522:42:120;;;;;;450:885:115;;;;;;;;;:::i;:::-;;1482:68:18;450:885:115;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;21522:42:120;;;;450:885:115;21522:42:120;;;;;;;;;;;;450:885:115;21522:42:120;;;603:1:118;;;531:80;:::o;450:885:115:-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;23796:307:120;;;-1:-1:-1;;;;;450:885:115;;;;;;;23908:67:120;450:885:115;23908:67:120;;23941:4;23908:67;;;450:885:115;;;;;;;;;23908:67:120;;;;450:885:115;23908:67:120;;;;;;;;;;-1:-1:-1;23908:67:120;;;23796:307;23989:18;;23985:112;;23796:307;;;;;;;:::o;23985:112::-;-1:-1:-1;450:885:115;;;3871:62:18;;;;;;;450:885:115;;3871:62:18;;;;450:885:115;3871:62:18;;450:885:115;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;;;;;3871:62:18;;;;;;;;;:::i;:::-;6742:25;;;;;;;;;;:::i;:::-;6796:69;;;23985:112:120;6796:107:18;;;;23985:112:120;3948:45:18;;3944:216;;23985:112:120;;;;3944:216:18;450:885:115;;4036:58:18;;;;450:885:115;4036:58:18;;450:885:115;-1:-1:-1;450:885:115;;;;;4036:58:18;;450:885:115;;;;;;;;;;;;4136:12:18;450:885:115;4036:58:18;450:885:115;;;4036:58:18;;:::i;4136:12::-;3944:216;;;;;;;6796:107;1702:19:23;;;:23;;6796:107:18;;;:69;450:885:115;;;;;6808:22:18;;;;:56;;;;;6796:69;;;;;;;;6808:56;6834:30;;-1:-1:-1;6834:30:18;;;;;;;:::i;:::-;6808:56;;;;;23908:67:120;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;;;23908:67:120;;;;;;;;450:885:115;;;;;;;;;;;;:::o;24195:397:120:-;;;;24372:25;;;:::i;:::-;24412:13;24424:1;24427:14;;;;;;24195:397;;;:::o;24412:13::-;-1:-1:-1;;;;;24479:9:120;;;;;;:::i;:::-;450:885:115;;;;;24479:34:120;;450:885:115;24479:34:120;;24507:4;24479:34;;;450:885:115;24479:34:120;450:885:115;24479:34:120;;;;;;;;;;;;24424:1;24479:34;;;24412:13;24458:55;24560:1;24458:55;;;;;;:::i;:::-;450:885:115;;24412:13:120;;24479:34;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;24560:1:120;450:885:115;;24479:34:120;;;;;;;;;450:885:115;;24424:1:120;450:885:115;;;;;24713:109:120;450:885:115;;;24783:32:120;;;24801:4;24783:32;24801:4;;24783:32;;;;;;;;;;;24776:39;24713:109;:::o;24783:32::-;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;;-1:-1:-1;;;;;450:885:115;;;;;;24783:32:120;24713:109;:::o;24783:32::-;;;-1:-1:-1;24783:32:120;;25331:785;;;-1:-1:-1;25570:14:120;;;;;;25331:785;;;;:::o;25555:13::-;-1:-1:-1;;;;;25696:9:120;;;;;;:::i;:::-;450:885:115;;;;;25696:34:120;;450:885:115;25696:34:120;;25724:4;25696:34;;;450:885:115;25696:34:120;450:885:115;25696:34:120;;;;;;;;;;;;-1:-1:-1;25696:34:120;;;25555:13;25774:18;26084:1;25774:18;;25759:33;25973:12;25774:18;;;;;:::i;:::-;450:885:115;25759:33:120;;:::i;:::-;25924:9;;;;;;:::i;:::-;25953:11;;:::i;25973:12::-;450:885:115;25555:13:120;;25696:34;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;-1:-1:-1;450:885:115;26084:1:120;;450:885:115;25759:33:120;25696:34;;;;;;;26270:697;-1:-1:-1;;;;;450:885:115;;;;;;26392:30:120;;;-1:-1:-1;26416:4:120;;26392:30;;;450:885:115;26392:30:120;;;;450:885:115;26392:30:120;;;;;;;;;;;;;26270:697;26490:65;;;;;;450:885:115;;;26490:65:120;;26542:9;;26392:30;26542:9;;26490:65;;;;;;;;;26270:697;450:885:115;;;;;;26629:30:120;;;;;;26416:4;26392:30;26629;;450:885:115;26629:30:120;;;;;;;;;;26270:697;26692:29;;;;;:::i;:::-;26542:9;;26801:25;;26797:164;;26270:697;;:::o;26797:164::-;450:885:115;;;;26849:101:120;;;;26542:9;26392:30;26849:101;;450:885:115;;;;;26849:101:120;26629:30;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;26692:29:120;450:885:115;;26629:30:120;;;;;;;;;450:885:115;;;;;;;;;;26490:65:120;;;;;;;:::i;:::-;;;;;;450:885:115;;;;;;;;;26392:30:120;;;;;;;;;;;;;;;;;:::i;:::-;;;450:885:115;;;;;26392:30:120;;;;;;;;;;450:885:115;;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "46178": [
        {
          "start": 12871,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "batchCancelMultiple((address,uint256[])[],address[])": "f1630612",
    "batchCreateWithDeltas(address,address,(address,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": "6f0995f3",
    "batchCreateWithDurations(address,address,(address,address,uint128,bool,(uint40,uint40),(address,uint256))[],bytes)": "e6a64e02",
    "batchCreateWithMilestones(address,address,(address,uint40,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": "6a9c21b7",
    "batchCreateWithRange(address,address,(address,address,uint128,bool,(uint40,uint40,uint40),(address,uint256))[],bytes)": "45188c01",
    "burn(address,uint256)": "9dc29fac",
    "cancel(address,uint256)": "98590ef9",
    "cancelAndCreateWithDeltas(address,uint256,address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": "4c4bfa77",
    "cancelAndCreateWithDurations(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": "14296d16",
    "cancelAndCreateWithMilestones(address,uint256,address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": "8e800299",
    "cancelAndCreateWithRange(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": "87d23ff1",
    "cancelMultiple(address,address[],uint256[])": "6a09d49a",
    "createWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": "aa021714",
    "createWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": "0cbbef7f",
    "createWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": "13b55f01",
    "createWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": "82597616",
    "renounce(address,uint256)": "86f2891e",
    "withdraw(address,uint256,address,uint128)": "b956b45f",
    "withdrawMax(address,uint256,address)": "a3143b76",
    "withdrawMaxAndTransfer(address,uint256,address)": "ad26c0fb",
    "withdrawMultiple(address,uint256[],address,uint128[])": "f2bf799e",
    "wrapAndCreateWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": "ec5b900f",
    "wrapAndCreateWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)))": "90e2cd79",
    "wrapAndCreateWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": "1d165efc",
    "wrapAndCreateWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)))": "10fad8c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CallNotDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierV2ProxyTarget_BatchSizeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"}],\"name\":\"SablierV2ProxyTarget_CreditAmountMismatch\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Batch.CancelMultiple[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"batchCancelMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"delta\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDelta[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Batch.CreateWithDeltas[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"batchCreateWithDeltas\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Batch.CreateWithDurations[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"batchCreateWithDurations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"milestone\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Batch.CreateWithMilestones[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"batchCreateWithMilestones\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Range\",\"name\":\"range\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct Batch.CreateWithRange[]\",\"name\":\"batch\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"batchCreateWithRange\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"delta\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDelta[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithDeltas\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"cancelAndCreateWithDeltas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newStreamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithDurations\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"cancelAndCreateWithDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newStreamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"milestone\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithMilestones\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"cancelAndCreateWithMilestones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newStreamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Range\",\"name\":\"range\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithRange\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"cancelAndCreateWithRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newStreamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"delta\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDelta[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithDeltas\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"createWithDeltas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithDurations\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"createWithDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"milestone\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithMilestones\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"createWithMilestones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Range\",\"name\":\"range\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithRange\",\"name\":\"createParams\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"transferData\",\"type\":\"bytes\"}],\"name\":\"createWithRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"renounce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"withdrawMaxAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2Lockup\",\"name\":\"lockup\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"withdrawMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"delta\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.SegmentWithDelta[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithDeltas\",\"name\":\"createParams\",\"type\":\"tuple\"}],\"name\":\"wrapAndCreateWithDeltas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"total\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Durations\",\"name\":\"durations\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithDurations\",\"name\":\"createParams\",\"type\":\"tuple\"}],\"name\":\"wrapAndCreateWithDurations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupDynamic\",\"name\":\"dynamic\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"UD2x18\",\"name\":\"exponent\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"milestone\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupDynamic.Segment[]\",\"name\":\"segments\",\"type\":\"tuple[]\"}],\"internalType\":\"struct LockupDynamic.CreateWithMilestones\",\"name\":\"createParams\",\"type\":\"tuple\"}],\"name\":\"wrapAndCreateWithMilestones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierV2LockupLinear\",\"name\":\"lockupLinear\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"cancelable\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint40\",\"name\":\"start\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"cliff\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"}],\"internalType\":\"struct LockupLinear.Range\",\"name\":\"range\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"internalType\":\"struct LockupLinear.CreateWithRange\",\"name\":\"createParams\",\"type\":\"tuple\"}],\"name\":\"wrapAndCreateWithRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchCancelMultiple((address,uint256[])[],address[])\":{\"details\":\"Notes: - All refunded assets are forwarded to the proxy owner. - It is assumed that `assets` includes only the assets associated with the stream ids in `batch`. If any asset is missing, the refunded amount will be left in the proxy. Requirements: - Must be delegate called. - There must be at least one element in `batch`.\",\"params\":{\"assets\":\"The contract addresses of the ERC-20 assets used for streaming.\",\"batch\":\"An array of structs, each encapsulating the lockup contract's address and the stream id to cancel.\"}},\"batchCreateWithDeltas(address,address,(address,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)\":{\"details\":\"Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithDeltas} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithDeltas}.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"batchCreateWithDurations(address,address,(address,address,uint128,bool,(uint40,uint40),(address,uint256))[],bytes)\":{\"details\":\"Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithDurations} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithDurations}.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"batchCreateWithMilestones(address,address,(address,uint40,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)\":{\"details\":\"Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithMilestones} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithMilestones}.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"batchCreateWithRange(address,address,(address,address,uint128,bool,(uint40,uint40,uint40),(address,uint256))[],bytes)\":{\"details\":\"Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithRange} must be met for each stream.\",\"params\":{\"asset\":\"The contract address of the ERC-20 asset used for streaming.\",\"batch\":\"An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithRange}.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamIds\":\"The ids of the newly created streams.\"}},\"burn(address,uint256)\":{\"details\":\"Must be delegate called.\"},\"cancel(address,uint256)\":{\"details\":\"Notes: - All refunded assets are forwarded to the proxy owner. Requirements: - Must be delegate called.\"},\"cancelAndCreateWithDeltas(address,uint256,address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"details\":\"Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupDynamic.createWithDeltas} for full documentation. Requirements: - Must be delegate called.\",\"params\":{\"createParams\":\"A struct encapsulating the create function parameters, which are documented in V2 Core.\",\"lockup\":\"The address of the Lockup streaming contract where the stream to cancel is.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract to use for creating the new stream.\",\"streamId\":\"The id of the stream to cancel.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"newStreamId\":\"The id of the newly created stream.\"}},\"cancelAndCreateWithDurations(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)\":{\"details\":\"Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupLinear.createWithDurations} for full documentation. Requirements: - Must be delegate called.\",\"params\":{\"lockup\":\"The address of the Lockup streaming contract where the stream to cancel is.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract to use for creating the new stream.\",\"streamId\":\"The id of the stream to cancel.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"newStreamId\":\"The id of the newly created stream.\"}},\"cancelAndCreateWithMilestones(address,uint256,address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"details\":\"Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupDynamic.createWithMilestones} for full documentation. Requirements: - Must be delegate called.\",\"params\":{\"createParams\":\"A struct encapsulating the create function parameters, which are documented in V2 Core.\",\"lockup\":\"The address of the Lockup streaming contract where the stream to cancel is.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract to use for creating the new stream.\",\"streamId\":\"The id of the stream to cancel.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"newStreamId\":\"The id of the newly created stream.\"}},\"cancelAndCreateWithRange(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)\":{\"details\":\"Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupLinear.createWithRange} for full documentation. Requirements: - Must be delegate called.\",\"params\":{\"lockup\":\"The address of the Lockup streaming contract where the stream to cancel is.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract to use for creating the new stream.\",\"streamId\":\"The id of the stream to cancel.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"newStreamId\":\"The id of the newly created stream.\"}},\"cancelMultiple(address,address[],uint256[])\":{\"details\":\"Notes: - All refunded assets are forwarded to the proxy owner. - It is assumed that `assets` includes only the assets associated with `streamIds`. If any asset is missing, the refunded amount will be left in the proxy. Requirements: - Must be delegate called.\",\"params\":{\"assets\":\"The contract addresses of the ERC-20 assets used for streaming.\",\"lockup\":\"The address of the Lockup streaming contract.\",\"streamIds\":\"The stream ids to cancel.\"}},\"createWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"details\":\"Must be delegate called.\",\"params\":{\"createParams\":\"A struct encapsulating the create function parameters, which are documented in V2 Core.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"createWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)\":{\"details\":\"Must be delegate called.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"createWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"details\":\"Must be delegate called.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"createWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)\":{\"details\":\"Must be delegate called.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\",\"transferData\":\"Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"renounce(address,uint256)\":{\"details\":\"Must be delegate called.\"},\"withdraw(address,uint256,address,uint128)\":{\"details\":\"Must be delegate called.\"},\"withdrawMax(address,uint256,address)\":{\"details\":\"Must be delegate called.\"},\"withdrawMaxAndTransfer(address,uint256,address)\":{\"details\":\"Must be delegate called.\"},\"withdrawMultiple(address,uint256[],address,uint128[])\":{\"details\":\"Must be delegate called.\"},\"wrapAndCreateWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))\":{\"details\":\"Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupDynamic.createWithDeltas} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"wrapAndCreateWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)))\":{\"details\":\"Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupLinear.createWithDurations} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\"}},\"wrapAndCreateWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))\":{\"details\":\"Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupDynamic.createWithMilestones} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupDynamic\":\"The address of the {SablierV2LockupDynamic} contract.\"},\"returns\":{\"streamId\":\"The id of the newly created stream.\"}},\"wrapAndCreateWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)))\":{\"details\":\"Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupLinear.createWithRange} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.\",\"params\":{\"createParams\":\"Struct encapsulating the function parameters, which are documented in V2 Core.\",\"lockupLinear\":\"The address of the {SablierV2LockupLinear} contract.\"}}},\"title\":\"SablierV2ProxyTargetApprove\",\"version\":1},\"userdoc\":{\"errors\":{\"CallNotDelegateCall()\":[{\"notice\":\"Thrown when trying to perform a standard call to a function that allows only delegate calls.\"}],\"SablierV2ProxyTarget_BatchSizeZero()\":[{\"notice\":\"Thrown when trying to perform an action that requires the batch size to not be zero.\"}],\"SablierV2ProxyTarget_CreditAmountMismatch(uint256,uint256)\":[{\"notice\":\"Thrown when trying to wrap and create a stream and the credit amount is not equal to `msg.value`.\"}]},\"kind\":\"user\",\"methods\":{\"batchCancelMultiple((address,uint256[])[],address[])\":{\"notice\":\"Cancels multiple streams across different lockup contracts.\"},\"batchCreateWithDeltas(address,address,(address,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithDeltas`.\"},\"batchCreateWithDurations(address,address,(address,address,uint128,bool,(uint40,uint40),(address,uint256))[],bytes)\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithDurations`.\"},\"batchCreateWithMilestones(address,address,(address,uint40,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)\":{\"notice\":\"Creates a batch of Lockup Dynamic streams using `createWithMilestones`.\"},\"batchCreateWithRange(address,address,(address,address,uint128,bool,(uint40,uint40,uint40),(address,uint256))[],bytes)\":{\"notice\":\"Creates a batch of Lockup Linear streams using `createWithRange`.\"},\"burn(address,uint256)\":{\"notice\":\"Mirror for {ISablierV2Lockup.burn}.\"},\"cancel(address,uint256)\":{\"notice\":\"Mirror for {ISablierV2Lockup.cancel}.\"},\"cancelAndCreateWithDeltas(address,uint256,address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"notice\":\"Cancels a Lockup stream and creates a new Lockup Dynamic stream using `createWithDeltas`.\"},\"cancelAndCreateWithDurations(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)\":{\"notice\":\"Cancels a Lockup stream and creates a new Lockup Linear stream using `createWithDurations`.\"},\"cancelAndCreateWithMilestones(address,uint256,address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"notice\":\"Cancels a Lockup stream and creates a new Lockup Dynamic stream using `createWithMilestones`.\"},\"cancelAndCreateWithRange(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)\":{\"notice\":\"Cancels a Lockup stream and creates a new Lockup Linear stream using `createWithRange`.\"},\"cancelMultiple(address,address[],uint256[])\":{\"notice\":\"Mirror for {ISablierV2Lockup.cancelMultiple}.\"},\"createWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"notice\":\"Mirror for {SablierV2LockupDynamic.createWithDeltas}.\"},\"createWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)\":{\"notice\":\"Mirror for {SablierV2LockupLinear.createWithDurations}.\"},\"createWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)\":{\"notice\":\"Mirror for {SablierV2LockupDynamic.createWithMilestones}.\"},\"createWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)\":{\"notice\":\"Mirror for {SablierV2LockupLinear.createWithRange}.\"},\"renounce(address,uint256)\":{\"notice\":\"Mirror for {ISablierV2Lockup.renounce}.\"},\"withdraw(address,uint256,address,uint128)\":{\"notice\":\"Mirror for {ISablierV2Lockup.withdraw}.\"},\"withdrawMax(address,uint256,address)\":{\"notice\":\"Mirror for {ISablierV2Lockup.withdrawMax}.\"},\"withdrawMaxAndTransfer(address,uint256,address)\":{\"notice\":\"Mirror for {ISablierV2Lockup.withdrawMaxAndTransfer}.\"},\"withdrawMultiple(address,uint256[],address,uint128[])\":{\"notice\":\"Mirror for {ISablierV2Lockup.withdrawMultiple}.\"},\"wrapAndCreateWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))\":{\"notice\":\"Wraps the native asset payment in ERC-20 form and creates a Lockup Dynamic stream using `createWithDeltas`.\"},\"wrapAndCreateWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)))\":{\"notice\":\"Wraps the native asset payment in ERC-20 form and creates a Lockup Linear stream using `createWithDurations`.\"},\"wrapAndCreateWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))\":{\"notice\":\"Wraps the native asset payment in ERC-20 form and creates a Lockup Dynamic stream using `createWithMilestones`.\"},\"wrapAndCreateWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)))\":{\"notice\":\"Wraps the native asset payment in ERC-20 form and creates a Lockup Linear stream using `createWithRange`.\"}},\"notice\":\"Proxy target contract that implements the transfer logic using standard ERC-20 approvals.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierV2ProxyTargetApprove.sol\":\"SablierV2ProxyTargetApprove\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/v2-core/lib/prb-math/\",\":@prb/proxy-test/=lib/prb-proxy/test/\",\":@prb/proxy/=lib/prb-proxy/\",\":@prb/test/=lib/prb-test/src/\",\":@sablier/v2-core-script/=lib/v2-core/script/\",\":@sablier/v2-core-test/=lib/v2-core/test/\",\":@sablier/v2-core/=lib/v2-core/\",\":@uniswap/permit2-test/=lib/permit2/test/\",\":@uniswap/permit2/=lib/permit2/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":prb-math/=lib/v2-core/lib/prb-math/src/\",\":prb-proxy/=lib/prb-proxy/\",\":prb-test/=lib/prb-test/src/\",\":solady/=lib/solady/src/\",\":solarray/=lib/v2-core/lib/solarray/src/\",\":solmate/=lib/permit2/lib/solmate/\",\":v2-core/=lib/v2-core/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/prb-proxy/src/interfaces/IPRBProxy.sol\":{\"keccak256\":\"0x3acec1c08296ef7f81902a7b6b883a70be6923c259af27ded37b43cd33d8663e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f5fb1345605398e99ac334d27043bea6adf4242868b6a9f274623f8c1ff754a\",\"dweb:/ipfs/QmfXVKyH3ctiC8YrKjCLRiehVpgAMY6GiKrpAvVn1CduQ6\"]},\"lib/prb-proxy/src/interfaces/IPRBProxyPlugin.sol\":{\"keccak256\":\"0x6e0ce4998cd104b2cde36cdd3e0e07fb200f606e82a98cb25b1302ac0d969714\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baeb01d83a07b81412341a9899d6048426b6aec72d06c88271bf7c261e2dea88\",\"dweb:/ipfs/QmTkUVmRzpxuf8SvLpm2TKE2AcJ7KL7gVMKRYJ9apCLVM1\"]},\"lib/prb-proxy/src/interfaces/IPRBProxyRegistry.sol\":{\"keccak256\":\"0x3dc040a25929144a7d88710d82f94448fcc40367c6175345b14b0ae36189aa59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a9b01bb4b8605ac28451b9dea628228d6f4b17641e29b00cc4d40acb10d15ce\",\"dweb:/ipfs/Qmbfz7THunKGVtX6VCyiXiGoGLeAbh3fk5MWj8cyn1Vamt\"]},\"lib/v2-core/lib/prb-math/src/Common.sol\":{\"keccak256\":\"0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039\",\"dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B\"]},\"lib/v2-core/lib/prb-math/src/UD2x18.sol\":{\"keccak256\":\"0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2\",\"dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH\"]},\"lib/v2-core/lib/prb-math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"lib/v2-core/lib/prb-math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a\",\"dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz\"]},\"lib/v2-core/lib/prb-math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770\",\"dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D\"]},\"lib/v2-core/lib/prb-math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499\",\"dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp\"]},\"lib/v2-core/lib/prb-math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd\",\"dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809\",\"dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8\",\"dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1\",\"dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787\",\"dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze\"]},\"lib/v2-core/lib/prb-math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6\",\"dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT\"]},\"lib/v2-core/lib/prb-math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5\",\"dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F\"]},\"lib/v2-core/lib/prb-math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b\",\"dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP\"]},\"lib/v2-core/lib/prb-math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec\",\"dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59\"]},\"lib/v2-core/lib/prb-math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95\",\"dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe\",\"dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75\",\"dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf\",\"dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205\",\"dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y\"]},\"lib/v2-core/lib/prb-math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29\",\"dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ\"]},\"lib/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885\",\"dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH\"]},\"lib/v2-core/src/interfaces/ISablierV2Base.sol\":{\"keccak256\":\"0xb12e58a05389c958f79ebe1667e167c1e0bb681a18ae534f5e454abbd66f6821\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1c57fabd0290e38c73c88cbf09ffe1675f3d9367fbba72ad647fbe729f5fd9f7\",\"dweb:/ipfs/QmZ2ybkhNR8CzqMi5fwSUZodZ9otYBGR4pVDp7fk78KpAM\"]},\"lib/v2-core/src/interfaces/ISablierV2Comptroller.sol\":{\"keccak256\":\"0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7\",\"dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF\"]},\"lib/v2-core/src/interfaces/ISablierV2Lockup.sol\":{\"keccak256\":\"0x0e37a224e498775d0e541d93f3be6cd78d57399be99d9b4885ac038c49d8e774\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d535aea117e7ff38552ccbbc9d435404a10299bab650e545c2c78a084aef246\",\"dweb:/ipfs/QmR6J7tFnv3mCKEHJoumGjYAJNvVEx1kjaTxwRuK3YTugo\"]},\"lib/v2-core/src/interfaces/ISablierV2LockupDynamic.sol\":{\"keccak256\":\"0xa21ea33ba680ef84d7d6aa376d9f5ca391c398067fd1c56e3a8ccf50916e21da\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://68010346665808be7a4bdba4163ae78eeec81a5ed23ce6eca40be173aee57feb\",\"dweb:/ipfs/QmNf6Y75TCTNaJX2wZMFeo5sPd1aB1EewgSsMumJ71yf4Q\"]},\"lib/v2-core/src/interfaces/ISablierV2LockupLinear.sol\":{\"keccak256\":\"0x84b5aa5b1ccf92a53cc767180d47b12b6e2a6cf6fa5c750fe24fb3f3f468bdb6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://272633f6592aa1b09be49b838335ea8f4a9872019864466a531b44acb62cac1c\",\"dweb:/ipfs/QmZTBSSRhDzFihbhw7xefiWhTnP1sGfRKuxRe6iFMPCSE8\"]},\"lib/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol\":{\"keccak256\":\"0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73\",\"dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV\"]},\"lib/v2-core/src/types/DataTypes.sol\":{\"keccak256\":\"0x3b1d42a5fedf5e5de718aa289aec0f72ad7b1a0e2b16515460c24942a30e9694\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://555451f8704595a0973ade27d8d199c363366ff6346c5425d156d332ea7bfb3b\",\"dweb:/ipfs/QmYkAyestxNeonNgfPCKQkzKsproZV7U3UGhMX2TQumNr1\"]},\"src/SablierV2ProxyTargetApprove.sol\":{\"keccak256\":\"0xf74c02c764ac6a2e79bc7b715416c29e2d1cd9046df77d9fdcfe13497f5fc6a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e24b10e83f6984d495ce1543c0d3e9ca020bcddde180ad66b1cebb2aa0157c2\",\"dweb:/ipfs/QmdeTncK8RV68M4akjxVMPhNm8sYxWm7jaNyLzzWvGYXDT\"]},\"src/abstracts/OnlyDelegateCall.sol\":{\"keccak256\":\"0xedd52b5fcca2b2c4e7943d69539f4c966ce9f855fc36981df5c43ccfbd4b6d2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b3e0457ff66111529e4e27f3488edac59335e8a8975be28feae9ab74c3cdcfa\",\"dweb:/ipfs/Qma9oot2YTSmdnRqfTBZVt87ToadACAXPpGwjbY5J9Twbw\"]},\"src/abstracts/SablierV2ProxyTarget.sol\":{\"keccak256\":\"0xa4317b06b38d24a39fbc5bcafa66d7a4db443a68dee21ca11c9ff91e5f7a406a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2960695672346009522642fb0e706c989af7834a449b9f275e77039bb9b7af7e\",\"dweb:/ipfs/QmVWou9pRGncq9bqJQbWac4hy4HPTnFj8CXKaAFmgoxHqg\"]},\"src/interfaces/ISablierV2ProxyTarget.sol\":{\"keccak256\":\"0x13165be6cacd7a79456e72e72d01a323cd28271639b906400bc607c7a85b4b13\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9a8042a4a041a781bab095fe2464bb8de37b0a5b15359a30ffd3014e3fbefeb\",\"dweb:/ipfs/QmfGoeKzjPMSYdQjtkNJKSHZHqG6Z2XNxaYJnCn2sgXBWf\"]},\"src/interfaces/IWrappedNativeAsset.sol\":{\"keccak256\":\"0xa5aea82f7b9d65799df87f1de54db729f8f044cb5a037ab9c825ab5f6546f26d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://325f60feaa36037314735754a57792a03c43768b0dea245ae1c7dad5a56568e3\",\"dweb:/ipfs/QmREBuuHmHTG4rtuFPAhcyRHUFNwR14WaGkkVBwJqLEK5s\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x60843b38a83ef7c00d21462722c38654b786b809d6c5bb7df44942a4e4e2d15a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ab7bd60505fbd789aa6884e63593ad0cd21f3b4ccc85676433fcd762c822f060\",\"dweb:/ipfs/QmPNRsU5F1rRyUsb3wUzdFKjMstzDBqtjNgqvwDs1wHPJH\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0xdf0def1a70e37566c5bdf09410b6b003c4a5dd03ead1a8df25a73a1d21d60c7a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0b2f46bd1b8b029624ccb30174731337b9f7f444dfa245af04ca75ecf8fb46b5\",\"dweb:/ipfs/Qmc6fNfhULFgu6Z3g1SDZNxmpz4DDKKSweVxGD18iH44fj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CallNotDelegateCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SablierV2ProxyTarget_BatchSizeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "msgValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SablierV2ProxyTarget_CreditAmountMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct Batch.CancelMultiple[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract ISablierV2Lockup",
                  "name": "lockup",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "streamIds",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "assets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchCancelMultiple"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "struct Batch.CreateWithDeltas[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDelta[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "delta",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchCreateWithDeltas",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "struct Batch.CreateWithDurations[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "total",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchCreateWithDurations",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "struct Batch.CreateWithMilestones[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint40",
                  "name": "startTime",
                  "type": "uint40"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "milestone",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchCreateWithMilestones",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "struct Batch.CreateWithRange[]",
              "name": "batch",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Range",
                  "name": "range",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "start",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchCreateWithRange",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithDeltas",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDelta[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "delta",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAndCreateWithDeltas",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newStreamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithDurations",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "total",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAndCreateWithDurations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newStreamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithMilestones",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint40",
                  "name": "startTime",
                  "type": "uint40"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "milestone",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAndCreateWithMilestones",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newStreamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithRange",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Range",
                  "name": "range",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "start",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelAndCreateWithRange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newStreamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelMultiple"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithDeltas",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDelta[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "delta",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDeltas",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithDurations",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "total",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithDurations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithMilestones",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint40",
                  "name": "startTime",
                  "type": "uint40"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "milestone",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithMilestones",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithRange",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Range",
                  "name": "range",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "start",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "transferData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createWithRange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounce"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMax"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMaxAndTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2Lockup",
              "name": "lockup",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint128[]",
              "name": "amounts",
              "type": "uint128[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMultiple"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithDeltas",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.SegmentWithDelta[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "delta",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndCreateWithDeltas",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithDurations",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Durations",
                  "name": "durations",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "total",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndCreateWithDurations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupDynamic",
              "name": "dynamic",
              "type": "address"
            },
            {
              "internalType": "struct LockupDynamic.CreateWithMilestones",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint40",
                  "name": "startTime",
                  "type": "uint40"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct LockupDynamic.Segment[]",
                  "name": "segments",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "amount",
                      "type": "uint128"
                    },
                    {
                      "internalType": "UD2x18",
                      "name": "exponent",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint40",
                      "name": "milestone",
                      "type": "uint40"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndCreateWithMilestones",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierV2LockupLinear",
              "name": "lockupLinear",
              "type": "address"
            },
            {
              "internalType": "struct LockupLinear.CreateWithRange",
              "name": "createParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "totalAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "cancelable",
                  "type": "bool"
                },
                {
                  "internalType": "struct LockupLinear.Range",
                  "name": "range",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint40",
                      "name": "start",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "cliff",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    }
                  ]
                },
                {
                  "internalType": "struct Broker",
                  "name": "broker",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "account",
                      "type": "address"
                    },
                    {
                      "internalType": "UD60x18",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndCreateWithRange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchCancelMultiple((address,uint256[])[],address[])": {
            "details": "Notes: - All refunded assets are forwarded to the proxy owner. - It is assumed that `assets` includes only the assets associated with the stream ids in `batch`. If any asset is missing, the refunded amount will be left in the proxy. Requirements: - Must be delegate called. - There must be at least one element in `batch`.",
            "params": {
              "assets": "The contract addresses of the ERC-20 assets used for streaming.",
              "batch": "An array of structs, each encapsulating the lockup contract's address and the stream id to cancel."
            }
          },
          "batchCreateWithDeltas(address,address,(address,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": {
            "details": "Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithDeltas} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithDeltas}.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamIds": "The ids of the newly created streams."
            }
          },
          "batchCreateWithDurations(address,address,(address,address,uint128,bool,(uint40,uint40),(address,uint256))[],bytes)": {
            "details": "Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithDurations} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithDurations}.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamIds": "The ids of the newly created streams."
            }
          },
          "batchCreateWithMilestones(address,address,(address,uint40,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": {
            "details": "Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupDynamic.createWithMilestones} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupDynamic.createWithMilestones}.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamIds": "The ids of the newly created streams."
            }
          },
          "batchCreateWithRange(address,address,(address,address,uint128,bool,(uint40,uint40,uint40),(address,uint256))[],bytes)": {
            "details": "Requirements: - Must be delegate called. - There must be at least one element in `batch`. - All requirements from {ISablierV2LockupLinear.createWithRange} must be met for each stream.",
            "params": {
              "asset": "The contract address of the ERC-20 asset used for streaming.",
              "batch": "An array of structs, each encapsulating a subset of the parameters of {SablierV2LockupLinear.createWithRange}.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamIds": "The ids of the newly created streams."
            }
          },
          "burn(address,uint256)": {
            "details": "Must be delegate called."
          },
          "cancel(address,uint256)": {
            "details": "Notes: - All refunded assets are forwarded to the proxy owner. Requirements: - Must be delegate called."
          },
          "cancelAndCreateWithDeltas(address,uint256,address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "details": "Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupDynamic.createWithDeltas} for full documentation. Requirements: - Must be delegate called.",
            "params": {
              "createParams": "A struct encapsulating the create function parameters, which are documented in V2 Core.",
              "lockup": "The address of the Lockup streaming contract where the stream to cancel is.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract to use for creating the new stream.",
              "streamId": "The id of the stream to cancel.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "newStreamId": "The id of the newly created stream."
            }
          },
          "cancelAndCreateWithDurations(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": {
            "details": "Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupLinear.createWithDurations} for full documentation. Requirements: - Must be delegate called.",
            "params": {
              "lockup": "The address of the Lockup streaming contract where the stream to cancel is.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract to use for creating the new stream.",
              "streamId": "The id of the stream to cancel.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "newStreamId": "The id of the newly created stream."
            }
          },
          "cancelAndCreateWithMilestones(address,uint256,address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "details": "Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupDynamic.createWithMilestones} for full documentation. Requirements: - Must be delegate called.",
            "params": {
              "createParams": "A struct encapsulating the create function parameters, which are documented in V2 Core.",
              "lockup": "The address of the Lockup streaming contract where the stream to cancel is.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract to use for creating the new stream.",
              "streamId": "The id of the stream to cancel.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "newStreamId": "The id of the newly created stream."
            }
          },
          "cancelAndCreateWithRange(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": {
            "details": "Notes: - `streamId` can reference either a Lockup Linear or a Lockup Dynamic stream. - See {ISablierV2Lockup.cancel} and {ISablierV2LockupLinear.createWithRange} for full documentation. Requirements: - Must be delegate called.",
            "params": {
              "lockup": "The address of the Lockup streaming contract where the stream to cancel is.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract to use for creating the new stream.",
              "streamId": "The id of the stream to cancel.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "newStreamId": "The id of the newly created stream."
            }
          },
          "cancelMultiple(address,address[],uint256[])": {
            "details": "Notes: - All refunded assets are forwarded to the proxy owner. - It is assumed that `assets` includes only the assets associated with `streamIds`. If any asset is missing, the refunded amount will be left in the proxy. Requirements: - Must be delegate called.",
            "params": {
              "assets": "The contract addresses of the ERC-20 assets used for streaming.",
              "lockup": "The address of the Lockup streaming contract.",
              "streamIds": "The stream ids to cancel."
            }
          },
          "createWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "details": "Must be delegate called.",
            "params": {
              "createParams": "A struct encapsulating the create function parameters, which are documented in V2 Core.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "createWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": {
            "details": "Must be delegate called.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "createWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "details": "Must be delegate called.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "createWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": {
            "details": "Must be delegate called.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract.",
              "transferData": "Bytes used for additional information, specific to the implementation, it may contain the parameters needed for Permit2 in one implementation and may be ignored in another."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "renounce(address,uint256)": {
            "details": "Must be delegate called."
          },
          "withdraw(address,uint256,address,uint128)": {
            "details": "Must be delegate called."
          },
          "withdrawMax(address,uint256,address)": {
            "details": "Must be delegate called."
          },
          "withdrawMaxAndTransfer(address,uint256,address)": {
            "details": "Must be delegate called."
          },
          "withdrawMultiple(address,uint256[],address,uint128[])": {
            "details": "Must be delegate called."
          },
          "wrapAndCreateWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": {
            "details": "Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupDynamic.createWithDeltas} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "wrapAndCreateWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)))": {
            "details": "Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupLinear.createWithDurations} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract."
            }
          },
          "wrapAndCreateWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": {
            "details": "Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupDynamic.createWithMilestones} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupDynamic": "The address of the {SablierV2LockupDynamic} contract."
            },
            "returns": {
              "streamId": "The id of the newly created stream."
            }
          },
          "wrapAndCreateWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)))": {
            "details": "Notes: - `createParams.totalAmount` is overwritten with `msg.value`. - See {ISablierV2LockupLinear.createWithRange} for full documentation. Requirements: - Must be delegate called. - The ERC-20 amount credited by the wrapper contract must be equal to `msg.value`.",
            "params": {
              "createParams": "Struct encapsulating the function parameters, which are documented in V2 Core.",
              "lockupLinear": "The address of the {SablierV2LockupLinear} contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchCancelMultiple((address,uint256[])[],address[])": {
            "notice": "Cancels multiple streams across different lockup contracts."
          },
          "batchCreateWithDeltas(address,address,(address,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithDeltas`."
          },
          "batchCreateWithDurations(address,address,(address,address,uint128,bool,(uint40,uint40),(address,uint256))[],bytes)": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithDurations`."
          },
          "batchCreateWithMilestones(address,address,(address,uint40,bool,address,uint128,(address,uint256),(uint128,uint64,uint40)[])[],bytes)": {
            "notice": "Creates a batch of Lockup Dynamic streams using `createWithMilestones`."
          },
          "batchCreateWithRange(address,address,(address,address,uint128,bool,(uint40,uint40,uint40),(address,uint256))[],bytes)": {
            "notice": "Creates a batch of Lockup Linear streams using `createWithRange`."
          },
          "burn(address,uint256)": {
            "notice": "Mirror for {ISablierV2Lockup.burn}."
          },
          "cancel(address,uint256)": {
            "notice": "Mirror for {ISablierV2Lockup.cancel}."
          },
          "cancelAndCreateWithDeltas(address,uint256,address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "notice": "Cancels a Lockup stream and creates a new Lockup Dynamic stream using `createWithDeltas`."
          },
          "cancelAndCreateWithDurations(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": {
            "notice": "Cancels a Lockup stream and creates a new Lockup Linear stream using `createWithDurations`."
          },
          "cancelAndCreateWithMilestones(address,uint256,address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "notice": "Cancels a Lockup stream and creates a new Lockup Dynamic stream using `createWithMilestones`."
          },
          "cancelAndCreateWithRange(address,uint256,address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": {
            "notice": "Cancels a Lockup stream and creates a new Lockup Linear stream using `createWithRange`."
          },
          "cancelMultiple(address,address[],uint256[])": {
            "notice": "Mirror for {ISablierV2Lockup.cancelMultiple}."
          },
          "createWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "notice": "Mirror for {SablierV2LockupDynamic.createWithDeltas}."
          },
          "createWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)),bytes)": {
            "notice": "Mirror for {SablierV2LockupLinear.createWithDurations}."
          },
          "createWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]),bytes)": {
            "notice": "Mirror for {SablierV2LockupDynamic.createWithMilestones}."
          },
          "createWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)),bytes)": {
            "notice": "Mirror for {SablierV2LockupLinear.createWithRange}."
          },
          "renounce(address,uint256)": {
            "notice": "Mirror for {ISablierV2Lockup.renounce}."
          },
          "withdraw(address,uint256,address,uint128)": {
            "notice": "Mirror for {ISablierV2Lockup.withdraw}."
          },
          "withdrawMax(address,uint256,address)": {
            "notice": "Mirror for {ISablierV2Lockup.withdrawMax}."
          },
          "withdrawMaxAndTransfer(address,uint256,address)": {
            "notice": "Mirror for {ISablierV2Lockup.withdrawMaxAndTransfer}."
          },
          "withdrawMultiple(address,uint256[],address,uint128[])": {
            "notice": "Mirror for {ISablierV2Lockup.withdrawMultiple}."
          },
          "wrapAndCreateWithDeltas(address,(address,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": {
            "notice": "Wraps the native asset payment in ERC-20 form and creates a Lockup Dynamic stream using `createWithDeltas`."
          },
          "wrapAndCreateWithDurations(address,(address,address,uint128,address,bool,(uint40,uint40),(address,uint256)))": {
            "notice": "Wraps the native asset payment in ERC-20 form and creates a Lockup Linear stream using `createWithDurations`."
          },
          "wrapAndCreateWithMilestones(address,(address,uint40,bool,address,uint128,address,(address,uint256),(uint128,uint64,uint40)[]))": {
            "notice": "Wraps the native asset payment in ERC-20 form and creates a Lockup Dynamic stream using `createWithMilestones`."
          },
          "wrapAndCreateWithRange(address,(address,address,uint128,address,bool,(uint40,uint40,uint40),(address,uint256)))": {
            "notice": "Wraps the native asset payment in ERC-20 form and creates a Lockup Linear stream using `createWithRange`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/math/=lib/v2-core/lib/prb-math/",
        "@prb/proxy-test/=lib/prb-proxy/test/",
        "@prb/proxy/=lib/prb-proxy/",
        "@prb/test/=lib/prb-test/src/",
        "@sablier/v2-core-script/=lib/v2-core/script/",
        "@sablier/v2-core-test/=lib/v2-core/test/",
        "@sablier/v2-core/=lib/v2-core/",
        "@uniswap/permit2-test/=lib/permit2/test/",
        "@uniswap/permit2/=lib/permit2/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/permit2/",
        "prb-math/=lib/v2-core/lib/prb-math/src/",
        "prb-proxy/=lib/prb-proxy/",
        "prb-test/=lib/prb-test/src/",
        "solady/=lib/solady/src/",
        "solarray/=lib/v2-core/lib/solarray/src/",
        "solmate/=lib/permit2/lib/solmate/",
        "v2-core/=lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/SablierV2ProxyTargetApprove.sol": "SablierV2ProxyTargetApprove"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/prb-proxy/src/interfaces/IPRBProxy.sol": {
        "keccak256": "0x3acec1c08296ef7f81902a7b6b883a70be6923c259af27ded37b43cd33d8663e",
        "urls": [
          "bzz-raw://6f5fb1345605398e99ac334d27043bea6adf4242868b6a9f274623f8c1ff754a",
          "dweb:/ipfs/QmfXVKyH3ctiC8YrKjCLRiehVpgAMY6GiKrpAvVn1CduQ6"
        ],
        "license": "MIT"
      },
      "lib/prb-proxy/src/interfaces/IPRBProxyPlugin.sol": {
        "keccak256": "0x6e0ce4998cd104b2cde36cdd3e0e07fb200f606e82a98cb25b1302ac0d969714",
        "urls": [
          "bzz-raw://baeb01d83a07b81412341a9899d6048426b6aec72d06c88271bf7c261e2dea88",
          "dweb:/ipfs/QmTkUVmRzpxuf8SvLpm2TKE2AcJ7KL7gVMKRYJ9apCLVM1"
        ],
        "license": "MIT"
      },
      "lib/prb-proxy/src/interfaces/IPRBProxyRegistry.sol": {
        "keccak256": "0x3dc040a25929144a7d88710d82f94448fcc40367c6175345b14b0ae36189aa59",
        "urls": [
          "bzz-raw://2a9b01bb4b8605ac28451b9dea628228d6f4b17641e29b00cc4d40acb10d15ce",
          "dweb:/ipfs/Qmbfz7THunKGVtX6VCyiXiGoGLeAbh3fk5MWj8cyn1Vamt"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/Common.sol": {
        "keccak256": "0x70b3a76443312b2c6c500996306a18e3d91e5d56fed0d898d98ca0bfb6225053",
        "urls": [
          "bzz-raw://be75b034b8c27e96b375e862528afb52a2d11e75c4a25918e10d7db31cdec039",
          "dweb:/ipfs/QmQ4L3tvpDx2ophHRAW7Sc52QhVZzn4e5PKTgLwqt32F1B"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/UD2x18.sol": {
        "keccak256": "0xfb624e24cd8bb790fa08e7827819de85504a86e20e961fa4ad126c65b6d90641",
        "urls": [
          "bzz-raw://dd795b8df250e7eedc68e2dba1afbb60357ce8f22f21bed212b5a9046d2057d2",
          "dweb:/ipfs/QmUHtrSr8Gb6bvSe2rCWPA5YrJq72UiJARYr1gZqFVRsYH"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd1x18/Casting.sol": {
        "keccak256": "0x9e49e2b37c1bb845861740805edaaef3fe951a7b96eef16ce84fbf76e8278670",
        "urls": [
          "bzz-raw://d3f65f257f9f516f2b40ca30b1c999819777111bd59a92376df6c5823453165a",
          "dweb:/ipfs/QmVQRKMS6ibv6x9qWXLJp2KZw9qs6Yz1sYZQWoSBQM8Pkz"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd1x18/Constants.sol": {
        "keccak256": "0xb51aab4a2ea76f530dccbf3b7d4af24c8f3ceef67f3c574b58650466ea924a3f",
        "urls": [
          "bzz-raw://b9fccf58b2b69179a311f996f772d9bf255fd1d0de9ba69ab89b45ef81008770",
          "dweb:/ipfs/QmTYE7xmFqUzQ2o8SmCpMu2GxkBJLjTtSWngoe7JXzsv2D"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd1x18/Errors.sol": {
        "keccak256": "0x836cb42ba619ca369fd4765bc47fefc3c3621369c5861882af14660aca5057ee",
        "urls": [
          "bzz-raw://58873bcebf7398f63c6d3f234073fb6739fe4fae87428010cd0bc1aa68f53499",
          "dweb:/ipfs/QmZSZ9z4ZQUGRc1TRiL2F9AL7ysnGRXwRtocMa2zhxHFDp"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd1x18/ValueType.sol": {
        "keccak256": "0x2f86f1aa9fca42f40808b51a879b406ac51817647bdb9642f8a79dd8fdb754a7",
        "urls": [
          "bzz-raw://31559dfc012ebe40fcdb38c45e7edfa16406f11c6ea219e8676749f20dbbb5dd",
          "dweb:/ipfs/QmXeYzF9hYQphVExJRp41Vkebrs51k7xgr3jXfKgdD87XC"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/Casting.sol": {
        "keccak256": "0x3b21b60ec2998c3ae32f647412da51d3683b3f183a807198cc8d157499484f99",
        "urls": [
          "bzz-raw://08a49ba7ebf592a89e1a81e5987351e7810e371f4c3d2356d9b5a9b58462c809",
          "dweb:/ipfs/QmcvyHaUzd74eYjcZWQgUDFJfYrU8kFohiB1H5cs8HgUDp"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/Constants.sol": {
        "keccak256": "0xe0a1ca1a7b5b2d637cff83a8caa3d2e67a6a34f7ee9df58a9ca5d5fa268c474a",
        "urls": [
          "bzz-raw://3e9a6980e97a68f9148c350439bc0b3ca4126a4428752b151744097da3f650c8",
          "dweb:/ipfs/QmVRJqG378u46dnvjgYkcLjnvHW8yNv5ijLoUWPMGQscuC"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/Errors.sol": {
        "keccak256": "0x83ee24e41d235bc05cb641d2c5c16c67b17fa00e4593661a8d14350435d4df04",
        "urls": [
          "bzz-raw://40cedd66b7ba40126b2668c2fbe8ccd6ae88bd5853c205ac54f643e49acd31c1",
          "dweb:/ipfs/QmWZz7bsQceUUzJiURQE5XtfzNW2Ammiz2WSNsZGxCYT7a"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/Math.sol": {
        "keccak256": "0xedd0635769176ab99878a91ce267cee2ca107b30e6b0db10736573ff4d102868",
        "urls": [
          "bzz-raw://51795a2077ea6f109656048530481bb10c7f2b29e868f9a02d7b134d1b30c787",
          "dweb:/ipfs/Qmb9wBJ5vPtKNbiz9bbWz8Ufs6qLJWKanyg1zmRmSwUVze"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/sd59x18/ValueType.sol": {
        "keccak256": "0xe03112d145dcd5863aff24e5f381debaae29d446acd5666f3d640e3d9af738d7",
        "urls": [
          "bzz-raw://abacb7cba4bd732c961cfe7d66c5eec924c7a9ffe0bf07fafc95b65a887071f6",
          "dweb:/ipfs/QmSBefftoSJDMdmp5CFAVvJjPHJXHhd11x1FzkcHQxLjoT"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud2x18/Casting.sol": {
        "keccak256": "0x07ec9a8adddfe6bf37f0d9ce7702c5620a6215340889701da0525ed190ccc099",
        "urls": [
          "bzz-raw://3500550c9ed259e5a876d14510d7e4a2226fac41e04535dddffaf9e3e6dc67e5",
          "dweb:/ipfs/QmbA5y7zdqsFELeNPj1WgkP28GXBcnfYajj3E6nangJo2F"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud2x18/Constants.sol": {
        "keccak256": "0xbd11da8ad79ffc8b7b8244c82632b0ca31970e190a8877ba1a69b4b8065dcea5",
        "urls": [
          "bzz-raw://f0d3d5cb4711d83e0fe654b8338b6685b6e9d9f234c645813533129ae48fa14b",
          "dweb:/ipfs/QmZW47VmyizEwAxuv6tdeJmrMM58KvsiaRjidcBgqKg4CP"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud2x18/Errors.sol": {
        "keccak256": "0xdf1e22f0b4c8032bcc8b7f63fe3984e1387f3dc7b2e9ab381822249f75376d33",
        "urls": [
          "bzz-raw://975f9beb25a1ebff9b29dd5555e1f4f14a4fbf178d15ebd3add5ed5f5985fdec",
          "dweb:/ipfs/QmbvTvdtSrZi7J4sJuv6zUsymT5UctJnx4DkGezXW25r59"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x2802edc9869db116a0b5c490cc5f8554742f747183fa30ac5e9c80bb967e61a1",
        "urls": [
          "bzz-raw://e9657724f5032559c953cba61db0fbca71f6b50f51edb53a08f840cb74a36c95",
          "dweb:/ipfs/QmX2KF8v7ng13NaavyogM3SGR4jCMLUuqKkxFhtxvc7D7m"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Casting.sol": {
        "keccak256": "0x5bb532da36921cbdac64d1f16de5d366ef1f664502e3b7c07d0ad06917551f85",
        "urls": [
          "bzz-raw://f0819da49f6a86a1fc2ece8e8a4292f8d102dc1043a1d0a545c26d020d1f36fe",
          "dweb:/ipfs/QmdzLoo99EBJv2GGiZZAAY8Bfr4ivFykzeSbpF48aJxFZ9"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xaf7fc2523413822de3b66ba339fe2884fb3b8c6f6cf38ec90a2c3e3aae71df6b",
        "urls": [
          "bzz-raw://655c9fe2434ca039b67277d753a60d39f2938260c716a36d24b591acf8c4fb75",
          "dweb:/ipfs/QmbygBAjCoFe9oUp9QkJ45jqctThk7VSmiSVLHV4Z3WHVe"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Errors.sol": {
        "keccak256": "0xa8c60d4066248df22c49c882873efbc017344107edabc48c52209abbc39cb1e3",
        "urls": [
          "bzz-raw://8fb7e1103309b4f99e95bb638850c0321272d57bd3e6b0a6331d699ff103cbaf",
          "dweb:/ipfs/QmfLFHjVJv4ibEvMmh46qC5nCbeCYSfXgCTDWQqfW3jnyB"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/Math.sol": {
        "keccak256": "0xafe12d658b5bb495226df1841cbfbcb25e9fc443c6d41a85b5ac6aa7ec79ea29",
        "urls": [
          "bzz-raw://357d345f960581548f27fb43fb2320101033c053b949f5cb4d75390a058df205",
          "dweb:/ipfs/QmYjQwVdwCWZDNkxUD4T1nwieP38o4HWtYUYjAmfpFpg3y"
        ],
        "license": "MIT"
      },
      "lib/v2-core/lib/prb-math/src/ud60x18/ValueType.sol": {
        "keccak256": "0xdd873b5124180d9b71498b3a7fe93b1c08c368bec741f7d5f8e17f78a0b70f31",
        "urls": [
          "bzz-raw://7df6700f747dd01b2520a900a8d6b5a4d239b8063c31384f40921afe22295c29",
          "dweb:/ipfs/QmSPSPQJKNSzGJu2ri5EfWjcLfA2xDHfUehyBp4FpUu2qZ"
        ],
        "license": "MIT"
      },
      "lib/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e",
        "urls": [
          "bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885",
          "dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2Base.sol": {
        "keccak256": "0xb12e58a05389c958f79ebe1667e167c1e0bb681a18ae534f5e454abbd66f6821",
        "urls": [
          "bzz-raw://1c57fabd0290e38c73c88cbf09ffe1675f3d9367fbba72ad647fbe729f5fd9f7",
          "dweb:/ipfs/QmZ2ybkhNR8CzqMi5fwSUZodZ9otYBGR4pVDp7fk78KpAM"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2Comptroller.sol": {
        "keccak256": "0xfe089975be90f0efeeafc9ac9dfa5c301ca1f5c178177ac5589a8483a0aa84a3",
        "urls": [
          "bzz-raw://c6b87d383df9fab91a62629107ebd44122d16de55a01c3996cbb155a1373bde7",
          "dweb:/ipfs/QmTLfmcHJh8ZYbLai1oAkjBak9fpMnv3HDaGoMQd3wFcNF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2Lockup.sol": {
        "keccak256": "0x0e37a224e498775d0e541d93f3be6cd78d57399be99d9b4885ac038c49d8e774",
        "urls": [
          "bzz-raw://4d535aea117e7ff38552ccbbc9d435404a10299bab650e545c2c78a084aef246",
          "dweb:/ipfs/QmR6J7tFnv3mCKEHJoumGjYAJNvVEx1kjaTxwRuK3YTugo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2LockupDynamic.sol": {
        "keccak256": "0xa21ea33ba680ef84d7d6aa376d9f5ca391c398067fd1c56e3a8ccf50916e21da",
        "urls": [
          "bzz-raw://68010346665808be7a4bdba4163ae78eeec81a5ed23ce6eca40be173aee57feb",
          "dweb:/ipfs/QmNf6Y75TCTNaJX2wZMFeo5sPd1aB1EewgSsMumJ71yf4Q"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2LockupLinear.sol": {
        "keccak256": "0x84b5aa5b1ccf92a53cc767180d47b12b6e2a6cf6fa5c750fe24fb3f3f468bdb6",
        "urls": [
          "bzz-raw://272633f6592aa1b09be49b838335ea8f4a9872019864466a531b44acb62cac1c",
          "dweb:/ipfs/QmZTBSSRhDzFihbhw7xefiWhTnP1sGfRKuxRe6iFMPCSE8"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/interfaces/ISablierV2NFTDescriptor.sol": {
        "keccak256": "0x35172718298221f3aac87424252e4eaf7480ce901fe9a7b92d8fdd871ecdad3a",
        "urls": [
          "bzz-raw://39d0d2d17d3f6ec4313a6313e85af2fd8a861930a8563a2b8e9ba1da099c6d73",
          "dweb:/ipfs/QmQmKYkqnLJrfEyDT2YwiXyzhYG4SaHpu6gsaFePqp2hxV"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/v2-core/src/types/DataTypes.sol": {
        "keccak256": "0x3b1d42a5fedf5e5de718aa289aec0f72ad7b1a0e2b16515460c24942a30e9694",
        "urls": [
          "bzz-raw://555451f8704595a0973ade27d8d199c363366ff6346c5425d156d332ea7bfb3b",
          "dweb:/ipfs/QmYkAyestxNeonNgfPCKQkzKsproZV7U3UGhMX2TQumNr1"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/SablierV2ProxyTargetApprove.sol": {
        "keccak256": "0xf74c02c764ac6a2e79bc7b715416c29e2d1cd9046df77d9fdcfe13497f5fc6a6",
        "urls": [
          "bzz-raw://8e24b10e83f6984d495ce1543c0d3e9ca020bcddde180ad66b1cebb2aa0157c2",
          "dweb:/ipfs/QmdeTncK8RV68M4akjxVMPhNm8sYxWm7jaNyLzzWvGYXDT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/OnlyDelegateCall.sol": {
        "keccak256": "0xedd52b5fcca2b2c4e7943d69539f4c966ce9f855fc36981df5c43ccfbd4b6d2b",
        "urls": [
          "bzz-raw://2b3e0457ff66111529e4e27f3488edac59335e8a8975be28feae9ab74c3cdcfa",
          "dweb:/ipfs/Qma9oot2YTSmdnRqfTBZVt87ToadACAXPpGwjbY5J9Twbw"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/SablierV2ProxyTarget.sol": {
        "keccak256": "0xa4317b06b38d24a39fbc5bcafa66d7a4db443a68dee21ca11c9ff91e5f7a406a",
        "urls": [
          "bzz-raw://2960695672346009522642fb0e706c989af7834a449b9f275e77039bb9b7af7e",
          "dweb:/ipfs/QmVWou9pRGncq9bqJQbWac4hy4HPTnFj8CXKaAFmgoxHqg"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierV2ProxyTarget.sol": {
        "keccak256": "0x13165be6cacd7a79456e72e72d01a323cd28271639b906400bc607c7a85b4b13",
        "urls": [
          "bzz-raw://a9a8042a4a041a781bab095fe2464bb8de37b0a5b15359a30ffd3014e3fbefeb",
          "dweb:/ipfs/QmfGoeKzjPMSYdQjtkNJKSHZHqG6Z2XNxaYJnCn2sgXBWf"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IWrappedNativeAsset.sol": {
        "keccak256": "0xa5aea82f7b9d65799df87f1de54db729f8f044cb5a037ab9c825ab5f6546f26d",
        "urls": [
          "bzz-raw://325f60feaa36037314735754a57792a03c43768b0dea245ae1c7dad5a56568e3",
          "dweb:/ipfs/QmREBuuHmHTG4rtuFPAhcyRHUFNwR14WaGkkVBwJqLEK5s"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x60843b38a83ef7c00d21462722c38654b786b809d6c5bb7df44942a4e4e2d15a",
        "urls": [
          "bzz-raw://ab7bd60505fbd789aa6884e63593ad0cd21f3b4ccc85676433fcd762c822f060",
          "dweb:/ipfs/QmPNRsU5F1rRyUsb3wUzdFKjMstzDBqtjNgqvwDs1wHPJH"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0xdf0def1a70e37566c5bdf09410b6b003c4a5dd03ead1a8df25a73a1d21d60c7a",
        "urls": [
          "bzz-raw://0b2f46bd1b8b029624ccb30174731337b9f7f444dfa245af04ca75ecf8fb46b5",
          "dweb:/ipfs/Qmc6fNfhULFgu6Z3g1SDZNxmpz4DDKKSweVxGD18iH44fj"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SablierV2ProxyTargetApprove.sol",
    "id": 46051,
    "exportedSymbols": {
      "IERC20": [24212],
      "SablierV2ProxyTarget": [48035],
      "SablierV2ProxyTargetApprove": [46050],
      "SafeERC20": [24649]
    },
    "nodeType": "SourceUnit",
    "src": "45:1291:115",
    "nodes": [
      {
        "id": 45999,
        "nodeType": "PragmaDirective",
        "src": "45:25:115",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".19"]
      },
      {
        "id": 46001,
        "nodeType": "ImportDirective",
        "src": "72:72:115",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46051,
        "sourceUnit": 24213,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46000,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24212,
              "src": "81:6:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46003,
        "nodeType": "ImportDirective",
        "src": "145:84:115",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46051,
        "sourceUnit": 24650,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46002,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24649,
              "src": "154:9:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46005,
        "nodeType": "ImportDirective",
        "src": "231:76:115",
        "nodes": [],
        "absolutePath": "src/abstracts/SablierV2ProxyTarget.sol",
        "file": "./abstracts/SablierV2ProxyTarget.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46051,
        "sourceUnit": 48036,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46004,
              "name": "SablierV2ProxyTarget",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48035,
              "src": "240:20:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46050,
        "nodeType": "ContractDefinition",
        "src": "450:885:115",
        "nodes": [
          {
            "id": 46012,
            "nodeType": "UsingForDirective",
            "src": "517:27:115",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46009,
              "name": "SafeERC20",
              "nameLocations": ["523:9:115"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24649,
              "src": "523:9:115"
            },
            "typeName": {
              "id": 46011,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46010,
                "name": "IERC20",
                "nameLocations": ["537:6:115"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24212,
                "src": "537:6:115"
              },
              "referencedDeclaration": 24212,
              "src": "537:6:115",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$24212",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 46049,
            "nodeType": "FunctionDefinition",
            "src": "809:524:115",
            "nodes": [],
            "body": {
              "id": 46048,
              "nodeType": "Block",
              "src": "1000:333:115",
              "nodes": [],
              "statements": [
                {
                  "assignments": [46027],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46027,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1055:5:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 46048,
                      "src": "1047:13:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1047:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46030,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46028,
                      "name": "_getOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47895,
                      "src": "1063:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 46029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:11:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1047:27:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46034,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46027,
                        "src": "1177:5:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46037,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1196:4:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SablierV2ProxyTargetApprove_$46050",
                              "typeString": "contract SablierV2ProxyTargetApprove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SablierV2ProxyTargetApprove_$46050",
                              "typeString": "contract SablierV2ProxyTargetApprove"
                            }
                          ],
                          "id": 46036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1188:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1188:7:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46039,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46020,
                        "src": "1210:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "expression": {
                        "id": 46031,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46018,
                        "src": "1146:5:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24212",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 46033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1152:16:115",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24333,
                      "src": "1146:22:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$24212_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$24212_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 46040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": ["1171:4:115", "1184:2:115", "1203:5:115"],
                    "names": ["from", "to", "value"],
                    "nodeType": "FunctionCall",
                    "src": "1146:73:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46041,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:73:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46043,
                        "name": "sablierContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46015,
                        "src": "1295:15:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46044,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46018,
                        "src": "1312:5:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24212",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 46045,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46020,
                        "src": "1319:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$24212",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 46042,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47826,
                      "src": "1286:8:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$24212_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,uint256)"
                      }
                    },
                    "id": 46046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:40:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46047,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:40:115"
                }
              ]
            },
            "baseFunctions": [47908],
            "documentation": {
              "id": 46013,
              "nodeType": "StructuredDocumentation",
              "src": "550:254:115",
              "text": "@notice Transfers the given `amount` of `asset` to the Sablier contract using standard the ERC-20\n approve and transfer flow, and then approves Sablier to spend the funds.\n @dev The `transferData` data is ignored in this implementation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleTransfer",
            "nameLocation": "818:15:115",
            "overrides": {
              "id": 46024,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "987:8:115"
            },
            "parameters": {
              "id": 46023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46015,
                  "mutability": "mutable",
                  "name": "sablierContract",
                  "nameLocation": "851:15:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 46049,
                  "src": "843:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46018,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "883:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 46049,
                  "src": "876:12:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$24212",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 46017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46016,
                      "name": "IERC20",
                      "nameLocations": ["876:6:115"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24212,
                      "src": "876:6:115"
                    },
                    "referencedDeclaration": 24212,
                    "src": "876:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$24212",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46020,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "906:6:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 46049,
                  "src": "898:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 46019,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46049,
                  "src": "922:14:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46021,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:128:115"
            },
            "returnParameters": {
              "id": 46025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:0:115"
            },
            "scope": 46050,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46007,
              "name": "SablierV2ProxyTarget",
              "nameLocations": ["490:20:115"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48035,
              "src": "490:20:115"
            },
            "id": 46008,
            "nodeType": "InheritanceSpecifier",
            "src": "490:20:115"
          }
        ],
        "canonicalName": "SablierV2ProxyTargetApprove",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46006,
          "nodeType": "StructuredDocumentation",
          "src": "309:141:115",
          "text": "@title SablierV2ProxyTargetApprove\n @notice Proxy target contract that implements the transfer logic using standard ERC-20 approvals."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [46050, 48035, 46217, 48750],
        "name": "SablierV2ProxyTargetApprove",
        "nameLocation": "459:27:115",
        "scope": 46051,
        "usedErrors": [48774, 48806, 48813],
        "usedEvents": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 115
}
