{
  "abi": [
    {
      "type": "function",
      "name": "FEE_COLLECTOR_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "FEE_MANAGEMENT_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_FEE_USD",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MINIMAL_INTERFACE_ID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes4", "internalType": "bytes4" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateMinFeeWei",
      "inputs": [{ "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateMinFeeWeiFor",
      "inputs": [
        { "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertUSDFeeToWei",
      "inputs": [{ "name": "feeUSD", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "disableCustomFeeUSDFor",
      "inputs": [
        { "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "result", "type": "bytes", "internalType": "bytes" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getMinFeeUSD",
      "inputs": [{ "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinFeeUSDFor",
      "inputs": [
        { "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRoleOrIsAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setCustomFeeUSDFor",
      "inputs": [
        { "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "user", "type": "address", "internalType": "address" },
        { "name": "customFeeUSD", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinFeeUSD",
      "inputs": [
        { "name": "protocol", "type": "uint8", "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "newMinFeeUSD", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOracle",
      "inputs": [{ "name": "newOracle", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [{ "name": "newAdmin", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFees",
      "inputs": [
        { "name": "protocolAddresses", "type": "address[]", "internalType": "address[]" },
        { "name": "feeRecipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "DisableCustomFeeUSD",
      "inputs": [
        { "name": "protocol", "type": "uint8", "indexed": true, "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "caller", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "user", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "previousMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "newMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Execute",
      "inputs": [
        { "name": "target", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "data", "type": "bytes", "indexed": false, "internalType": "bytes" },
        { "name": "result", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "account", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "role", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "account", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "role", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetCustomFeeUSD",
      "inputs": [
        { "name": "protocol", "type": "uint8", "indexed": true, "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "caller", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "user", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "previousMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "newMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetMinFeeUSD",
      "inputs": [
        { "name": "protocol", "type": "uint8", "indexed": true, "internalType": "enum ISablierComptroller.Protocol" },
        { "name": "caller", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "previousMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "newMinFeeUSD", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetOracle",
      "inputs": [
        { "name": "admin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "previousOracle", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "newOracle", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferAdmin",
      "inputs": [
        { "name": "oldAdmin", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newAdmin", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferFees",
      "inputs": [
        { "name": "feeRecipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "feeAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "FEE_COLLECTOR_ROLE()": "62a2a47c",
    "FEE_MANAGEMENT_ROLE()": "8afaa8b8",
    "MAX_FEE_USD()": "78ef7aea",
    "MINIMAL_INTERFACE_ID()": "c34df33e",
    "admin()": "f851a440",
    "calculateMinFeeWei(uint8)": "baf8f4b9",
    "calculateMinFeeWeiFor(uint8,address)": "419d289d",
    "convertUSDFeeToWei(uint256)": "b0fa59e8",
    "disableCustomFeeUSDFor(uint8,address)": "2fa32f4a",
    "execute(address,bytes)": "1cff79cd",
    "getMinFeeUSD(uint8)": "b9fbe2f8",
    "getMinFeeUSDFor(uint8,address)": "88dc31a8",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRoleOrIsAdmin(bytes32,address)": "e1678c6e",
    "oracle()": "7dc0d1d0",
    "proxiableUUID()": "52d1902d",
    "revokeRole(bytes32,address)": "d547741f",
    "setCustomFeeUSDFor(uint8,address,uint256)": "d09e86d9",
    "setMinFeeUSD(uint8,uint256)": "9f467352",
    "setOracle(address)": "7adbf973",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAdmin(address)": "75829def",
    "transferFees(address[],address)": "f2fc84b7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMinFeeUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinFeeUSD\",\"type\":\"uint256\"}],\"name\":\"DisableCustomFeeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMinFeeUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinFeeUSD\",\"type\":\"uint256\"}],\"name\":\"SetCustomFeeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousMinFeeUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinFeeUSD\",\"type\":\"uint256\"}],\"name\":\"SetMinFeeUSD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"SetOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TransferFees\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_COLLECTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_MANAGEMENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMAL_INTERFACE_ID\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"calculateMinFeeWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateMinFeeWeiFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeUSD\",\"type\":\"uint256\"}],\"name\":\"convertUSDFeeToWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"disableCustomFeeUSDFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"getMinFeeUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getMinFeeUSDFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleOrIsAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"customFeeUSD\",\"type\":\"uint256\"}],\"name\":\"setCustomFeeUSDFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ISablierComptroller.Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newMinFeeUSD\",\"type\":\"uint256\"}],\"name\":\"setMinFeeUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"protocolAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"transferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleGranted(address,address,bytes32)\":{\"params\":{\"account\":\"The address of the account to which the role is granted.\",\"admin\":\"The address of the admin that granted the role.\",\"role\":\"The identifier of the role.\"}},\"RoleRevoked(address,address,bytes32)\":{\"params\":{\"account\":\"The address of the account from which the role is revoked.\",\"admin\":\"The address of the admin that revoked the role.\",\"role\":\"The identifier of the role.\"}},\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}}},\"kind\":\"dev\",\"methods\":{\"MAX_FEE_USD()\":{\"details\":\"This is a constant state variable and is 100e8, which is equivalent to $100.\"},\"MINIMAL_INTERFACE_ID()\":{\"details\":\"Any new comptroller must support the minimal interface ID made up of the following functions: 1. {calculateMinFeeWeiFor} - used by protocols inherited from {IComptrollerable}. 2. {convertUSDFeeToWei}    - used by protocols inherited from {IComptrollerable}. 3. {execute}               - used by comptroller admin to perform necessary operations. 4. {getMinFeeUSDFor}       - used by protocols inherited from {IComptrollerable}.\"},\"calculateMinFeeWei(uint8)\":{\"details\":\"See the documentation for {convertUSDFeeToWei} for more details.\",\"params\":{\"protocol\":\"The protocol as defined in {Protocol} enum.\"}},\"calculateMinFeeWeiFor(uint8,address)\":{\"details\":\"If the custom fee is enabled, it returns the custom fee, otherwise it returns the default minimum fee. See the documentation for {convertUSDFeeToWei} for more details.\",\"params\":{\"protocol\":\"The protocol as defined in {Protocol} enum.\",\"user\":\"The user address.\"}},\"convertUSDFeeToWei(uint256)\":{\"details\":\"The price is considered to be 0 if: 1. The oracle is not set. 2. The min USD fee is 0. 3. The oracle price is \\u2264 0. 4. The oracle's update timestamp is in the future. 5. The oracle price hasn't been updated in the last 24 hours.\",\"params\":{\"feeUSD\":\"The fee in USD, denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1.\"},\"returns\":{\"_0\":\"The fee in wei, denominated in 18 decimals (1e18 = 1 native token).\"}},\"disableCustomFeeUSDFor(uint8,address)\":{\"details\":\"Emits a {DisableCustomFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role.\",\"params\":{\"protocol\":\"The protocol as defined in {Protocol} enum.\",\"user\":\"The user address.\"}},\"execute(address,bytes)\":{\"details\":\"Emits an {Execute} event. Requirements: - `msg.sender` must be the admin. - `target` must be a contract.\",\"params\":{\"data\":\"Function selector plus ABI encoded data.\",\"target\":\"The address of the target contract on which the data is executed.\"},\"returns\":{\"result\":\"The result from the call.\"}},\"getMinFeeUSD(uint8)\":{\"details\":\"The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1.\"},\"getMinFeeUSDFor(uint8,address)\":{\"details\":\"The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1.\"},\"grantRole(bytes32,address)\":{\"details\":\"Emits {RoleGranted} event. Requirements: - `msg.sender` must be the admin.\",\"params\":{\"account\":\"The address of the account to which the role is granted.\",\"role\":\"The identifier of the role.\"}},\"oracle()\":{\"details\":\"A zero address indicates that the oracle is not set.\"},\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Emits {RoleRevoked} event. Requirements: - `msg.sender` must be the admin.\",\"params\":{\"account\":\"The address of the account from which the role is revoked.\",\"role\":\"The identifier of the role.\"}},\"setCustomFeeUSDFor(uint8,address,uint256)\":{\"details\":\"Emits a {SetCustomFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role. - `customFeeUSD` must be less than or equal to {MAX_FEE_USD}.\",\"params\":{\"customFeeUSD\":\"The custom USD fee to set, denominated in 8 decimals.\",\"protocol\":\"The protocol as defined in {Protocol} enum.\",\"user\":\"The user address.\"}},\"setMinFeeUSD(uint8,uint256)\":{\"details\":\"Emits a {SetMinFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role. - `newMinFeeUSD` must be less than or equal to {MAX_FEE_USD}.\",\"params\":{\"newMinFeeUSD\":\"The custom USD fee to set, denominated in 8 decimals.\",\"protocol\":\"The protocol as defined in {Protocol} enum.\"}},\"setOracle(address)\":{\"details\":\"Emits a {SetOracle} event. Requirements: - `msg.sender` must be the admin. - If `newOracle` is not the zero address, the call to it must not fail.\",\"params\":{\"newOracle\":\"The new oracle contract address. It can be the zero address.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}},\"transferFees(address[],address)\":{\"details\":\"Emits a {TransferFees} event. Notes: - If `feeRecipient` is a contract, it must be able to receive native tokens, e.g., ETH for Ethereum Mainnet. - `protocolAddresses` can be empty. Requirements: `feeRecipient` must not be the zero address. - If `msg.sender` has neither the {IRoleAdminable.FEE_COLLECTOR_ROLE} role nor is the contract admin, then `feeRecipient` must be the admin address. - `protocolAddresses` must implement the {IComptrollerable} interface.\",\"params\":{\"feeRecipient\":\"The address to which the entire fee from this contract is transferred.\",\"protocolAddresses\":\"An array of addresses of the Sablier protocols from which fees is transferred from.\"}}},\"title\":\"ISablierComptroller\",\"version\":1},\"userdoc\":{\"events\":{\"DisableCustomFeeUSD(uint8,address,address,uint256,uint256)\":{\"notice\":\"Emitted when the admin or the fee manager disables the custom USD fee for the provided user.\"},\"Execute(address,bytes,bytes)\":{\"notice\":\"Emitted when a target contract is called.\"},\"RoleGranted(address,address,bytes32)\":{\"notice\":\"Emitted when `account` is granted `role`.\"},\"RoleRevoked(address,address,bytes32)\":{\"notice\":\"Emitted when `account` is revoked `role`.\"},\"SetCustomFeeUSD(uint8,address,address,uint256,uint256)\":{\"notice\":\"Emitted when the admin or the fee manager sets the custom USD fee for the provided user.\"},\"SetMinFeeUSD(uint8,address,uint256,uint256)\":{\"notice\":\"Emitted when the admin or the fee manager sets a new minimum USD fee.\"},\"SetOracle(address,address,address)\":{\"notice\":\"Emitted when the oracle contract address is set by the admin.\"},\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"},\"TransferFees(address,uint256)\":{\"notice\":\"Emitted when the admin or the fee collector transfers the accrued fees to the fee recipient.\"}},\"kind\":\"user\",\"methods\":{\"FEE_COLLECTOR_ROLE()\":{\"notice\":\"A role with the authority to collect fees from the Sablier contracts.\"},\"FEE_MANAGEMENT_ROLE()\":{\"notice\":\"A role with the authority to update fees across the Sablier contracts.\"},\"MAX_FEE_USD()\":{\"notice\":\"Retrieves the maximum USD fee that can be set for claiming an airdrop or withdrawing from a stream.\"},\"MINIMAL_INTERFACE_ID()\":{\"notice\":\"The minimal interface ID of the comptroller.\"},\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"calculateMinFeeWei(uint8)\":{\"notice\":\"Calculates the minimum fee in wei for the given protocol.\"},\"calculateMinFeeWeiFor(uint8,address)\":{\"notice\":\"Calculates the minimum fee in wei for the provided user for the given protocol.\"},\"convertUSDFeeToWei(uint256)\":{\"notice\":\"Converts the fee amount from USD to Wei.\"},\"disableCustomFeeUSDFor(uint8,address)\":{\"notice\":\"Disables the custom USD fee for the provided user for the given protocol, defaulting to the minimum fee.\"},\"execute(address,bytes)\":{\"notice\":\"Executes an external call to any contract and function.\"},\"getMinFeeUSD(uint8)\":{\"notice\":\"Get the minimum fee in USD for the given protocol, paid in the native token of the chain, e.g., ETH for Ethereum Mainnet. Use {calculateMinFeeWei} to retrieve the fee in wei.\"},\"getMinFeeUSDFor(uint8,address)\":{\"notice\":\"Get the minimum fee in USD for the provided user for the given protocol, paid in the native token of the chain, e.g., ETH for Ethereum Mainnet. Use {calculateMinFeeWeiFor} to retrieve the fee in wei.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants `role` to `account`. Reverts if `account` already has the role.\"},\"hasRoleOrIsAdmin(bytes32,address)\":{\"notice\":\"Returns `true` if `account` has the `role` or is the admin.\"},\"oracle()\":{\"notice\":\"Retrieves the oracle contract address, which provides price data for the native token.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes `role` from `account`. Reverts if `account` does not have the role.\"},\"setCustomFeeUSDFor(uint8,address,uint256)\":{\"notice\":\"Sets the custom USD fee for the provided user for the given protocol.\"},\"setMinFeeUSD(uint8,uint256)\":{\"notice\":\"Sets a new min USD fee for the given protocol.\"},\"setOracle(address)\":{\"notice\":\"Sets the oracle contract address. The zero address can be used to disable the oracle.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"},\"transferFees(address[],address)\":{\"notice\":\"Transfers fees from the given protocol addresses to this contract, and then transfer the entire balance of this contract to the fee recipient.\"}},\"notice\":\"Manage fees across all Sablier protocols. State-changing functions are only accessible to the admin and the fee manager.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISablierComptroller.sol\":\"ISablierComptroller\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000000},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=node_modules/forge-std/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"src/interfaces/IAdminable.sol\":{\"keccak256\":\"0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126\",\"dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4\"]},\"src/interfaces/IRoleAdminable.sol\":{\"keccak256\":\"0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233\",\"dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi\"]},\"src/interfaces/ISablierComptroller.sol\":{\"keccak256\":\"0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b\",\"dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.29+commit.ab55807c" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "enum ISablierComptroller.Protocol",
              "name": "protocol",
              "type": "uint8",
              "indexed": true
            },
            { "internalType": "address", "name": "caller", "type": "address", "indexed": false },
            { "internalType": "address", "name": "user", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "previousMinFeeUSD", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "newMinFeeUSD", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "DisableCustomFeeUSD",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address", "indexed": true },
            { "internalType": "bytes", "name": "data", "type": "bytes", "indexed": false },
            { "internalType": "bytes", "name": "result", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "Execute",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "account", "type": "address", "indexed": true },
            { "internalType": "bytes32", "name": "role", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "account", "type": "address", "indexed": true },
            { "internalType": "bytes32", "name": "role", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum ISablierComptroller.Protocol",
              "name": "protocol",
              "type": "uint8",
              "indexed": true
            },
            { "internalType": "address", "name": "caller", "type": "address", "indexed": false },
            { "internalType": "address", "name": "user", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "previousMinFeeUSD", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "newMinFeeUSD", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "SetCustomFeeUSD",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum ISablierComptroller.Protocol",
              "name": "protocol",
              "type": "uint8",
              "indexed": true
            },
            { "internalType": "address", "name": "caller", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "previousMinFeeUSD", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "newMinFeeUSD", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "SetMinFeeUSD",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "previousOracle", "type": "address", "indexed": false },
            { "internalType": "address", "name": "newOracle", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "SetOracle",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldAdmin", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newAdmin", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "feeRecipient", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "feeAmount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "TransferFees",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_COLLECTOR_ROLE",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FEE_MANAGEMENT_ROLE",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_FEE_USD",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINIMAL_INTERFACE_ID",
          "outputs": [{ "internalType": "bytes4", "name": "", "type": "bytes4" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" }],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateMinFeeWei",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" },
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateMinFeeWeiFor",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "feeUSD", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "convertUSDFeeToWei",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" },
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableCustomFeeUSDFor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [{ "internalType": "bytes", "name": "result", "type": "bytes" }]
        },
        {
          "inputs": [{ "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinFeeUSD",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" },
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinFeeUSDFor",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleOrIsAdmin",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            { "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" },
            { "internalType": "address", "name": "user", "type": "address" },
            { "internalType": "uint256", "name": "customFeeUSD", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setCustomFeeUSDFor"
        },
        {
          "inputs": [
            { "internalType": "enum ISablierComptroller.Protocol", "name": "protocol", "type": "uint8" },
            { "internalType": "uint256", "name": "newMinFeeUSD", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinFeeUSD"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOracle", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOracle"
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "newAdmin", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            { "internalType": "address[]", "name": "protocolAddresses", "type": "address[]" },
            { "internalType": "address", "name": "feeRecipient", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFees"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MAX_FEE_USD()": {
            "details": "This is a constant state variable and is 100e8, which is equivalent to $100."
          },
          "MINIMAL_INTERFACE_ID()": {
            "details": "Any new comptroller must support the minimal interface ID made up of the following functions: 1. {calculateMinFeeWeiFor} - used by protocols inherited from {IComptrollerable}. 2. {convertUSDFeeToWei}    - used by protocols inherited from {IComptrollerable}. 3. {execute}               - used by comptroller admin to perform necessary operations. 4. {getMinFeeUSDFor}       - used by protocols inherited from {IComptrollerable}."
          },
          "calculateMinFeeWei(uint8)": {
            "details": "See the documentation for {convertUSDFeeToWei} for more details.",
            "params": { "protocol": "The protocol as defined in {Protocol} enum." }
          },
          "calculateMinFeeWeiFor(uint8,address)": {
            "details": "If the custom fee is enabled, it returns the custom fee, otherwise it returns the default minimum fee. See the documentation for {convertUSDFeeToWei} for more details.",
            "params": { "protocol": "The protocol as defined in {Protocol} enum.", "user": "The user address." }
          },
          "convertUSDFeeToWei(uint256)": {
            "details": "The price is considered to be 0 if: 1. The oracle is not set. 2. The min USD fee is 0. 3. The oracle price is ≤ 0. 4. The oracle's update timestamp is in the future. 5. The oracle price hasn't been updated in the last 24 hours.",
            "params": {
              "feeUSD": "The fee in USD, denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
            },
            "returns": { "_0": "The fee in wei, denominated in 18 decimals (1e18 = 1 native token)." }
          },
          "disableCustomFeeUSDFor(uint8,address)": {
            "details": "Emits a {DisableCustomFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role.",
            "params": { "protocol": "The protocol as defined in {Protocol} enum.", "user": "The user address." }
          },
          "execute(address,bytes)": {
            "details": "Emits an {Execute} event. Requirements: - `msg.sender` must be the admin. - `target` must be a contract.",
            "params": {
              "data": "Function selector plus ABI encoded data.",
              "target": "The address of the target contract on which the data is executed."
            },
            "returns": { "result": "The result from the call." }
          },
          "getMinFeeUSD(uint8)": {
            "details": "The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
          },
          "getMinFeeUSDFor(uint8,address)": {
            "details": "The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
          },
          "grantRole(bytes32,address)": {
            "details": "Emits {RoleGranted} event. Requirements: - `msg.sender` must be the admin.",
            "params": {
              "account": "The address of the account to which the role is granted.",
              "role": "The identifier of the role."
            }
          },
          "oracle()": { "details": "A zero address indicates that the oracle is not set." },
          "proxiableUUID()": {
            "details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
          },
          "revokeRole(bytes32,address)": {
            "details": "Emits {RoleRevoked} event. Requirements: - `msg.sender` must be the admin.",
            "params": {
              "account": "The address of the account from which the role is revoked.",
              "role": "The identifier of the role."
            }
          },
          "setCustomFeeUSDFor(uint8,address,uint256)": {
            "details": "Emits a {SetCustomFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role. - `customFeeUSD` must be less than or equal to {MAX_FEE_USD}.",
            "params": {
              "customFeeUSD": "The custom USD fee to set, denominated in 8 decimals.",
              "protocol": "The protocol as defined in {Protocol} enum.",
              "user": "The user address."
            }
          },
          "setMinFeeUSD(uint8,uint256)": {
            "details": "Emits a {SetMinFeeUSD} event. Notes: - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are not affected. - In case of streams, the new fee applies immediately to all the streams created by user. Requirements: - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role. - `newMinFeeUSD` must be less than or equal to {MAX_FEE_USD}.",
            "params": {
              "newMinFeeUSD": "The custom USD fee to set, denominated in 8 decimals.",
              "protocol": "The protocol as defined in {Protocol} enum."
            }
          },
          "setOracle(address)": {
            "details": "Emits a {SetOracle} event. Requirements: - `msg.sender` must be the admin. - If `newOracle` is not the zero address, the call to it must not fail.",
            "params": { "newOracle": "The new oracle contract address. It can be the zero address." }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newAdmin": "The address of the new admin." }
          },
          "transferFees(address[],address)": {
            "details": "Emits a {TransferFees} event. Notes: - If `feeRecipient` is a contract, it must be able to receive native tokens, e.g., ETH for Ethereum Mainnet. - `protocolAddresses` can be empty. Requirements: `feeRecipient` must not be the zero address. - If `msg.sender` has neither the {IRoleAdminable.FEE_COLLECTOR_ROLE} role nor is the contract admin, then `feeRecipient` must be the admin address. - `protocolAddresses` must implement the {IComptrollerable} interface.",
            "params": {
              "feeRecipient": "The address to which the entire fee from this contract is transferred.",
              "protocolAddresses": "An array of addresses of the Sablier protocols from which fees is transferred from."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "FEE_COLLECTOR_ROLE()": { "notice": "A role with the authority to collect fees from the Sablier contracts." },
          "FEE_MANAGEMENT_ROLE()": {
            "notice": "A role with the authority to update fees across the Sablier contracts."
          },
          "MAX_FEE_USD()": {
            "notice": "Retrieves the maximum USD fee that can be set for claiming an airdrop or withdrawing from a stream."
          },
          "MINIMAL_INTERFACE_ID()": { "notice": "The minimal interface ID of the comptroller." },
          "admin()": { "notice": "The address of the admin account or contract." },
          "calculateMinFeeWei(uint8)": { "notice": "Calculates the minimum fee in wei for the given protocol." },
          "calculateMinFeeWeiFor(uint8,address)": {
            "notice": "Calculates the minimum fee in wei for the provided user for the given protocol."
          },
          "convertUSDFeeToWei(uint256)": { "notice": "Converts the fee amount from USD to Wei." },
          "disableCustomFeeUSDFor(uint8,address)": {
            "notice": "Disables the custom USD fee for the provided user for the given protocol, defaulting to the minimum fee."
          },
          "execute(address,bytes)": { "notice": "Executes an external call to any contract and function." },
          "getMinFeeUSD(uint8)": {
            "notice": "Get the minimum fee in USD for the given protocol, paid in the native token of the chain, e.g., ETH for Ethereum Mainnet. Use {calculateMinFeeWei} to retrieve the fee in wei."
          },
          "getMinFeeUSDFor(uint8,address)": {
            "notice": "Get the minimum fee in USD for the provided user for the given protocol, paid in the native token of the chain, e.g., ETH for Ethereum Mainnet. Use {calculateMinFeeWeiFor} to retrieve the fee in wei."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants `role` to `account`. Reverts if `account` already has the role."
          },
          "hasRoleOrIsAdmin(bytes32,address)": {
            "notice": "Returns `true` if `account` has the `role` or is the admin."
          },
          "oracle()": {
            "notice": "Retrieves the oracle contract address, which provides price data for the native token."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes `role` from `account`. Reverts if `account` does not have the role."
          },
          "setCustomFeeUSDFor(uint8,address,uint256)": {
            "notice": "Sets the custom USD fee for the provided user for the given protocol."
          },
          "setMinFeeUSD(uint8,uint256)": { "notice": "Sets a new min USD fee for the given protocol." },
          "setOracle(address)": {
            "notice": "Sets the oracle contract address. The zero address can be used to disable the oracle."
          },
          "transferAdmin(address)": { "notice": "Transfers the contract admin to a new address." },
          "transferFees(address[],address)": {
            "notice": "Transfers fees from the given protocol addresses to this contract, and then transfer the entire balance of this contract to the fee recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@arbitrum/=node_modules/@arbitrum/",
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@offchainlabs/=node_modules/@offchainlabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@scroll-tech/=node_modules/@scroll-tech/",
        "@zksync/=node_modules/@zksync/",
        "forge-std/=node_modules/forge-std/"
      ],
      "optimizer": { "enabled": true, "runs": 100000000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/interfaces/ISablierComptroller.sol": "ISablierComptroller" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAdminable.sol": {
        "keccak256": "0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26",
        "urls": [
          "bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126",
          "dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IRoleAdminable.sol": {
        "keccak256": "0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148",
        "urls": [
          "bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233",
          "dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierComptroller.sol": {
        "keccak256": "0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9",
        "urls": [
          "bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b",
          "dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "storageLayout": { "storage": [], "types": {} },
  "ast": {
    "absolutePath": "src/interfaces/ISablierComptroller.sol",
    "id": 62134,
    "exportedSymbols": {
      "IERC165": [3950],
      "IERC1822Proxiable": [566],
      "IRoleAdminable": [61911],
      "ISablierComptroller": [62133]
    },
    "nodeType": "SourceUnit",
    "src": "45:11295:64",
    "nodes": [
      {
        "id": 61913,
        "nodeType": "PragmaDirective",
        "src": "45:25:64",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".22"]
      },
      {
        "id": 61915,
        "nodeType": "ImportDirective",
        "src": "72:82:64",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62134,
        "sourceUnit": 3951,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61914,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3950,
              "src": "81:7:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61917,
        "nodeType": "ImportDirective",
        "src": "155:90:64",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62134,
        "sourceUnit": 567,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61916,
              "name": "IERC1822Proxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 566,
              "src": "164:17:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61919,
        "nodeType": "ImportDirective",
        "src": "246:54:64",
        "nodes": [],
        "absolutePath": "src/interfaces/IRoleAdminable.sol",
        "file": "./IRoleAdminable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62134,
        "sourceUnit": 61912,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61918,
              "name": "IRoleAdminable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61911,
              "src": "255:14:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62133,
        "nodeType": "ContractDefinition",
        "src": "470:10869:64",
        "nodes": [
          {
            "id": 61932,
            "nodeType": "StructDefinition",
            "src": "1049:70:64",
            "nodes": [],
            "canonicalName": "ISablierComptroller.CustomFeeUSD",
            "documentation": {
              "id": 61927,
              "nodeType": "StructuredDocumentation",
              "src": "760:284:64",
              "text": "@notice Struct encapsulating the parameters of a custom USD fee.\n @param enabled Whether the fee is enabled. If false, the min USD fee will apply instead.\n @param fee The fee amount in USD, denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
            },
            "members": [
              {
                "constant": false,
                "id": 61929,
                "mutability": "mutable",
                "name": "enabled",
                "nameLocation": "1084:7:64",
                "nodeType": "VariableDeclaration",
                "scope": 61932,
                "src": "1079:12:64",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                "typeName": {
                  "id": 61928,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1079:4:64",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61931,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "1109:3:64",
                "nodeType": "VariableDeclaration",
                "scope": 61932,
                "src": "1101:11:64",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                "typeName": {
                  "id": 61930,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1101:7:64",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                },
                "visibility": "internal"
              }
            ],
            "name": "CustomFeeUSD",
            "nameLocation": "1056:12:64",
            "scope": 62133,
            "visibility": "public"
          },
          {
            "id": 61938,
            "nodeType": "EnumDefinition",
            "src": "1213:85:64",
            "nodes": [],
            "canonicalName": "ISablierComptroller.Protocol",
            "documentation": {
              "id": 61933,
              "nodeType": "StructuredDocumentation",
              "src": "1125:83:64",
              "text": "@notice Enum representing the different protocols supported by the comptroller."
            },
            "members": [
              {
                "id": 61934,
                "name": "Airdrops",
                "nameLocation": "1237:8:64",
                "nodeType": "EnumValue",
                "src": "1237:8:64"
              },
              { "id": 61935, "name": "Flow", "nameLocation": "1255:4:64", "nodeType": "EnumValue", "src": "1255:4:64" },
              {
                "id": 61936,
                "name": "Lockup",
                "nameLocation": "1269:6:64",
                "nodeType": "EnumValue",
                "src": "1269:6:64"
              },
              {
                "id": 61937,
                "name": "Staking",
                "nameLocation": "1285:7:64",
                "nodeType": "EnumValue",
                "src": "1285:7:64"
              }
            ],
            "name": "Protocol",
            "nameLocation": "1218:8:64"
          },
          {
            "id": 61947,
            "nodeType": "StructDefinition",
            "src": "1569:115:64",
            "nodes": [],
            "canonicalName": "ISablierComptroller.ProtocolFees",
            "documentation": {
              "id": 61939,
              "nodeType": "StructuredDocumentation",
              "src": "1304:260:64",
              "text": "@notice Struct encapsulating the fees for a protocol.\n @param minFeeUSD The minimum fee in USD, denominated in Chainlink's 8-decimal format for USD prices, where 1e8\n is $1.\n @param customFees Custom fees struct mapped by user address."
            },
            "members": [
              {
                "constant": false,
                "id": 61941,
                "mutability": "mutable",
                "name": "minFeeUSD",
                "nameLocation": "1607:9:64",
                "nodeType": "VariableDeclaration",
                "scope": 61947,
                "src": "1599:17:64",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                "typeName": {
                  "id": 61940,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1599:7:64",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61946,
                "mutability": "mutable",
                "name": "customFeesUSD",
                "nameLocation": "1664:13:64",
                "nodeType": "VariableDeclaration",
                "scope": 61947,
                "src": "1626:51:64",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CustomFeeUSD_$61932_storage_$",
                  "typeString": "mapping(address => struct ISablierComptroller.CustomFeeUSD)"
                },
                "typeName": {
                  "id": 61945,
                  "keyName": "user",
                  "keyNameLocation": "1642:4:64",
                  "keyType": {
                    "id": 61942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "Mapping",
                  "src": "1626:37:64",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CustomFeeUSD_$61932_storage_$",
                    "typeString": "mapping(address => struct ISablierComptroller.CustomFeeUSD)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 61944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61943,
                      "name": "CustomFeeUSD",
                      "nameLocations": ["1650:12:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61932,
                      "src": "1650:12:64"
                    },
                    "referencedDeclaration": 61932,
                    "src": "1650:12:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CustomFeeUSD_$61932_storage_ptr",
                      "typeString": "struct ISablierComptroller.CustomFeeUSD"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProtocolFees",
            "nameLocation": "1576:12:64",
            "scope": 62133,
            "visibility": "public"
          },
          {
            "id": 61961,
            "nodeType": "EventDefinition",
            "src": "2008:154:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 61948,
              "nodeType": "StructuredDocumentation",
              "src": "1899:104:64",
              "text": "@notice Emitted when the admin or the fee manager disables the custom USD fee for the provided user."
            },
            "eventSelector": "f3a849d17718fabb870877212af757aab86f881d647eec39c6f722119a82be7c",
            "name": "DisableCustomFeeUSD",
            "nameLocation": "2014:19:64",
            "parameters": {
              "id": 61960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61951,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "2060:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61961,
                  "src": "2043:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 61950,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61949,
                      "name": "Protocol",
                      "nameLocations": ["2043:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "2043:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "2043:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61953,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2078:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61961,
                  "src": "2070:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61955,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2102:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61961,
                  "src": "2086:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61957,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousMinFeeUSD",
                  "nameLocation": "2116:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61961,
                  "src": "2108:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61959,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinFeeUSD",
                  "nameLocation": "2143:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61961,
                  "src": "2135:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2135:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:128:64"
            }
          },
          {
            "id": 61970,
            "nodeType": "EventDefinition",
            "src": "2226:64:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 61962,
              "nodeType": "StructuredDocumentation",
              "src": "2168:53:64",
              "text": "@notice Emitted when a target contract is called."
            },
            "eventSelector": "b24ebe141c5f2a744b103bea65fce6c40e0dc65d7341d092c09b160f40447990",
            "name": "Execute",
            "nameLocation": "2232:7:64",
            "parameters": {
              "id": 61969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61964,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2256:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61970,
                  "src": "2240:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61966,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2270:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61970,
                  "src": "2264:10:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 61965,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:5:64",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "2282:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61970,
                  "src": "2276:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 61967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:5:64",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:50:64"
            }
          },
          {
            "id": 61984,
            "nodeType": "EventDefinition",
            "src": "2401:150:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 61971,
              "nodeType": "StructuredDocumentation",
              "src": "2296:100:64",
              "text": "@notice Emitted when the admin or the fee manager sets the custom USD fee for the provided user."
            },
            "eventSelector": "006bffa34673cf1ad4bba7ad45d3cf9044d62831266d93b96dbc80d8ec491f27",
            "name": "SetCustomFeeUSD",
            "nameLocation": "2407:15:64",
            "parameters": {
              "id": 61983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61974,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "2449:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61984,
                  "src": "2432:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 61973,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61972,
                      "name": "Protocol",
                      "nameLocations": ["2432:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "2432:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "2432:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61976,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2467:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61984,
                  "src": "2459:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2459:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61978,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2491:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61984,
                  "src": "2475:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61980,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousMinFeeUSD",
                  "nameLocation": "2505:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61984,
                  "src": "2497:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2497:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61982,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinFeeUSD",
                  "nameLocation": "2532:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61984,
                  "src": "2524:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:128:64"
            }
          },
          {
            "id": 61996,
            "nodeType": "EventDefinition",
            "src": "2643:111:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 61985,
              "nodeType": "StructuredDocumentation",
              "src": "2557:81:64",
              "text": "@notice Emitted when the admin or the fee manager sets a new minimum USD fee."
            },
            "eventSelector": "f4cb1d2734c9a8fc58614adae67ed933bf35438b252c7f51fbfcb6fff0bab8be",
            "name": "SetMinFeeUSD",
            "nameLocation": "2649:12:64",
            "parameters": {
              "id": 61995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "2679:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61996,
                  "src": "2662:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 61987,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61986,
                      "name": "Protocol",
                      "nameLocations": ["2662:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "2662:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "2662:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61990,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2697:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61996,
                  "src": "2689:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61992,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousMinFeeUSD",
                  "nameLocation": "2713:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61996,
                  "src": "2705:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2705:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinFeeUSD",
                  "nameLocation": "2740:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 61996,
                  "src": "2732:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2661:92:64"
            }
          },
          {
            "id": 62005,
            "nodeType": "EventDefinition",
            "src": "2838:82:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 61997,
              "nodeType": "StructuredDocumentation",
              "src": "2760:73:64",
              "text": "@notice Emitted when the oracle contract address is set by the admin."
            },
            "eventSelector": "8a2921926cceeec9c87402055ba6edb6a752234970f3b7b8f99183b622b3e014",
            "name": "SetOracle",
            "nameLocation": "2844:9:64",
            "parameters": {
              "id": 62004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61999,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "2870:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62005,
                  "src": "2854:21:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2854:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62001,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousOracle",
                  "nameLocation": "2885:14:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62005,
                  "src": "2877:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOracle",
                  "nameLocation": "2909:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62005,
                  "src": "2901:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2853:66:64"
            }
          },
          {
            "id": 62012,
            "nodeType": "EventDefinition",
            "src": "3035:68:64",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62006,
              "nodeType": "StructuredDocumentation",
              "src": "2926:104:64",
              "text": "@notice Emitted when the admin or the fee collector transfers the accrued fees to the fee recipient."
            },
            "eventSelector": "471c95db9ae5c6f902bc9bf9d1b68834d1fd11d37ae3c127387693cb5317f727",
            "name": "TransferFees",
            "nameLocation": "3041:12:64",
            "parameters": {
              "id": 62011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62008,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "feeRecipient",
                  "nameLocation": "3070:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62012,
                  "src": "3054:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62010,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "3092:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62012,
                  "src": "3084:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3053:49:64"
            }
          },
          {
            "id": 62018,
            "nodeType": "FunctionDefinition",
            "src": "3530:55:64",
            "nodes": [],
            "documentation": {
              "id": 62013,
              "nodeType": "StructuredDocumentation",
              "src": "3324:201:64",
              "text": "@notice Retrieves the maximum USD fee that can be set for claiming an airdrop or withdrawing from a stream.\n @dev This is a constant state variable and is 100e8, which is equivalent to $100."
            },
            "functionSelector": "78ef7aea",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_FEE_USD",
            "nameLocation": "3539:11:64",
            "parameters": { "id": 62014, "nodeType": "ParameterList", "parameters": [], "src": "3550:2:64" },
            "returnParameters": {
              "id": 62017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62018,
                  "src": "3576:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3576:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3575:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62024,
            "nodeType": "FunctionDefinition",
            "src": "4125:63:64",
            "nodes": [],
            "documentation": {
              "id": 62019,
              "nodeType": "StructuredDocumentation",
              "src": "3591:529:64",
              "text": "@notice The minimal interface ID of the comptroller.\n @dev Any new comptroller must support the minimal interface ID made up of the following functions:\n 1. {calculateMinFeeWeiFor} - used by protocols inherited from {IComptrollerable}.\n 2. {convertUSDFeeToWei}    - used by protocols inherited from {IComptrollerable}.\n 3. {execute}               - used by comptroller admin to perform necessary operations.\n 4. {getMinFeeUSDFor}       - used by protocols inherited from {IComptrollerable}."
            },
            "functionSelector": "c34df33e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MINIMAL_INTERFACE_ID",
            "nameLocation": "4134:20:64",
            "parameters": { "id": 62020, "nodeType": "ParameterList", "parameters": [], "src": "4154:2:64" },
            "returnParameters": {
              "id": 62023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62024,
                  "src": "4180:6:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                  "typeName": {
                    "id": 62021,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:6:64",
                    "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4179:8:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62033,
            "nodeType": "FunctionDefinition",
            "src": "4414:79:64",
            "nodes": [],
            "documentation": {
              "id": 62025,
              "nodeType": "StructuredDocumentation",
              "src": "4194:215:64",
              "text": "@notice Calculates the minimum fee in wei for the given protocol.\n @dev See the documentation for {convertUSDFeeToWei} for more details.\n @param protocol The protocol as defined in {Protocol} enum."
            },
            "functionSelector": "baf8f4b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMinFeeWei",
            "nameLocation": "4423:18:64",
            "parameters": {
              "id": 62029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62028,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "4451:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62033,
                  "src": "4442:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62026,
                      "name": "Protocol",
                      "nameLocations": ["4442:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "4442:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "4442:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4441:19:64"
            },
            "returnParameters": {
              "id": 62032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62033,
                  "src": "4484:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4483:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62044,
            "nodeType": "FunctionDefinition",
            "src": "4890:96:64",
            "nodes": [],
            "documentation": {
              "id": 62034,
              "nodeType": "StructuredDocumentation",
              "src": "4499:386:64",
              "text": "@notice Calculates the minimum fee in wei for the provided user for the given protocol.\n @dev If the custom fee is enabled, it returns the custom fee, otherwise it returns the default minimum fee. See\n the documentation for {convertUSDFeeToWei} for more details.\n @param protocol The protocol as defined in {Protocol} enum.\n @param user The user address."
            },
            "functionSelector": "419d289d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMinFeeWeiFor",
            "nameLocation": "4899:21:64",
            "parameters": {
              "id": 62040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62037,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "4930:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62044,
                  "src": "4921:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62035,
                      "name": "Protocol",
                      "nameLocations": ["4921:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "4921:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "4921:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62039,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4948:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62044,
                  "src": "4940:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4940:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4920:33:64"
            },
            "returnParameters": {
              "id": 62043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62042,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62044,
                  "src": "4977:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4977:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4976:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62052,
            "nodeType": "FunctionDefinition",
            "src": "5539:76:64",
            "nodes": [],
            "documentation": {
              "id": 62045,
              "nodeType": "StructuredDocumentation",
              "src": "4992:542:64",
              "text": "@notice Converts the fee amount from USD to Wei.\n @dev The price is considered to be 0 if:\n 1. The oracle is not set.\n 2. The min USD fee is 0.\n 3. The oracle price is ≤ 0.\n 4. The oracle's update timestamp is in the future.\n 5. The oracle price hasn't been updated in the last 24 hours.\n @param feeUSD The fee in USD, denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1.\n @return The fee in wei, denominated in 18 decimals (1e18 = 1 native token)."
            },
            "functionSelector": "b0fa59e8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "convertUSDFeeToWei",
            "nameLocation": "5548:18:64",
            "parameters": {
              "id": 62048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62047,
                  "mutability": "mutable",
                  "name": "feeUSD",
                  "nameLocation": "5575:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62052,
                  "src": "5567:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5566:16:64"
            },
            "returnParameters": {
              "id": 62051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62052,
                  "src": "5606:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5606:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5605:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62061,
            "nodeType": "FunctionDefinition",
            "src": "5921:73:64",
            "nodes": [],
            "documentation": {
              "id": 62053,
              "nodeType": "StructuredDocumentation",
              "src": "5621:295:64",
              "text": "@notice Get the minimum fee in USD for the given protocol, paid in the native token of the chain, e.g.,\n ETH for Ethereum Mainnet. Use {calculateMinFeeWei} to retrieve the fee in wei.\n @dev The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
            },
            "functionSelector": "b9fbe2f8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeUSD",
            "nameLocation": "5930:12:64",
            "parameters": {
              "id": 62057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62056,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "5952:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62061,
                  "src": "5943:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62054,
                      "name": "Protocol",
                      "nameLocations": ["5943:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "5943:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "5943:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5942:19:64"
            },
            "returnParameters": {
              "id": 62060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62059,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62061,
                  "src": "5985:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5984:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62072,
            "nodeType": "FunctionDefinition",
            "src": "6325:90:64",
            "nodes": [],
            "documentation": {
              "id": 62062,
              "nodeType": "StructuredDocumentation",
              "src": "6000:320:64",
              "text": "@notice Get the minimum fee in USD for the provided user for the given protocol, paid in the native token of the\n chain, e.g., ETH for Ethereum Mainnet. Use {calculateMinFeeWeiFor} to retrieve the fee in wei.\n @dev The fee is denominated in Chainlink's 8-decimal format for USD prices, where 1e8 is $1."
            },
            "functionSelector": "88dc31a8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMinFeeUSDFor",
            "nameLocation": "6334:15:64",
            "parameters": {
              "id": 62068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62065,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "6359:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62072,
                  "src": "6350:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62063,
                      "name": "Protocol",
                      "nameLocations": ["6350:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "6350:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "6350:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62067,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6377:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62072,
                  "src": "6369:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6349:33:64"
            },
            "returnParameters": {
              "id": 62071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62072,
                  "src": "6406:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6406:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6405:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62078,
            "nodeType": "FunctionDefinition",
            "src": "6590:50:64",
            "nodes": [],
            "documentation": {
              "id": 62073,
              "nodeType": "StructuredDocumentation",
              "src": "6421:164:64",
              "text": "@notice Retrieves the oracle contract address, which provides price data for the native token.\n @dev A zero address indicates that the oracle is not set."
            },
            "functionSelector": "7dc0d1d0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "oracle",
            "nameLocation": "6599:6:64",
            "parameters": { "id": 62074, "nodeType": "ParameterList", "parameters": [], "src": "6605:2:64" },
            "returnParameters": {
              "id": 62077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62076,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62078,
                  "src": "6631:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6631:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6630:9:64"
            },
            "scope": 62133,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62087,
            "nodeType": "FunctionDefinition",
            "src": "7545:74:64",
            "nodes": [],
            "documentation": {
              "id": 62079,
              "nodeType": "StructuredDocumentation",
              "src": "6864:676:64",
              "text": "@notice Disables the custom USD fee for the provided user for the given protocol, defaulting to the minimum fee.\n @dev Emits a {DisableCustomFeeUSD} event.\n Notes:\n - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are\n not affected.\n - In case of streams, the new fee applies immediately to all the streams created by user.\n Requirements:\n - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role.\n @param protocol The protocol as defined in {Protocol} enum.\n @param user The user address."
            },
            "functionSelector": "2fa32f4a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disableCustomFeeUSDFor",
            "nameLocation": "7554:22:64",
            "parameters": {
              "id": 62085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62082,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "7586:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62087,
                  "src": "7577:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62080,
                      "name": "Protocol",
                      "nameLocations": ["7577:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "7577:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "7577:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62084,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7604:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62087,
                  "src": "7596:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7596:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7576:33:64"
            },
            "returnParameters": { "id": 62086, "nodeType": "ParameterList", "parameters": [], "src": "7618:0:64" },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62097,
            "nodeType": "FunctionDefinition",
            "src": "8061:93:64",
            "nodes": [],
            "documentation": {
              "id": 62088,
              "nodeType": "StructuredDocumentation",
              "src": "7625:431:64",
              "text": "@notice Executes an external call to any contract and function.\n @dev Emits an {Execute} event.\n Requirements:\n - `msg.sender` must be the admin.\n - `target` must be a contract.\n @param target The address of the target contract on which the data is executed.\n @param data Function selector plus ABI encoded data.\n @return result The result from the call."
            },
            "functionSelector": "1cff79cd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "8070:7:64",
            "parameters": {
              "id": 62093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62090,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "8086:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62097,
                  "src": "8078:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8078:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62092,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8109:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62097,
                  "src": "8094:19:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 62091,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8094:5:64",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8077:37:64"
            },
            "returnParameters": {
              "id": 62096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62095,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "8146:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62097,
                  "src": "8133:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 62094,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8133:5:64",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8132:21:64"
            },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62108,
            "nodeType": "FunctionDefinition",
            "src": "8954:92:64",
            "nodes": [],
            "documentation": {
              "id": 62098,
              "nodeType": "StructuredDocumentation",
              "src": "8160:789:64",
              "text": "@notice Sets the custom USD fee for the provided user for the given protocol.\n @dev Emits a {SetCustomFeeUSD} event.\n Notes:\n - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are\n not affected.\n - In case of streams, the new fee applies immediately to all the streams created by user.\n Requirements:\n - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role.\n - `customFeeUSD` must be less than or equal to {MAX_FEE_USD}.\n @param protocol The protocol as defined in {Protocol} enum.\n @param user The user address.\n @param customFeeUSD The custom USD fee to set, denominated in 8 decimals."
            },
            "functionSelector": "d09e86d9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setCustomFeeUSDFor",
            "nameLocation": "8963:18:64",
            "parameters": {
              "id": 62106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62101,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "8991:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62108,
                  "src": "8982:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62099,
                      "name": "Protocol",
                      "nameLocations": ["8982:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "8982:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "8982:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62103,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9009:4:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62108,
                  "src": "9001:12:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9001:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62105,
                  "mutability": "mutable",
                  "name": "customFeeUSD",
                  "nameLocation": "9023:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62108,
                  "src": "9015:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8981:55:64"
            },
            "returnParameters": { "id": 62107, "nodeType": "ParameterList", "parameters": [], "src": "9045:0:64" },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62117,
            "nodeType": "FunctionDefinition",
            "src": "9782:72:64",
            "nodes": [],
            "documentation": {
              "id": 62109,
              "nodeType": "StructuredDocumentation",
              "src": "9052:725:64",
              "text": "@notice Sets a new min USD fee for the given protocol.\n @dev Emits a {SetMinFeeUSD} event.\n Notes:\n - In case of airdrops, the new fee applies only to the future campaigns created by the user. Past campaigns are\n not affected.\n - In case of streams, the new fee applies immediately to all the streams created by user.\n Requirements:\n - `msg.sender` must be either the admin or have the {IRoleAdminable.FEE_MANAGEMENT_ROLE} role.\n - `newMinFeeUSD` must be less than or equal to {MAX_FEE_USD}.\n @param protocol The protocol as defined in {Protocol} enum.\n @param newMinFeeUSD The custom USD fee to set, denominated in 8 decimals."
            },
            "functionSelector": "9f467352",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMinFeeUSD",
            "nameLocation": "9791:12:64",
            "parameters": {
              "id": 62115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62112,
                  "mutability": "mutable",
                  "name": "protocol",
                  "nameLocation": "9813:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62117,
                  "src": "9804:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Protocol_$61938",
                    "typeString": "enum ISablierComptroller.Protocol"
                  },
                  "typeName": {
                    "id": 62111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62110,
                      "name": "Protocol",
                      "nameLocations": ["9804:8:64"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61938,
                      "src": "9804:8:64"
                    },
                    "referencedDeclaration": 61938,
                    "src": "9804:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Protocol_$61938",
                      "typeString": "enum ISablierComptroller.Protocol"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62114,
                  "mutability": "mutable",
                  "name": "newMinFeeUSD",
                  "nameLocation": "9831:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62117,
                  "src": "9823:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 62113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9823:7:64",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9803:41:64"
            },
            "returnParameters": { "id": 62116, "nodeType": "ParameterList", "parameters": [], "src": "9853:0:64" },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62123,
            "nodeType": "FunctionDefinition",
            "src": "10248:47:64",
            "nodes": [],
            "documentation": {
              "id": 62118,
              "nodeType": "StructuredDocumentation",
              "src": "9860:383:64",
              "text": "@notice Sets the oracle contract address. The zero address can be used to disable the oracle.\n @dev Emits a {SetOracle} event.\n Requirements:\n - `msg.sender` must be the admin.\n - If `newOracle` is not the zero address, the call to it must not fail.\n @param newOracle The new oracle contract address. It can be the zero address."
            },
            "functionSelector": "7adbf973",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOracle",
            "nameLocation": "10257:9:64",
            "parameters": {
              "id": 62121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62120,
                  "mutability": "mutable",
                  "name": "newOracle",
                  "nameLocation": "10275:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62123,
                  "src": "10267:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10267:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10266:19:64"
            },
            "returnParameters": { "id": 62122, "nodeType": "ParameterList", "parameters": [], "src": "10294:0:64" },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62132,
            "nodeType": "FunctionDefinition",
            "src": "11246:91:64",
            "nodes": [],
            "documentation": {
              "id": 62124,
              "nodeType": "StructuredDocumentation",
              "src": "10301:940:64",
              "text": "@notice Transfers fees from the given protocol addresses to this contract, and then transfer the entire balance\n of this contract to the fee recipient.\n @dev Emits a {TransferFees} event.\n Notes:\n - If `feeRecipient` is a contract, it must be able to receive native tokens, e.g., ETH for Ethereum Mainnet.\n - `protocolAddresses` can be empty.\n Requirements:\n `feeRecipient` must not be the zero address.\n - If `msg.sender` has neither the {IRoleAdminable.FEE_COLLECTOR_ROLE} role nor is the contract admin, then\n `feeRecipient` must be the admin address.\n - `protocolAddresses` must implement the {IComptrollerable} interface.\n @param protocolAddresses An array of addresses of the Sablier protocols from which fees is transferred from.\n @param feeRecipient The address to which the entire fee from this contract is transferred."
            },
            "functionSelector": "f2fc84b7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFees",
            "nameLocation": "11255:12:64",
            "parameters": {
              "id": 62130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62127,
                  "mutability": "mutable",
                  "name": "protocolAddresses",
                  "nameLocation": "11287:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62132,
                  "src": "11268:36:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62125,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11268:7:64",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "id": 62126,
                    "nodeType": "ArrayTypeName",
                    "src": "11268:9:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62129,
                  "mutability": "mutable",
                  "name": "feeRecipient",
                  "nameLocation": "11314:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 62132,
                  "src": "11306:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 62128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11306:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11267:60:64"
            },
            "returnParameters": { "id": 62131, "nodeType": "ParameterList", "parameters": [], "src": "11336:0:64" },
            "scope": 62133,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 61921,
              "name": "IERC165",
              "nameLocations": ["503:7:64"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3950,
              "src": "503:7:64"
            },
            "id": 61922,
            "nodeType": "InheritanceSpecifier",
            "src": "503:7:64"
          },
          {
            "baseName": {
              "id": 61923,
              "name": "IERC1822Proxiable",
              "nameLocations": ["512:17:64"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 566,
              "src": "512:17:64"
            },
            "id": 61924,
            "nodeType": "InheritanceSpecifier",
            "src": "512:17:64"
          },
          {
            "baseName": {
              "id": 61925,
              "name": "IRoleAdminable",
              "nameLocations": ["531:14:64"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61911,
              "src": "531:14:64"
            },
            "id": 61926,
            "nodeType": "InheritanceSpecifier",
            "src": "531:14:64"
          }
        ],
        "canonicalName": "ISablierComptroller",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 61920,
          "nodeType": "StructuredDocumentation",
          "src": "302:168:64",
          "text": "@title ISablierComptroller\n @notice Manage fees across all Sablier protocols. State-changing functions are only accessible to the admin and the\n fee manager."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [62133, 61911, 61792, 566, 3950],
        "name": "ISablierComptroller",
        "nameLocation": "480:19:64",
        "scope": 62134,
        "usedErrors": [],
        "usedEvents": [61779, 61863, 61872, 61961, 61970, 61984, 61996, 62005, 62012]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 64
}
