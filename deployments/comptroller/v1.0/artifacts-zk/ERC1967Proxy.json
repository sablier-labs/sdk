{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "implementation", "type": "address", "internalType": "address" },
        { "name": "_data", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "payable"
    },
    { "type": "fallback", "stateMutability": "payable" },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [{ "name": "implementation", "type": "address", "indexed": true, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [{ "name": "target", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [{ "name": "implementation", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60806040526102be803803806100148161017e565b92833981019060408183031261017a578051906001600160a01b0382169081830361017a576020810151906001600160401b03821161017a570183601f8201121561017a5780519061006d610068836101b7565b61017e565b948286526020838301011161017a575f5b82811061016557505060205f9185010152813b15610153577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511561013c575f8083602061012495519101845af43d15610134573d91610115610068846101b7565b9283523d5f602085013e6101d2565b505b604051608d90816102318239f35b6060916101d2565b505034156101265763b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b8060208092840101518282890101520161007e565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176101a357604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b0381116101a357601f01601f191660200190565b906101f657508051156101e757805190602001fd5b63d6bda27560e01b5f5260045ffd5b81511580610227575b610207575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b156101ff56fe60806040525f8073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156053573d5ff35b3d5ffdfea2646970667358221220368a39f604c47ce4293c27a4a6cc629bb0962e3a5669b567e972729dff8c48cd64736f6c634300081d0033",
    "sourceMap": "600:1117:8:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:8;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;600:1117:8;;;;;;;;;-1:-1:-1;600:1117:8;;;;;1748:29:9;;:34;1744:119;;811:66;;;-1:-1:-1;;;;;;811:66:9;;;;;2407:36;-1:-1:-1;;2407:36:9;600:1117:8;;2458:15:9;:11;;-1:-1:-1;4065:25:19;;600:1117:8;4107:55:19;4065:25;;600:1117:8;;4065:25:19;;;600:1117:8;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;600:1117:8;;;;4107:55:19;:::i;:::-;;2454:148:9;600:1117:8;;;;;;;;;;;;4107:55:19;:::i;2454:148:9:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:9;;-1:-1:-1;6199:19:9;1744:119;1805:47;;;-1:-1:-1;1805:47:9;;600:1117:8;;-1:-1:-1;1805:47:9;600:1117:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:1117:8;;;;;;;;;-1:-1:-1;;600:1117:8;;;-1:-1:-1;;;;;600:1117:8;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;600:1117:8;;;;;-1:-1:-1;600:1117:8;;-1:-1:-1;;;;;600:1117:8;;;;;;-1:-1:-1;;600:1117:8;;;;:::o;4437:582:19:-;;4609:8;;-1:-1:-1;600:1117:8;;5690:21:19;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;600:1117:8;;4857:22:19;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:19;4933:24;;;-1:-1:-1;;;;;600:1117:8;;;;4933:24:19;600:1117:8;;;4933:24:19;4857:49;4883:18;;;:23;4857:49;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040525f8073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d5f803e156053573d5ff35b3d5ffdfea2646970667358221220368a39f604c47ce4293c27a4a6cc629bb0962e3a5669b567e972729dff8c48cd64736f6c634300081d0033",
    "sourceMap": "600:1117:8:-:0;;;-1:-1:-1;811:66:9;;;;;1019:819:10;;;;;;;;;;-1:-1:-1;1019:819:10;;;;;;-1:-1:-1;1019:819:10;;;-1:-1:-1;1019:819:10",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000000},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=node_modules/forge-std/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.29+commit.ab55807c" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "implementation", "type": "address" },
            { "internalType": "bytes", "name": "_data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "target", "type": "address" }],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [{ "internalType": "address", "name": "implementation", "type": "address" }],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        {
          "inputs": [{ "internalType": "address", "name": "implementation", "type": "address", "indexed": true }],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        { "inputs": [], "stateMutability": "payable", "type": "fallback" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@arbitrum/=node_modules/@arbitrum/",
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@offchainlabs/=node_modules/@offchainlabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@scroll-tech/=node_modules/@scroll-tech/",
        "@zksync/=node_modules/@zksync/",
        "forge-std/=node_modules/forge-std/"
      ],
      "optimizer": { "enabled": true, "runs": 100000000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": "ERC1967Proxy" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e",
        "urls": [
          "bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049",
          "dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898",
        "urls": [
          "bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70",
          "dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": { "storage": [], "types": {} },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
    "id": 890,
    "exportedSymbols": { "ERC1967Proxy": [889], "ERC1967Utils": [1183], "Proxy": [1219] },
    "nodeType": "SourceUnit",
    "src": "114:1604:8",
    "nodes": [
      {
        "id": 853,
        "nodeType": "PragmaDirective",
        "src": "114:24:8",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".22"]
      },
      {
        "id": 855,
        "nodeType": "ImportDirective",
        "src": "140:35:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 890,
        "sourceUnit": 1220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 854,
              "name": "Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1219,
              "src": "148:5:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 857,
        "nodeType": "ImportDirective",
        "src": "176:48:8",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
        "file": "./ERC1967Utils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 890,
        "sourceUnit": 1184,
        "symbolAliases": [
          {
            "foreign": {
              "id": 856,
              "name": "ERC1967Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1183,
              "src": "184:12:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 889,
        "nodeType": "ContractDefinition",
        "src": "600:1117:8",
        "nodes": [
          {
            "id": 876,
            "nodeType": "FunctionDefinition",
            "src": "1081:133:8",
            "nodes": [],
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "1145:69:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "1185:14:8",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 872,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 865,
                        "src": "1201:5:8",
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      ],
                      "expression": {
                        "id": 868,
                        "name": "ERC1967Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "1155:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1183_$",
                          "typeString": "type(library ERC1967Utils)"
                        }
                      },
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1168:16:8",
                      "memberName": "upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 998,
                      "src": "1155:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:52:8",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:52:8"
                }
              ]
            },
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "637:439:8",
              "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1101:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1093:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1130:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "1117:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 864,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:5:8",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1092:44:8"
            },
            "returnParameters": { "id": 867, "nodeType": "ParameterList", "parameters": [], "src": "1145:0:8" },
            "scope": 889,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 888,
            "nodeType": "FunctionDefinition",
            "src": "1583:132:8",
            "nodes": [],
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "1659:56:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 883,
                        "name": "ERC1967Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "1676:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1183_$",
                          "typeString": "type(library ERC1967Utils)"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1689:17:8",
                      "memberName": "getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "1676:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:32:8",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "functionReturnParameters": 882,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "1669:39:8"
                }
              ]
            },
            "baseFunctions": [1200],
            "documentation": {
              "id": 877,
              "nodeType": "StructuredDocumentation",
              "src": "1220:358:8",
              "text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1592:15:8",
            "overrides": { "id": 879, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1632:8:8" },
            "parameters": { "id": 878, "nodeType": "ParameterList", "parameters": [], "src": "1607:2:8" },
            "returnParameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "1650:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1649:9:8"
            },
            "scope": 889,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 859,
              "name": "Proxy",
              "nameLocations": ["625:5:8"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1219,
              "src": "625:5:8"
            },
            "id": 860,
            "nodeType": "InheritanceSpecifier",
            "src": "625:5:8"
          }
        ],
        "canonicalName": "ERC1967Proxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 858,
          "nodeType": "StructuredDocumentation",
          "src": "226:373:8",
          "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [889, 1219],
        "name": "ERC1967Proxy",
        "nameLocation": "609:12:8",
        "scope": 890,
        "usedErrors": [909, 922, 2188, 2481],
        "usedEvents": [691]
      }
    ],
    "license": "MIT"
  },
  "id": 8
}
