{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "initialComptroller", "type": "address", "internalType": "address" },
        { "name": "initialNFTDescriptor", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "adjustRatePerSecond",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "newRatePerSecond", "type": "uint128", "internalType": "UD21x18" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "aggregateAmount",
      "inputs": [{ "name": "token", "type": "address", "internalType": "contract IERC20" }],
      "outputs": [{ "name": "amount", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batch",
      "inputs": [{ "name": "calls", "type": "bytes[]", "internalType": "bytes[]" }],
      "outputs": [{ "name": "results", "type": "bytes[]", "internalType": "bytes[]" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "calculateMinFeeWei",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "minFeeWei", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "comptroller",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ISablierComptroller" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "coveredDebtOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "coveredDebt", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "create",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" },
        { "name": "startTime", "type": "uint40", "internalType": "uint40" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        { "name": "transferable", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "createAndDeposit",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" },
        { "name": "startTime", "type": "uint40", "internalType": "uint40" },
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        { "name": "transferable", "type": "bool", "internalType": "bool" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depletionTimeOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "depletionTime", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositAndPause",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBalance",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "balance", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRatePerSecond",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipient",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "recipient", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSender",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "sender", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSnapshotDebtScaled",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "snapshotDebtScaled", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSnapshotTime",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "snapshotTime", "type": "uint40", "internalType": "uint40" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "stream",
          "type": "tuple",
          "internalType": "struct Flow.Stream",
          "components": [
            { "name": "balance", "type": "uint128", "internalType": "uint128" },
            { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "snapshotTime", "type": "uint40", "internalType": "uint40" },
            { "name": "isStream", "type": "bool", "internalType": "bool" },
            { "name": "isTransferable", "type": "bool", "internalType": "bool" },
            { "name": "isVoided", "type": "bool", "internalType": "bool" },
            { "name": "token", "type": "address", "internalType": "contract IERC20" },
            { "name": "tokenDecimals", "type": "uint8", "internalType": "uint8" },
            { "name": "snapshotDebtScaled", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getToken",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "token", "type": "address", "internalType": "contract IERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenDecimals",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "tokenDecimals", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStream",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransferable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isVoided",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nativeToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextStreamId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nftDescriptor",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IFlowNFTDescriptor" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ongoingDebtScaledOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "ongoingDebtScaled", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "recover",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refund",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "refundAndPause",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "refundMax",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundedAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "refundableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "refundableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "restart",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "restartAndDeposit",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setComptroller",
      "inputs": [{ "name": "newComptroller", "type": "address", "internalType": "contract ISablierComptroller" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNFTDescriptor",
      "inputs": [{ "name": "newNFTDescriptor", "type": "address", "internalType": "contract IFlowNFTDescriptor" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNativeToken",
      "inputs": [{ "name": "newNativeToken", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "statusOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "status", "type": "uint8", "internalType": "enum Flow.Status" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "uri", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDebtOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "totalDebt", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFeesToComptroller",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferTokens",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "contract IERC20" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "uncoveredDebtOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "uncoveredDebt", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "void",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawMax",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "withdrawnAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawableAmountOf",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AdjustFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "totalDebt", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "oldRatePerSecond", "type": "uint128", "indexed": false, "internalType": "UD21x18" },
        { "name": "newRatePerSecond", "type": "uint128", "indexed": false, "internalType": "UD21x18" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchMetadataUpdate",
      "inputs": [
        { "name": "_fromTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "_toTokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "creator", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "ratePerSecond", "type": "uint128", "indexed": false, "internalType": "UD21x18" },
        { "name": "snapshotTime", "type": "uint40", "indexed": false, "internalType": "uint40" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "transferable", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DepositFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "funder", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MetadataUpdate",
      "inputs": [{ "name": "_tokenId", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauseFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "totalDebt", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Recover",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "to", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "surplus", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RefundFromFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RestartFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "ratePerSecond", "type": "uint128", "indexed": false, "internalType": "UD21x18" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetComptroller",
      "inputs": [
        {
          "name": "oldComptroller",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierComptroller"
        },
        {
          "name": "newComptroller",
          "type": "address",
          "indexed": false,
          "internalType": "contract ISablierComptroller"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNFTDescriptor",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        {
          "name": "oldNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract IFlowNFTDescriptor"
        },
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract IFlowNFTDescriptor"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNativeToken",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        { "name": "nativeToken", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferFeesToComptroller",
      "inputs": [
        { "name": "comptroller", "type": "address", "indexed": true, "internalType": "contract ISablierComptroller" },
        { "name": "feeAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VoidFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "caller", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "newTotalDebt", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "writtenOffDebt", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawFromFlowStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "contract IERC20" },
        { "name": "caller", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "withdrawAmount", "type": "uint128", "indexed": false, "internalType": "uint128" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "Comptrollerable_CallerNotComptroller",
      "inputs": [
        { "name": "comptroller", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "Comptrollerable_UnsupportedInterfaceId",
      "inputs": [
        { "name": "previousComptroller", "type": "address", "internalType": "address" },
        { "name": "newComptroller", "type": "address", "internalType": "address" },
        { "name": "minimalInterfaceId", "type": "bytes4", "internalType": "bytes4" }
      ]
    },
    { "type": "error", "name": "DelegateCall", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [{ "name": "operator", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [{ "name": "tokenId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlowState_Null",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlowState_StreamPaused",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlowState_StreamVoided",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlowState_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_CreateNativeToken",
      "inputs": [{ "name": "nativeToken", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "SablierFlow_CreateRatePerSecondZero", "inputs": [] },
    {
      "type": "error",
      "name": "SablierFlow_DepositAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_InsufficientFeePayment",
      "inputs": [
        { "name": "feePaid", "type": "uint256", "internalType": "uint256" },
        { "name": "minFeeWei", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_InvalidCalculation",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "availableAmount", "type": "uint128", "internalType": "uint128" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_InvalidTokenDecimals",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_NativeTokenAlreadySet",
      "inputs": [{ "name": "nativeToken", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "SablierFlow_NativeTokenZeroAddress", "inputs": [] },
    {
      "type": "error",
      "name": "SablierFlow_NewRatePerSecondZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_NotStreamRecipient",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "streamRecipient", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_NotStreamSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "streamSender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_NotTransferable",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_Overdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "withdrawableAmount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_RatePerSecondNotDifferent",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "ratePerSecond", "type": "uint128", "internalType": "UD21x18" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_RefundAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_RefundOverflow",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "refundAmount", "type": "uint128", "internalType": "uint128" },
        { "name": "refundableAmount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    { "type": "error", "name": "SablierFlow_SenderZeroAddress", "inputs": [] },
    {
      "type": "error",
      "name": "SablierFlow_StreamBalanceZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_StreamNotPaused",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_StreamPending",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "snapshotTime", "type": "uint40", "internalType": "uint40" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_SurplusZero",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SablierFlow_WithdrawAmountZero",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_WithdrawToZeroAddress",
      "inputs": [{ "name": "streamId", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "SablierFlow_WithdrawalAddressNotRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SafeCastOverflowedUintDowncast",
      "inputs": [
        { "name": "bits", "type": "uint8", "internalType": "uint8" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1534:37148:86:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1534:37148:86;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1534:37148:86;;;;;;;;;;;;;;;4364:52:55;;1565:210;;;4364:52;;;1534:37148:86;;4364:52:55;;;;;;;;;;;-1:-1:-1;4364:52:55;;;-1:-1:-1;4363:53:55;;4359:332;;-1:-1:-1;1534:37148:86;;-1:-1:-1;;;;;;1534:37148:86;;;;;;;;;;;;;;;;;;4816:51:55;;1534:37148:86;4816:51:55;1534:37148:86;;-1:-1:-1;;;;;1534:37148:86;;;;1446:13:10;1534:37148:86;1446:13:10;1534:37148:86;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;1446:13:10;1534:37148:86;;;;-1:-1:-1;;;;;1534:37148:86;;;;1469:17:10;1534:37148:86;1446:13:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;1469:17:10;1534:37148:86;;1218:4:56;1199:24;;1446:13:10;1655:16:87;1534:37148:86;1681:56:87;1534:37148:86;;-1:-1:-1;;;;;;1534:37148:86;-1:-1:-1;;;;;1534:37148:86;;;;;;;;;;;;;;;;;;1199:24:56;1534:37148:86;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;1469:17:10;-1:-1:-1;1534:37148:86;;-1:-1:-1;1534:37148:86;;-1:-1:-1;1534:37148:86;;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;;1469:17:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;;;;;;1469:17:10;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;1446:13:10;1534:37148:86;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;-1:-1:-1;1534:37148:86;;4364:52:55;1534:37148:86;4364:52:55;-1:-1:-1;1534:37148:86;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;4364:52:55;1534:37148:86;4364:52:55;-1:-1:-1;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;1446:13:10;-1:-1:-1;1534:37148:86;;-1:-1:-1;1534:37148:86;;-1:-1:-1;1534:37148:86;;;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:13:10;1534:37148:86;;;;;;;;;;;;;;;;1446:13:10;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;1446:13:10;1534:37148:86;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;4359:332:55;4439:241;;;-1:-1:-1;4439:241:55;-1:-1:-1;4364:52:55;1534:37148:86;4364:52:55;1534:37148:86;1565:210:55;;;1534:37148:86;;;-1:-1:-1;4439:241:55;4364:52;;;1534:37148:86;4364:52:55;;1534:37148:86;4364:52:55;;;;;;1534:37148:86;4364:52:55;;;:::i;:::-;;;1534:37148:86;;;;;;;;;;;;4364:52:55;;;1534:37148:86;-1:-1:-1;1534:37148:86;;4364:52:55;;;-1:-1:-1;4364:52:55;;;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;;;;;;;-1:-1:-1;;1534:37148:86;;;;-1:-1:-1;;;;;1534:37148:86;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1534:37148:86;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806301ffc9a7146103cf57806306fdde03146103ca578063081812fc146103c557806308b87923146103c0578063095ea7b3146103bb5780630c699624146103b6578063136439dd146103b15780631400ecec146103ac5780631e010439146103a75780631e897afb146103a25780631e99d5691461039d5780631f0cce581461039857806323b872dd1461039357806328f8b77d1461038e57806336af277f14610389578063379d871a1461038457806342842e0e1461037f57806342e3e23d146102d5578063442675701461037a578063450ac90814610375578063569f4c59146103705780635ea2145b1461036b5780635f2a0beb146103665780635fe3b567146103615780636352211e1461035c578063648bf774146103575780636d0cee75146103525780636da1e1021461034d57806370a082311461034857806378f82ce7146103435780637cad6cd11461033e5780637ddf92281461033957806380448da31461033457806381632a861461032f578063894e9a0d1461032a5780638bad38dd1461032557806395d89b4114610320578063a22cb4651461031b578063a7de07cd14610316578063a8a482a614610311578063ad35efd41461030c578063b256456914610307578063b61f758314610302578063b88d4fde146102fd578063b8a3be66146102f8578063b971302a146102f3578063bc7a2d6c146102ee578063bcbd019e146102e9578063c87b56dd146102e4578063cca138e5146102df578063d4b80884146102da578063d975dfed146102d5578063e1758bd8146102d0578063e4b50cb8146102cb578063e985e9c5146102c6578063ea5ead19146102c1578063eb5710d8146102bc578063ebb6f79a146102b7578063ec01da3b146102b25763fdd46d60146102ad575f80fd5b613591565b61352a565b613440565b6133e2565b61333f565b6132a1565b613237565b6131e6565b6111ff565b613182565b613067565b612f3d565b612e84565b612e3f565b612dd5565b612d82565b612cd4565b6129d7565b61297b565b6128f8565b612798565b61273e565b612614565b612541565b6122c4565b61200a565b611f66565b611efa565b611eb5565b611d8b565b611cee565b611c55565b611aba565b611a75565b611887565b61182d565b6117dd565b611767565b611345565b6112e9565b611295565b611244565b6111d6565b6110b8565b61101f565b610f96565b610f7f565b610e04565b610daf565b610c6f565b610b8f565b610b30565b610a50565b610952565b6107b9565b61074e565b6106e6565b61059e565b610402565b7fffffffff000000000000000000000000000000000000000000000000000000008116036103fe57565b5f80fd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe577fffffffff0000000000000000000000000000000000000000000000000000000060043561045e816103d4565b167f49064906000000000000000000000000000000000000000000000000000000008114908115610498575b506040519015158152602090f35b7f80ac58cd000000000000000000000000000000000000000000000000000000008114915081156104fc575b81156104d2575b505f61048a565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150145f6104cb565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506104c4565b5f5b8381106105375750505f910152565b8181015183820152602001610528565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361058381518092818752878088019101610526565b0116010190565b90602061059b928181520190610547565b90565b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576040515f6001548060011c90600181169081156106dc575b6020831082146106af5782855260208501919081156106785750600114610626575b6106228461061681860382612c47565b6040519182918261058a565b0390f35b60015f9081529250907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8184106106645750500161061682610606565b805484840152602090930192600101610651565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682525090151560051b01905061061682610606565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916105e4565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561072181613d04565b505f526005602052602073ffffffffffffffffffffffffffffffffffffffff60405f205416604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57602061079360043561078e81613d5d565b613da6565b604051908152f35b73ffffffffffffffffffffffffffffffffffffffff8116036103fe57565b346103fe5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356107f48161079b565b6024359061080182613d04565b33151580610932575b806108d8575b6108ab57826108a9936108699273ffffffffffffffffffffffffffffffffffffffff80861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f52600560205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b005b7fa9fbf51f000000000000000000000000000000000000000000000000000000005f523360045260245b5ffd5b5060ff61092a336109078473ffffffffffffffffffffffffffffffffffffffff165f52600660205260405f2090565b9073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b541615610810565b503373ffffffffffffffffffffffffffffffffffffffff8216141561080a565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435610987613de7565b61099081613d5d565b805f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f200154163303610a2157807ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760206109ec61062294613e80565b926109f78482613eb2565b604051908152a16040516fffffffffffffffffffffffffffffffff90911681529081906020820190565b7f87cca8a8000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435610a85613de7565b610a8e81613d5d565b805f52600b60205260405f205460801c15610b0557805f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f200154163303610a2157602081610afc7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79361412c565b604051908152a1005b7f28a1df1c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020610b75600435610b7081613d5d565b613e80565b6fffffffffffffffffffffffffffffffff60405191168152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435610bca81613d5d565b5f52600b60205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610c2457505050505090565b9091929394602080610c60837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187528951610547565b97019301930191939290610c15565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043567ffffffffffffffff81116103fe57366023820112156103fe5780600401359067ffffffffffffffff82116103fe576024810190602436918460051b0101116103fe57610ce882613614565b91610cf66040519384612c47565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610d2382613614565b015f5b818110610d9e5750505f5b818110610d4657604051806106228682610bf2565b5f80610d53838587613659565b90610d63604051809381936136be565b0390305af4610d706136cb565b9015610d965790600191610d8482876136fa565b52610d8f81866136fa565b5001610d31565b805190602001fd5b806060602080938801015201610d26565b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020600954604051908152f35b6fffffffffffffffffffffffffffffffff8116036103fe57565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435602435610e3d81610dea565b60443590610e4a82610dea565b610e52613de7565b610e5b83613d5d565b825f52600b60205260ff600160405f20015460d81c16610f0957825f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f200154163303610ed95791610afc602092610ed37ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79584614235565b826142c2565b827f87cca8a8000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b827f271c0f9d000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126103fe57600435610f6b8161079b565b90602435610f788161079b565b9060443590565b346103fe576108a9610f9036610f35565b9161370e565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576108a9600435610fcf8161079b565b602435610fdb8161079b565b6fffffffffffffffffffffffffffffffff604435610ff881610dea565b16913390614424565b6064359064ffffffffff821682036103fe57565b801515036103fe57565b60e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760206004356110578161079b565b6107936110b16024356110698161079b565b60443561107581610dea565b61107d611001565b6084359161108a8361079b565b60a4359361109785611015565b60c435976110a489610dea565b6110ac613de7565b6147bf565b91826142c2565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356024356110f181610dea565b6110f9613de7565b61110282613d5d565b815f52600b60205260405f205460801c156111aa57815f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f20015416330361117a57816111716020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794613eb2565b610afc8161412c565b507f87cca8a8000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b507f28a1df1c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346103fe576108a96111e736610f35565b90604051926111f7602085612c47565b5f84526139de565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020610b7560043561123f81613d5d565b614b05565b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57602073ffffffffffffffffffffffffffffffffffffffff600a5416604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356112d081613d5d565b5f52600b6020526020600360405f200154604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561132481613d5d565b5f52600b602052602060ff600160405f20015460d81c166040519015158152f35b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561137a613de7565b61138381613d5d565b805f52600b60205260ff600160405f20015460d81c1661173c576113eb6113d260016113b7845f52600b60205260405f2090565b015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b33141580611711575b6116e257611632816114267ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce793614d78565b8061165f5761143482614c02565b80611637575b505b6114a664ffffffffff4216600161145b855f52600b60205260405f2090565b01907fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff78ffffffffff000000000000000000000000000000000000000083549260a01b169116179055565b6114fd5f6114bc845f52600b60205260405f2090565b906fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffff0000000000000000000000000000000083549260801b169116179055565b61155b6001611514845f52600b60205260405f2090565b017b010000000000000000000000000000000000000000000000000000007fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff825416179055565b61157260016113b7845f52600b60205260405f2090565b90827fa8e3d71a6c0c719305004b430f6d17f12536f7b803db23a4d7016f5b52699a8c73ffffffffffffffffffffffffffffffffffffffff6115d96115bf845f52600360205260405f2090565b5473ffffffffffffffffffffffffffffffffffffffff1690565b61161f6115e585613da6565b958360405194859416981696338460409194939273ffffffffffffffffffffffffffffffffffffffff606083019616825260208201520152565b0390a46040519081529081906020820190565b0390a1005b611657600361164e855f52600b60205260405f2090565b01918254613b6d565b90555f61143a565b6116c761168d611677845f52600b60205260405f2090565b546fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff6116c060026116b5875f52600b60205260405f2090565b015460a01c60ff1690565b9116614e0d565b60036116db845f52600b60205260405f2090565b015561143c565b7fa9ad2a22000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b5061173761173361172d6115bf845f52600360205260405f2090565b83615734565b1590565b6113f4565b7f271c0f9d000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b60c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760206107936004356117a28161079b565b6024356117ae8161079b565b6044356117ba81610dea565b6117c2611001565b90608435926117d08461079b565b60a435946110a486611015565b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020611869600435613d04565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346103fe5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356118c28161079b565b6024356118ce8161079b565b6118d6614b4f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff83169290602081602481875afa8015611a7057611965915f91611a41575b5061195e8373ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b54906138e5565b9081156119ff579061199981847f21252411d5a999da4bc6a490f7143b61ba690edceb4577a2800eab8dfbb1e92c94614ba0565b73ffffffffffffffffffffffffffffffffffffffff6119cc5f5473ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff90961686526020860193909352169290819081015b0390a3005b7f9d000369000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff841660045260245ffd5b611a63915060203d602011611a69575b611a5b8183612c47565b81019061386c565b5f611935565b503d611a51565b61387b565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020611869600435611ab581613d5d565b613d04565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435611af58161079b565b611afd614b4f565b73ffffffffffffffffffffffffffffffffffffffff811615611c2d5773ffffffffffffffffffffffffffffffffffffffff6008541680611c025750611b7d8173ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000006008541617600855565b7f7b0a5ae0a2e8f0dc2ec7555098e00dd4af1418ee3fd1bcf9bb14f6990c10fa92611bfd73ffffffffffffffffffffffffffffffffffffffff611bd45f5473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff909516855216929081906020820190565b0390a2005b7f25139c2b000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fa20dc5d2000000000000000000000000000000000000000000000000000000005f5260045ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5773ffffffffffffffffffffffffffffffffffffffff600435611ca58161079b565b168015611cc2575f526004602052602060405f2054604051908152f35b7f89c62b64000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57475f8080808473ffffffffffffffffffffffffffffffffffffffff8254165af150611d456136cb565b507f56dedb874d4fc0f70753f281fa2c25e82085163206086fe826cf834b51701f6c602073ffffffffffffffffffffffffffffffffffffffff5f541692604051908152a2005b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435611dc68161079b565b611dce614b4f565b7fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc604073ffffffffffffffffffffffffffffffffffffffff600a54931692837fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600a5573ffffffffffffffffffffffffffffffffffffffff5f54169373ffffffffffffffffffffffffffffffffffffffff8351921682526020820152a27f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c611632611e9d6009546138b3565b60405191829182919060206040840193600181520152565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020610793600435611ef581613d5d565b614c02565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435611f3581613d5d565b5f52600b60205260405f205460801c60405180916fffffffffffffffffffffffffffffffff60208301911682520390f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435602435611f9f81610dea565b611fa7613de7565b611fb082613d5d565b815f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f20015416330361117a5781610afc6020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794613eb2565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004355f61012060405161204c81612c25565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152015261208b81613d5d565b5f52600b60205261062260405f2060036120a3612c88565b916120fd6120e482546120de6120c8826fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff168752565b60801c90565b6fffffffffffffffffffffffffffffffff166020850152565b61219061218760018301546121456121288273ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff166040880152565b64ffffffffff60a082901c16606087015261216a60c882901c60ff1615156080880152565b61217e60d082901c60ff16151560a0880152565b60d81c60ff1690565b151560c0850152565b6121ec6121e160028301546121d86121bb8273ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1660e0880152565b60a01c60ff1690565b60ff16610100850152565b01546101208201526040519182918281516fffffffffffffffffffffffffffffffff168152610140810192916101209081906020818101516fffffffffffffffffffffffffffffffff169085015260408181015173ffffffffffffffffffffffffffffffffffffffff169085015260608181015164ffffffffff169085015260808181015115159085015260a08181015115159085015260c08181015115159085015260e08181015173ffffffffffffffffffffffffffffffffffffffff16908501526101008181015160ff16908501520151910152565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356122ff8161079b565b612307614b4f565b73ffffffffffffffffffffffffffffffffffffffff5f5416906040517fc34df33e000000000000000000000000000000000000000000000000000000008152602081600481865afa908115611a70575f91612512575b506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008216600482015273ffffffffffffffffffffffffffffffffffffffff831690602081602481855afa908115611a70575f916124e3575b5015612477577ff45d882a72fce9d8d7a7e2e196a338d4d9d4057510b4b9ddf91a7066104d2eaf83856124478273ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f55565b6040805173ffffffffffffffffffffffffffffffffffffffff928316815292909116602083015281908101611632565b7fc9947bc2000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff808516600452166024527fffffffff000000000000000000000000000000000000000000000000000000001660445260645ffd5b612505915060203d60201161250b575b6124fd8183612c47565b810190614c62565b5f6123db565b503d6124f3565b612534915060203d60201161253a575b61252c8183612c47565b8101906138f2565b5f61235d565b503d612522565b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576040515f6002548060011c906001811690811561260a575b6020831082146106af57828552602085019190811561067857506001146125b8576106228461061681860382612c47565b60025f9081529250907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8184106125f65750500161061682610606565b8054848401526020909301926001016125e3565b91607f1691612587565b346103fe5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561264f8161079b565b60243561265b81611015565b73ffffffffffffffffffffffffffffffffffffffff8216918215612712576126ac90335f52600660205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831515161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31604051806119fa339482919091602081019215159052565b827f5b08ba18000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561277981613d5d565b5f52600b602052602060ff600260405f20015460a01c16604051908152f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356024356127d181610dea565b6127d9613de7565b6127e282613d5d565b815f52600b60205260405f205460801c156111aa57815f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f20015416330361117a576fffffffffffffffffffffffffffffffff811680156128cc5791807ffddf01d0842635e80929251f6862b3baf136a29f2b2fb148968e8b236d5785fe6060611632947ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce796845f52600b6020526128a160405f205460801c9286614c77565b6128aa85613da6565b9160405192835260208301526040820152a26040519081529081906020820190565b827f4513d390000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5761293b60043561293681613d5d565b613907565b604051600682101561294e576020918152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356129b681613d5d565b5f52600b602052602060ff600160405f20015460d01c166040519015158152f35b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435602435612a1081610dea565b604435612a1c8161079b565b60643590612a298261079b565b612a31613de7565b612a3a84613d5d565b835f52600b60205260ff600160405f20015460d81c16612bcc57835f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f2001541673ffffffffffffffffffffffffffffffffffffffff821603612b6a5750612aaf6113d26115bf855f52600360205260405f2090565b73ffffffffffffffffffffffffffffffffffffffff821603612b0a577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce761163284612afa85826142c2565b6040519081529081906020820190565b6108d590612b236115bf855f52600360205260405f2090565b7f5bdb8ad7000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff91821660045216602452604490565b6108d590612b8560016113b7875f52600b60205260405f2090565b7fc8bac88d000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff91821660045216602452604490565b837f271c0f9d000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610140810190811067ffffffffffffffff821117612c4257604052565b612bf8565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612c4257604052565b60405190612c9861014083612c47565b565b67ffffffffffffffff8111612c4257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b346103fe5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435612d0f8161079b565b60243590612d1c8261079b565b6044356064359267ffffffffffffffff84116103fe57366023850112156103fe57836004013592612d4c84612c9a565b93612d5a6040519586612c47565b80855236602482880101116103fe576020815f9260246108a9990183890137860101526139de565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004355f52600b602052602060ff600160405f20015460c81c166040519015158152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435612e1081613d5d565b5f52600b602052602073ffffffffffffffffffffffffffffffffffffffff600160405f20015416604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576020610793600435612e7f81613d5d565b614d78565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435602435612ebd81610dea565b612ec5613de7565b612ece82613d5d565b815f52600b60205260405f205460801c156111aa57815f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f20015416330361117a57816111716020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946142c2565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57600435612f7881613d04565b505f73ffffffffffffffffffffffffffffffffffffffff600a5416916044604051809481937fe9dc637500000000000000000000000000000000000000000000000000000000835230600484015260248301525afa8015611a70575f90612fea575b610622906040519182918261058a565b503d805f833e612ffa8183612c47565b8101906020818303126103fe5780519067ffffffffffffffff82116103fe57019080601f830112156103fe5781519161303283612c9a565b916130406040519384612c47565b838352602084830101116103fe57610622926130629160208085019101610526565b612fda565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5761313d60206004356130a781613d5d565b73ffffffffffffffffffffffffffffffffffffffff5f5416905f52600b825273ffffffffffffffffffffffffffffffffffffffff600160405f200154169060405180809581947f419d289d00000000000000000000000000000000000000000000000000000000835260048301919091602073ffffffffffffffffffffffffffffffffffffffff60408301946001845216910152565b03915afa8015611a7057610622915f91613163575b506040519081529081906020820190565b61317c915060203d602011611a6957611a5b8183612c47565b5f613152565b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe576004356131bd81613d5d565b805f52600b60205260405f205460801c15610b05576131db90613bc0565b604051908152602090f35b346103fe575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57602073ffffffffffffffffffffffffffffffffffffffff60085416604051908152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561327281613d5d565b5f52600b602052602073ffffffffffffffffffffffffffffffffffffffff600260405f20015416604051908152f35b346103fe5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe57602060ff6133336004356132e38161079b565b73ffffffffffffffffffffffffffffffffffffffff602435916133058361079b565b165f526006845260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b54166040519015158152f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760206024357ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260043561339c8461079b565b6133a4613de7565b6133ad81613d5d565b6133c16133b982614b05565b809583614e5a565b604051908152a16fffffffffffffffffffffffffffffffff60405191168152f35b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043561341d81613d5d565b5f52600b602052602064ffffffffff600160405f20015460a01c16604051908152f35b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5760043560243561347981610dea565b613481613de7565b61348a82613d5d565b815f52600b60205260ff600160405f20015460d81c166134fe57815f52600b60205273ffffffffffffffffffffffffffffffffffffffff600160405f20015416330361117a5781610afc6020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794614235565b507f271c0f9d000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b346103fe5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe5773ffffffffffffffffffffffffffffffffffffffff60043561357a8161079b565b165f526007602052602060405f2054604051908152f35b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103fe577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76020600435610afc6024356135f08161079b565b604435906135fd82610dea565b613605613de7565b61360e84613d5d565b83614e5a565b67ffffffffffffffff8111612c425760051b60200190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b91908110156136b95760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156103fe57019081359167ffffffffffffffff83116103fe5760200182360381136103fe579190565b61362c565b908092918237015f815290565b3d156136f5573d906136dc82612c9a565b916136ea6040519384612c47565b82523d5f602084013e565b606090565b80518210156136b95760209160051b010190565b919073ffffffffffffffffffffffffffffffffffffffff81161561384057815f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f205416151580613823575b6137f65773ffffffffffffffffffffffffffffffffffffffff61377d8192843391615378565b937ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7604051806137b287829190602083019252565b0390a1169216918083036137c557505050565b7f64283d7b000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b7ff53e751a000000000000000000000000000000000000000000000000000000005f52600482905260245ffd5b50815f52600b60205260ff600160405f20015460d01c1615613757565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b908160209103126103fe575190565b6040513d5f823e3d90fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019182116138e057565b613886565b919082039182116138e057565b908160209103126103fe575161059b816103d4565b61392d600161391e835f52600b60205260405f2090565b015460a01c64ffffffffff1690565b64ffffffffff429116116139d95761395d6001613952835f52600b60205260405f2090565b015460d81c60ff1690565b6139d3576fffffffffffffffffffffffffffffffff6139b161399c61399561398485614d78565b1515945f52600b60205260405f2090565b5460801c90565b6fffffffffffffffffffffffffffffffff1690565b16156139c5576139c057600190565b600290565b6139ce57600390565b600490565b50600590565b505f90565b9092916139ec81858461370e565b833b6139f9575b50505050565b602091613a3460405194859384937f150b7a020000000000000000000000000000000000000000000000000000000085523360048601614db5565b03815f73ffffffffffffffffffffffffffffffffffffffff87165af15f9181613b4c575b50613ab85750613a666136cb565b8051919082613ab1577f64a0ae92000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff821660045260245ffd5b9050602001fd5b7fffffffff000000000000000000000000000000000000000000000000000000007f150b7a0200000000000000000000000000000000000000000000000000000000911603613b0b57505f8080806139f3565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff1660045260245ffd5b613b6691925060203d60201161253a5761252c8183612c47565b905f613a58565b919082018092116138e057565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b8115613bb1570490565b613b7a565b8115613bb1570690565b6fffffffffffffffffffffffffffffffff613be6611677835f52600b60205260405f2090565b16908115613cd957613c0f613c0860026116b5845f52600b60205260405f2090565b8093614e0d565b91613c2f6003613c27845f52600b60205260405f2090565b015491614df0565b613c41613c3b84614c02565b83613b6d565b613c4b8286613b6d565b1115613cd157613c8491613c7061399c61399c613995875f52600b60205260405f2090565b94030192613c7e8185613ba7565b93613bb6565b613cb057613ca2600161391e613cac935f52600b60205260405f2090565b64ffffffffff1690565b0190565b90613ccc613ca2600161391e81955f52600b60205260405f2090565b010190565b505050505f90565b7f0f04b2a1000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b805f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f205416908115613d32575090565b7f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b805f52600b60205260ff600160405f20015460c81c1615613d7b5750565b7f92c38434000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b613daf81614c02565b815f52600b602052600360405f20015481018091116138e05761059b915f52600b60205260ff600260405f20015460a01c169061531e565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003613e2657565b7fa1c0d6e5000000000000000000000000000000000000000000000000000000005f5260045ffd5b906fffffffffffffffffffffffffffffffff809116911603906fffffffffffffffffffffffffffffffff82116138e057565b61059b90805f52600b602052613eac6fffffffffffffffffffffffffffffffff60405f20541691614b05565b90613e4e565b6fffffffffffffffffffffffffffffffff821680156140ff57613ed482613e80565b6fffffffffffffffffffffffffffffffff8116908183116140b75750613f0861399c611677855f52600b60205260405f2090565b106140545773ffffffffffffffffffffffffffffffffffffffff7fe31f2d40d5780915b1e656a67e11bdf09b0a4a925ec42bbeae220c8ca937ab499161402e613f5e60016113b7875f52600b60205260405f2090565b9182613f7760026113b7895f52600b60205260405f2090565b613ffb613f8c895f52600b60205260405f2090565b613fc08b613faa83546fffffffffffffffffffffffffffffffff1690565b036fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055565b6140238173ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b838154039055614ba0565b6040516fffffffffffffffffffffffffffffffff9095168552169280602081015b0390a3565b6108d5838361406e611677825f52600b60205260405f2090565b907fcb5f605f000000000000000000000000000000000000000000000000000000005f5292916fffffffffffffffffffffffffffffffff80926064956004521660245216604452565b7fe9771401000000000000000000000000000000000000000000000000000000005f5260048490526fffffffffffffffffffffffffffffffff8086166024521660445260645ffd5b7fea66b871000000000000000000000000000000000000000000000000000000005f52600482905260245ffd5b805f52600b60205264ffffffffff600160405f20015460a01c1664ffffffffff429116116141e25761415e5f82614c77565b61417560016113b7835f52600b60205260405f2090565b9061418b6115bf825f52600360205260405f2090565b907fda83bf669c651406e02062769e01d14cccb5625ea685fd95e0e56d29597dac4773ffffffffffffffffffffffffffffffffffffffff6141cb83613da6565b60405190815293811694169280602081015b0390a4565b806141fd600161391e6108d5945f52600b60205260405f2090565b7f54ae995a000000000000000000000000000000000000000000000000000000005f5260049190915264ffffffffff16602452604490565b805f52600b60205260405f205460801c614297576142538282614c77565b6040516fffffffffffffffffffffffffffffffff92909216825233917fc2a543cfadbf862642247e28711aaa30e3460384be5712be6557fee3384454fd90602090a3565b7fdc6fbbbc000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6fffffffffffffffffffffffffffffffff821680156143f8575f828152600b60205260409020600281015473ffffffffffffffffffffffffffffffffffffffff16919091816fffffffffffffffffffffffffffffffff808554161601926fffffffffffffffffffffffffffffffff84116138e0576143b19361437a91906fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055565b6143a28173ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b82815401905530903390614424565b6040516fffffffffffffffffffffffffffffffff909216825233917fa06c1466b3c9751408a5ac337a2e8808e5ee0ceed1fd70635d041b21174eb6b490806020810161404f565b507f33f2df5a000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b90919273ffffffffffffffffffffffffffffffffffffffff612c989481604051957f23b872dd00000000000000000000000000000000000000000000000000000000602088015216602486015216604484015260648301526064825261448b608483612c47565b61555d565b908160209103126103fe575160ff811681036103fe5790565b9061012060039161450a6144cd82516fffffffffffffffffffffffffffffffff1690565b85906fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055565b61456b61452a60208301516fffffffffffffffffffffffffffffffff1690565b85546fffffffffffffffffffffffffffffffff1660809190911b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000016178555565b614741600185016145d7614596604085015173ffffffffffffffffffffffffffffffffffffffff1690565b829073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6146366145ec606085015164ffffffffff1690565b82547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff000000000000000000000000000000000000000016178255565b6146916146466080850151151590565b82547fffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffff1690151560c81b79ff0000000000000000000000000000000000000000000000000016178255565b6146ed6146a160a0850151151590565b82547fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff1690151560d01b7aff000000000000000000000000000000000000000000000000000016178255565b60c0830151151581547fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff1690151560d81b7bff00000000000000000000000000000000000000000000000000000016179055565b6147b86002850161476c61459660e085015173ffffffffffffffffffffffffffffffffffffffff1690565b61010083015181547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1660a09190911b74ff000000000000000000000000000000000000000016179055565b0151910155565b9395949073ffffffffffffffffffffffffffffffffffffffff8516928315614add5773ffffffffffffffffffffffffffffffffffffffff88169561481860085473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff81168814614a9c5750604051957f313ce5670000000000000000000000000000000000000000000000000000000087526020876004818b5afa968715611a70575f97614a6b575b50601260ff881611614a295764ffffffffff42169064ffffffffff811682811180614a0f575b6149e7576149df5750955b600954996148b1612c88565b5f81526fffffffffffffffffffffffffffffffff851660208201529273ffffffffffffffffffffffffffffffffffffffff16604084015264ffffffffff881660608401526001608084015285151560a08401525f60c084015273ffffffffffffffffffffffffffffffffffffffff1660e083015260ff1661010082015261012081015f9052614948895f52600b60205260405f2090565b90614952916144a9565b61495c88836155e4565b60018801600955604080518981523360208201526fffffffffffffffffffffffffffffffff929092169082015264ffffffffff949094166060850152901515608084015273ffffffffffffffffffffffffffffffffffffffff16917fedec8afa4eeca64243a519c152eab5c4f9da1bded6fbb72cba74cd128de683699060a090a4565b9050956148a5565b7fd6d8693d000000000000000000000000000000000000000000000000000000005f5260045ffd5b506fffffffffffffffffffffffffffffffff85161561489a565b7fc9f55392000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff881660045260245ffd5b614a8e91975060203d602011614a95575b614a868183612c47565b810190614490565b955f614874565b503d614a7c565b7f987f5489000000000000000000000000000000000000000000000000000000005f5273ffffffffffffffffffffffffffffffffffffffff1660045260245ffd5b7ff9bb0fb3000000000000000000000000000000000000000000000000000000005f5260045ffd5b805f52600b6020526fffffffffffffffffffffffffffffffff60405f205416908115614b4957614b3490613da6565b808210614b455761059b91506156d8565b5090565b50505f90565b73ffffffffffffffffffffffffffffffffffffffff5f5416803303614b715750565b7fa7e1519e000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff929092166024830152604480830193909352918152612c989161448b606483612c47565b805f52600b60205264ffffffffff600160405f20015460a01c169042821015614b49575f52600b6020526fffffffffffffffffffffffffffffffff60405f205460801c16908115614b495742038181029181830414901517156138e05790565b908160209103126103fe575161059b81611015565b614c8f61399c613995835f52600b60205260405f2090565b6fffffffffffffffffffffffffffffffff831614614d3857906114bc612c989264ffffffffff42168064ffffffffff614cd5600161391e865f52600b60205260405f2090565b1610614ceb575b505f52600b60205260405f2090565b614d1390614cf883614c02565b80614d19575b50600161145b845f52600b60205260405f2090565b5f614cdc565b614d30600361164e865f52600b60205260405f2090565b90555f614cfe565b7fd2657d5a000000000000000000000000000000000000000000000000000000005f526004526fffffffffffffffffffffffffffffffff1660245260445ffd5b805f52600b602052614da06fffffffffffffffffffffffffffffffff60405f20541691613da6565b9081811015614b495781039081116138e05790565b909273ffffffffffffffffffffffffffffffffffffffff6080938161059b979616845216602083015260408201528160608201520190610547565b601260ff821614614e075760120360ff16600a0a90565b50600190565b90601260ff821614614b455760120360ff16600a0a0290565b15614e2d57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b614ef06020614e806113d25f5473ffffffffffffffffffffffffffffffffffffffff1690565b614e9760016113b7865f52600b60205260405f2090565b9060405180809581947f419d289d00000000000000000000000000000000000000000000000000000000835260048301919091602073ffffffffffffffffffffffffffffffffffffffff60408301946001845216910152565b03915afa908115611a70575f916152ff575b508034106152d057506fffffffffffffffffffffffffffffffff83169182156152a35773ffffffffffffffffffffffffffffffffffffffff811692831561527657614f586115bf845f52600360205260405f2090565b8373ffffffffffffffffffffffffffffffffffffffff8216861415918261525e575b505061521257614f9760026116b5855f52600b60205260405f2090565b90614fc0614fa485614c02565b6003614fb8875f52600b60205260405f2090565b015490613b6d565b90614fcb838361531e565b91614fe1611677875f52600b60205260405f2090565b93836fffffffffffffffffffffffffffffffff8616105f1461520457845b6fffffffffffffffffffffffffffffffff811684116151bc575061399c6151387f864d728834a993d067a518141636724c1196e5f004565e5b2a7b174b7f74f9979795615129866150f460028f8e6150e66113b79273ffffffffffffffffffffffffffffffffffffffff9f9c61507c6151549f9d61514e9e614e0d565b906003615091865f52600b60205260405f2090565b01548211615181575060036150ae855f52600b60205260405f2090565b019081540390555b613fc06150cb845f52600b60205260405f2090565b91613faa83546fffffffffffffffffffffffffffffffff1690565b5f52600b60205260405f2090565b9861511d8a73ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2090565b82815403905589614ba0565b6151328a613da6565b906138e5565b92613eac6116778a5f52600b60205260405f2090565b14614e26565b604080513381526fffffffffffffffffffffffffffffffff909716602088015291169490819081016141dd565b036003615196855f52600b60205260405f2090565b01556151b764ffffffffff4216600161145b865f52600b60205260405f2090565b6150b6565b7ff9f29859000000000000000000000000000000000000000000000000000000005f5260048890526fffffffffffffffffffffffffffffffff808b166024521660445260645ffd5b61520d846156d8565b614fff565b507f4208ab4c000000000000000000000000000000000000000000000000000000005f526004919091523360245273ffffffffffffffffffffffffffffffffffffffff1660445260645ffd5b61526f92509061173391339061573b565b835f614f7a565b7f9f32c858000000000000000000000000000000000000000000000000000000005f52600483905260245ffd5b7fb4855052000000000000000000000000000000000000000000000000000000005f52600482905260245ffd5b7f026dd37d000000000000000000000000000000000000000000000000000000005f523460045260245260445ffd5b615318915060203d602011611a6957611a5b8183612c47565b5f614f02565b90601260ff821614614b455760120360ff16600a0a908115613bb1570490565b615350905f52600560205260405f2090565b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b815f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f2054169273ffffffffffffffffffffffffffffffffffffffff81166154c0575b5073ffffffffffffffffffffffffffffffffffffffff831680615464575b61540973ffffffffffffffffffffffffffffffffffffffff83169283615430575b610869855f52600360205260405f2090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a490565b6154588173ffffffffffffffffffffffffffffffffffffffff165f52600460205260405f2090565b600181540190556153f7565b61546d8361533e565b6154958473ffffffffffffffffffffffffffffffffffffffff165f52600460205260405f2090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190556153d6565b6154cb83828661573b565b6153b857905073ffffffffffffffffffffffffffffffffffffffff831661551857507f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff907f177e802f000000000000000000000000000000000000000000000000000000005f521660045260245260445ffd5b905f602091828151910182855af11561387b575f513d6155db575073ffffffffffffffffffffffffffffffffffffffff81163b155b6155995750565b73ffffffffffffffffffffffffffffffffffffffff907f5274afe7000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b60011415615592565b73ffffffffffffffffffffffffffffffffffffffff81161561384057815f52600360205273ffffffffffffffffffffffffffffffffffffffff60405f2054161515806156bb575b6137f657907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76156856156745f8473ffffffffffffffffffffffffffffffffffffffff96615378565b604051938452929081906020820190565b0390a11661568f57565b7f73c6ac6e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b50815f52600b60205260ff600160405f20015460d01c161561562b565b6fffffffffffffffffffffffffffffffff8111615704576fffffffffffffffffffffffffffffffff1690565b7f6dfcc650000000000000000000000000000000000000000000000000000000005f52608060045260245260445ffd5b61059b9133905b9173ffffffffffffffffffffffffffffffffffffffff8216908115159384615765575b5050505090565b73ffffffffffffffffffffffffffffffffffffffff1680831494509192909184156157cc575b5050821561579f575b50505f80808061575e565b9091505f52600560205273ffffffffffffffffffffffffffffffffffffffff60405f205416145f80615794565b60ff92945090615804915f52600660205260405f209073ffffffffffffffffffffffffffffffffffffffff165f5260205260405f2090565b5416915f8061578b56fea26469706673582212204bbb1746001f5b21a3714c8ecd69036975ac62d44e5029ba1dfedc71b2bdb88564736f6c634300081d0033",
    "sourceMap": "1534:37148:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17091:25;;:65;;;;;1534:37148;-1:-1:-1;1534:37148:86;;;;;;;;;;17091:65;1712:25:10;1697:40;;;-1:-1:-1;1697:104:10;;;;17091:65:86;1697:156:10;;;;17091:65:86;;;;;1697:156:10;877:25:19;862:40;;;1697:156:10;;;:104;1768:33;1753:48;;;-1:-1:-1;1697:104:10;;1534:37148:86;;;;;;;;-1:-1:-1;;1534:37148:86;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;2441:5:10;1534:37148:86;;2441:5:10;1534:37148:86;;2441:5:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2441:5:10;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;-1:-1:-1;;1534:37148:86;;;;;;;;;;;;;;;;;2441:5:10;1534:37148:86;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3582:22:10;;;:::i;:::-;;-1:-1:-1;1534:37148:86;6059:15:10;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;8391:22;1534:37148;;2084:8:87;;;:::i;:::-;8391:22:86;:::i;:::-;1534:37148;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;15017:22:10;;;;:::i;:::-;735:10:16;15167:18:10;;:35;;;1534:37148:86;15167:69:10;;;1534:37148:86;15163:142:10;;1534:37148:86;15420:29:10;1534:37148:86;15420:24:10;1534:37148:86;;;;;;;15357:28:10;-1:-1:-1;15357:28:10;;1534:37148:86;;15420:15:10;1534:37148:86;;;;;;;15420:24:10;1534:37148:86;;;;;;;;;;;15420:29:10;1534:37148:86;15163:142:10;15263:27;-1:-1:-1;15263:27:10;735:10:16;1534:37148:86;;;15263:27:10;-1:-1:-1;15263:27:10;15167:69;735:10:16;1534:37148:86;4038:35:10;735:10:16;4038:25:10;;1534:37148:86;;;;4038:18:10;1534:37148:86;;;;;;;4038:25:10;1534:37148:86;;;;;;;;;;;;4038:35:10;1534:37148:86;;15206:30:10;15167:69;;:35;735:10:16;;1534:37148:86;;;15189:13:10;;15167:35;;1534:37148:86;;;;;;;;;;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2848:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;14477:29:86;2858:47;1534:37148;14477:29;1534:37148;14477:29;;:::i;:::-;14598:14;;;;;:::i;:::-;1534:37148;;;;;2858:47;1534:37148;;;;;;;;;;;;;;;;2830:135:87;2896:58;-1:-1:-1;2896:58:87;1534:37148:86;;2834:10:87;1534:37148:86;;;-1:-1:-1;2896:58:87;1534:37148:86;;;;;;;;;;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;2319:46:87;2315:130;;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;1534:37148:86;12721:8;;2858:47;12721:8;;:::i;:::-;1534:37148;;;;;2858:47;1534:37148;2315:130:87;2388:46;-1:-1:-1;2388:46:87;1534:37148:86;;;-1:-1:-1;2388:46:87;1534:37148:86;;;;;;;;;;;;6893:29;1534:37148;;2084:8:87;;;:::i;:::-;6893:29:86;:::i;:::-;1534:37148;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;3372:8:87;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;1534:37148:86;;;;;;678:13:54;;-1:-1:-1;693:9:54;;;;;;1534:37148:86;;;;;;;:::i;704:3:54:-;-1:-1:-1;788:8:54;;;;;;:::i;:::-;1534:37148:86;;;;;;;;;:::i;:::-;761:36:54;769:4;;761:36;;;;:::i;:::-;902:8;;898:377;;1344:19;1534:37148:86;1344:19:54;;;;;:::i;:::-;;;;;;:::i;:::-;;1534:37148:86;678:13:54;;898:377;930:331;;;1534:37148:86;930:331:54;;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;1048:36:87;1534:37148:86;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2591:27:87;1534:37148:86;;;;2587:111:87;;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;15489:13:86;15598:6;1534:37148;15489:13;;2858:47;15489:13;;;:::i;:::-;15598:6;;:::i;2830:135:87:-;2896:58;;-1:-1:-1;2896:58:87;1534:37148:86;;2834:10:87;1534:37148:86;;;-1:-1:-1;2896:58:87;2587:111;2641:46;;-1:-1:-1;2641:46:87;1534:37148:86;;;-1:-1:-1;2641:46:87;1534:37148:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;17714:67;1534:37148;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;17745:10;;17714:67;;:::i;1534:37148::-;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;11253:6;11085:73;1534:37148;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;11085:73:86;:::i;:::-;11253:6;;;:::i;1534:37148::-;;;;;;;;;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;2319:46:87;2315:130;;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;14063:6:86;;1534:37148;14063:6;2858:47;14063:6;;:::i;:::-;14152:8;;;:::i;2830:135:87:-;2896:58;;-1:-1:-1;2896:58:87;1534:37148:86;;2834:10:87;1534:37148:86;;;-1:-1:-1;2896:58:87;2315:130;2388:46;;-1:-1:-1;2388:46:87;1534:37148:86;;;-1:-1:-1;2388:46:87;1534:37148:86;;;;4872:39:10;1534:37148:86;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4872:39:10;:::i;1534:37148:86:-;;;;;;;;;;;;3749:24;1534:37148;;2084:8:87;;;:::i;:::-;3749:24:86;:::i;1534:37148::-;;;;;;;;;;;;;1129:48:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;4119:8:87;1534:37148:86;;;4119:37:87;1534:37148:86;-1:-1:-1;1534:37148:86;4119:37:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;5595:8:87;1534:37148:86;;;;5595:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;5595:27:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2591:27:87;1534:37148:86;;;;2587:111:87;;32698:39:86;1534:37148;2591:27:87;32712:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;32712:18;:25;1534:37148;;;;;;;;;;32698:39;:10;:39;;:149;;;1534:37148;32681:284;;2858:47;33000:26;;2858:47;33000:26;;:::i;:::-;33110:19;;;33173:30;;;:::i;:::-;33221:21;33217:198;;33106:679;;;33840:57;1534:37148;33881:15;1534:37148;2591:27:87;33840:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33840:18;:31;1534:37148;;;;;;;;;;;;;;;33840:57;33960:45;-1:-1:-1;33960:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33960:18;1534:37148;;;;;;;;;;;;;;;33960:45;34061:34;2591:27:87;34061:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;34061:18;:27;1534:37148;;;;;;;;;34061:34;34218:25;2591:27:87;34218:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;34218:25;5824:16:10;;34136:287:86;1534:37148;5824:16:10;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;5824:16:10;1534:37148:86;;;;;5824:16:10;34136:287:86;34346:22;;;:::i;:::-;1534:37148;;;;;;;;;;32698:10;;34136:287;1534:37148;;;;;;;;;;;;;;;;;;;;34136:287;;;;1534:37148;;;;;;;;;;;;;2858:47;;;;1534:37148;33217:198;33342:58;:37;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33342:18;:37;1534:37148;;;33342:58;:::i;:::-;1534:37148;;33217:198;;;33106:679;33671:103;33701:26;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33701:18;1534:37148;;;;;33701:26;1534:37148;;33739:32;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33739:18;:32;1534:37148;;;;;;;;;;33671:103;:::i;:::-;33615:37;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;33615:18;:37;1534:37148;33106:679;;32681:284;32879:75;-1:-1:-1;32879:75:86;1534:37148;;32698:10;1534:37148;;;-1:-1:-1;15263:27:10;32698:149:86;5824:16:10;32757:90:86;32758:89;5824:16:10;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;5824:16:10;32758:89:86;;:::i;:::-;32757:90;;1534:37148;32757:90;32698:149;;2587:111:87;2641:46;-1:-1:-1;2641:46:87;1534:37148:86;;;-1:-1:-1;2641:46:87;1534:37148:86;;;;;;;;;10555:73;1534:37148;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2273:22:10;1534:37148:86;;2273:22:10;:::i;:::-;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;1003:74:55;;:::i;:::-;1534:37148:86;;;12881:30;;12905:4;1534:37148;12881:30;;1534:37148;;;;;;;;;;;12881:30;;;;;;:55;:30;-1:-1:-1;12881:30:86;;;1534:37148;12914:22;;;1534:37148;;;;12914:15;1534:37148;;;;;;;12914:22;1534:37148;12881:55;;:::i;:::-;13000:12;;;12996:96;;13195:7;;;;13219:53;13195:7;;:::i;:::-;1534:37148;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13219:53;;;;1534:37148;12996:96;13035:46;-1:-1:-1;13035:46:86;1534:37148;;;;;;-1:-1:-1;15263:27:10;12881:30:86;;;;1534:37148;12881:30;1534:37148;12881:30;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1534:37148::-;;;;;;;;;;;;6355:23;1534:37148;;2084:8:87;;;:::i;:::-;6355:23:86;:::i;1534:37148::-;;;;;;;;;;;;;;;;:::i;:::-;1003:74:55;;:::i;:::-;1534:37148:86;;;15801:28;15797:109;;1534:37148;15963:11;1534:37148;;15963:25;15959:116;;16126:28;;;1534:37148;;;15963:11;1534:37148;;;15963:11;1534:37148;;16126:28;16197:86;;1534:37148;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;16197:86;;;;1534:37148;15959:116;16011:53;-1:-1:-1;16011:53:86;1534:37148;;;-1:-1:-1;16011:53:86;15797:109;15852:43;-1:-1:-1;15852:43:86;1534:37148;-1:-1:-1;15852:43:86;1534:37148;;;;;;;;;;;;;;;;;:::i;:::-;;2005:19:10;;2001:87;;-1:-1:-1;1534:37148:86;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;2001:87:10;2047:30;-1:-1:-1;2047:30:10;-1:-1:-1;1534:37148:86;;;-1:-1:-1;2047:30:10;1534:37148:86;;;;;;;;;;;2801:21:55;1534:37148:86;;;;;;;;;2913:49:55;;;;;:::i;:::-;;3168:66;1534:37148:86;;;;;;;;;;;3168:66:55;1534:37148:86;;;;;;;;;;;;;;;;;:::i;:::-;1003:74:55;;:::i;:::-;16637:78:86;1534:37148;;16517:13;1534:37148;;;;;;;;;16517:13;1534:37148;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;16637:78;16784:79;;16844:16;:12;1534:37148;16844:16;:::i;:::-;1534:37148;;16784:79;;;;1534:37148;;;;;;;16829:1;1534:37148;;;;;;;;;;;;;;;;;6622:30;1534:37148;;2084:8:87;;;:::i;:::-;6622:30:86;:::i;1534:37148::-;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;3636:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2848:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;13646:6:86;;1534:37148;13646:6;2858:47;13646:6;;:::i;1534:37148::-;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;4561:8:87;1534:37148:86;;;;-1:-1:-1;1534:37148:86;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1003:74:55;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;;;;;;2621:34:55;;1534:37148:86;2621:34:55;1534:37148:86;2621:34:55;;;;;;;;;-1:-1:-1;2621:34:55;;;1534:37148:86;-1:-1:-1;1534:37148:86;;;4364:52:55;;1534:37148:86;;;;4364:52:55;;1534:37148:86;;;;;;;;;;4364:52:55;;;;;;;-1:-1:-1;4364:52:55;;;1534:37148:86;4363:53:55;;4359:332;;4816:51;4745:28;;;;1534:37148:86;;;2532:11:55;1534:37148:86;;;2532:11:55;1534:37148:86;;4745:28:55;1534:37148:86;;;;;;;;;;;;;;;;;;;;;4816:51:55;1534:37148:86;4359:332:55;4439:241;-1:-1:-1;4439:241:55;1534:37148:86;;;;;;;;;;;;;;-1:-1:-1;15263:27:10;4364:52:55;;;;1534:37148:86;4364:52:55;1534:37148:86;4364:52:55;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;2621:34;;;;1534:37148:86;2621:34:55;1534:37148:86;2621:34:55;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;1534:37148:86;;;;;;;;;;;;;;2596:7:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2596:7:10;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;-1:-1:-1;;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;15772:22:10;;;15768:91;;15868:35;735:10:16;;-1:-1:-1;1534:37148:86;15868:18:10;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;15868:35:10;1534:37148:86;;;;;;;;;;;;15929:41:10;1534:37148:86;;735:10:16;15929:41:10;735:10:16;15929:41:10;;1534:37148:86;;;;;;;;;;;;15768:91:10;15817:31;;-1:-1:-1;15817:31:10;1534:37148:86;;;-1:-1:-1;15817:31:10;1534:37148:86;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;5008:8:87;1534:37148:86;;;;5008:32:87;1534:37148:86;-1:-1:-1;1534:37148:86;5008:32:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;2319:46:87;2315:130;;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;1534:37148:86;;;9569:30;;9565:117;;1534:37148;;9916:216;1534:37148;2858:47;1534:37148;2858:47;1534:37148;;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;9852:16;1534:37148;-1:-1:-1;1534:37148:86;;;;9852:16;;;:::i;:::-;10003:22;;;:::i;:::-;1534:37148;;;;;;;;;;;;;;9916:216;1534:37148;;;;;;;;;;;;;9565:117;9622:49;;-1:-1:-1;9622:49:86;1534:37148;;;-1:-1:-1;9622:49:86;1534:37148;;;;;;;;;;;6968:1254;1534:37148;;2084:8:87;;;:::i;:::-;6968:1254:86;:::i;:::-;1534:37148;;;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;5393:8:87;1534:37148:86;;;;5393:33:87;1534:37148:86;-1:-1:-1;1534:37148:86;5393:33:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2591:27:87;1534:37148:86;;;;2587:111:87;;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;24009:25;1534:37148;;;;;23999:35;23995:142;;5824:16:10;24151:31:86;5824:16:10;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;24151:31;1534:37148;;;24151:31;24147:137;;2858:47;;11849:6;;;;;:::i;:::-;1534:37148;;;;;;;;;;;;;24147:137;24205:68;5824:16:10;;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;5824:16:10;24205:68:86;-1:-1:-1;24205:68:86;1534:37148;;;;;;;;;;;;23995:142;24057:69;24100:18;:25;2591:27:87;24100:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;24100:25;24057:69;-1:-1:-1;24057:69:86;1534:37148;;;;;;;;;;;;2587:111:87;2641:46;;-1:-1:-1;2641:46:87;1534:37148:86;;;-1:-1:-1;2641:46:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1534:37148:86;5191:8:87;1534:37148:86;;;;5191:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;5191:27:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;3841:8:87;1534:37148:86;;;;3841:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;3841:25:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;8645:26;1534:37148;;2084:8:87;;;:::i;:::-;8645:26:86;:::i;1534:37148::-;;;;;;;;;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;2319:46:87;2315:130;;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;2848:25:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;12270:6:86;;1534:37148;12270:6;2858:47;12270:6;;:::i;1534:37148::-;;;;;;;;;;;;;17357:36;;;:::i;:::-;;-1:-1:-1;1534:37148:86;17465:13;1534:37148;;;17465:65;1534:37148;;17465:65;;;;1534:37148;17465:65;;17503:4;1534:37148;17465:65;;1534:37148;;;;;17465:65;;;;;;-1:-1:-1;17465:65:86;;;1534:37148;;;;;;;;;;:::i;17465:65::-;;;;-1:-1:-1;17465:65:86;;;;;;:::i;:::-;;;1534:37148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17465:65;;1534:37148;;;;;;;;;;;3420:147;1534:37148;;;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;;;-1:-1:-1;1534:37148:86;3531:8;1534:37148;;;3478:33;1534:37148;-1:-1:-1;1534:37148:86;3531:25;1534:37148;;;;;3420:147;;;;;1534:37148;3420:147;;1534:37148;3420:147;;1534:37148;;;;;;;;;3478:33;1534:37148;;;;;;;3420:147;;;;;;;;;1534:37148;3420:147;-1:-1:-1;3420:147:86;;;1534:37148;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;3420:147;;;;1534:37148;3420:147;1534:37148;3420:147;;;;;;;:::i;:::-;;;;1534:37148;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2319:8:87;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;2319:46:87;2315:130;;3819:2272:86;;;:::i;:::-;1534:37148;;;;;;;;;;;;;;;;;;;;;968:35:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;4748:8:87;1534:37148:86;;;;4748:24:87;1534:37148:86;-1:-1:-1;1534:37148:86;4748:24:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;4038:35:10;1534:37148:86;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;1534:37148:86;4038:18:10;1534:37148:86;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;4038:35:10;1534:37148:86;;;;;;;;;;;;;;;;;;;;;2858:47;1534:37148;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;18946:15:86;18820:24;;;:::i;:::-;18946:15;;;;:::i;:::-;1534:37148;;;;;2858:47;1534:37148;;;;;;;;;;;;;;;;;;;;;2084:8:87;;;:::i;:::-;-1:-1:-1;1534:37148:86;4346:8:87;1534:37148:86;;;;4346:31:87;1534:37148:86;-1:-1:-1;1534:37148:86;4346:31:87;1534:37148:86;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2591:27:87;1534:37148:86;;;;2587:111:87;;1534:37148:86;-1:-1:-1;1534:37148:86;2591:8:87;1534:37148:86;;;2591:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;2848:25:87;1534:37148:86;;2834:10:87;:39;2830:135;;15027:13:86;;1534:37148;15027:13;2858:47;15027:13;;:::i;2587:111:87:-;2641:46;;-1:-1:-1;2641:46:87;1534:37148:86;;;-1:-1:-1;2641:46:87;1534:37148:86;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;1534:37148:86;852:71:87;1534:37148:86;;;;-1:-1:-1;1534:37148:86;;;;;;;;;;;;;;;;2858:47;1534:37148;;;18488:6;1534:37148;;;;;:::i;:::-;;;;;;;:::i;:::-;832:76:56;;:::i;:::-;2084:8:87;;;:::i;:::-;18488:6:86;;:::i;1534:37148::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1534:37148:86;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;4142:578:10:-;;;1534:37148:86;;;4236:16:10;4232:87;;1534:37148:86;4250:1:10;1534:37148:86;5824:7:10;1534:37148:86;;;;4250:1:10;1534:37148:86;;;20164:18;;:56;;;4142:578:10;20160:138:86;;1534:37148;20315:33;735:10:16;;;;20315:33:86;;:::i;:::-;1534:37148;2858:47;1534:37148;;2858:47;;;;1534:37148;;;;;;;;2858:47;;;;1534:37148;;;4609:21:10;;;;4605:109;;4142:578;;;:::o;4605:109::-;4653:50;4250:1;4653:50;;1534:37148:86;;;;;;4250:1:10;4653:50;20160:138:86;20243:44;4250:1:10;20243:44:86;4204:46;1534:37148;;;;-1:-1:-1;15263:27:10;20164:56:86;1534:37148;;4250:1:10;1534:37148:86;20187:8;1534:37148;;;20187:33;1534:37148;4250:1:10;1534:37148:86;20187:33;1534:37148;;;;20186:34;20164:56;;4232:87:10;4275:33;4250:1;4275:33;4250:1;4275:33;1534:37148:86;;4250:1:10;4275:33;1534:37148:86;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;6968:1254::-;1534:37148;7146:31;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;7146:18;:31;1534:37148;;;;;;;;;7180:15;1534:37148;;7146:49;7142:106;;7319:27;7146:31;7319:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;7319:18;:27;1534:37148;;;;;;;7319:27;7315:83;;1534:37148;7522:41;:32;:18;7477:26;;;:::i;:::-;:30;;7522:18;1534:37148;;2591:8:87;1534:37148:86;;;;;;;7522:18;1534:37148;;;;;7522:32;1534:37148;;;;7522:41;1534:37148;7522:46;7518:382;;8000:76;;7146:31;6968:1254;:::o;8000:76::-;8034:31;8027:38;:::o;7518:382::-;7672:81;;7863:26;7856:33;:::o;7672:81::-;7710:28;7703:35;:::o;7315:83::-;7362:25;7369:18;7362:25;:::o;7142:106::-;7211:26;7218:19;7211:26;:::o;4984:233:10:-;;;;5120:7;;;;;:::i;:::-;1173:14:14;;1169:742;;4984:233:10;;;;;:::o;1169:742:14:-;1211:67;1534:37148:86;1211:67:14;1534:37148:86;;1211:67:14;;;;;1534:37148:86;1211:67:14;;735:10:16;1211:67:14;;;;:::i;:::-;;1534:37148:86;1190:1:14;1534:37148:86;;;1211:67:14;;1190:1;;1211:67;;;1169:742;-1:-1:-1;1207:694:14;;1518:383;;;:::i;:::-;1534:37148:86;;;;1568:18:14;;;1672:39;1190:1;1672:39;1534:37148:86;;;;;;-1:-1:-1;15263:27:10;1564:323:14;1758:111;;1211:67;1758:111;;1207:694;1534:37148:86;;;;1325:51:14;1321:182;;1207:694;1169:742;;;;;;1321:182;1445:39;1190:1;1445:39;1534:37148:86;;;;;-1:-1:-1;15263:27:10;1211:67:14;;;;;;;;;;;;;;;:::i;:::-;;;;;1534:37148:86;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::o;3819:2272::-;1534:37148;;4035:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;;4169:12;;;4165:96;;4359:65;1534:37148;4293:32;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;4359:65;;;:::i;:::-;4463:18;4691:59;4463:37;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;4463:18;:37;1534:37148;4691:59;;:::i;:::-;4824:51;4845:30;;;:::i;:::-;4824:51;;:::i;:::-;4879:28;;;;:::i;:::-;-1:-1:-1;4824:83:86;4820:122;;5705:30;4976:18;4952:65;4976:41;:32;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;4952:65;1534:37148;;;5588:30;;;;;:::i;:::-;5705;;:::i;:::-;;;5776:31;4721:1;5776:18;:48;:18;1534:37148;;2591:8:87;1534:37148:86;;;;;;;5776:31;1534:37148;;;;5776:48;1534:37148;5701:374;3819:2272::o;5701:374::-;6008:18;:48;:31;4721:1;6008:18;;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;6008:48;1534:37148;;5701:374;3819:2272::o;4820:122::-;4923:8;;;;4035:26;4923:8;:::o;4165:96::-;4204:46;4035:26;4204:46;;1534:37148;;-1:-1:-1;15263:27:10;16212:241;1534:37148:86;-1:-1:-1;1534:37148:86;5824:7:10;1534:37148:86;;;;-1:-1:-1;1534:37148:86;;;16341:19:10;;;16337:88;;16434:12;16212:241;:::o;16337:88::-;16383:31;-1:-1:-1;16383:31:10;;1534:37148:86;;-1:-1:-1;16383:31:10;6017:169:87;1534:37148:86;-1:-1:-1;1534:37148:86;6081:8:87;1534:37148:86;;;6081:27:87;1534:37148:86;-1:-1:-1;1534:37148:86;6081:27:87;1534:37148:86;;;;6080:28:87;6076:104;;6017:169;:::o;6076:104::-;6131:38;-1:-1:-1;6131:38:87;;1534:37148:86;;-1:-1:-1;6131:38:87;23126:295:86;23233:30;;;:::i;:::-;1534:37148;-1:-1:-1;1534:37148:86;23266:8;1534:37148;;23266:37;1534:37148;-1:-1:-1;1534:37148:86;23266:37;1534:37148;;;;;;;;23320:94;1534:37148;-1:-1:-1;1534:37148:86;23266:8;1534:37148;;;23379:32;1534:37148;-1:-1:-1;1534:37148:86;23379:32;1534:37148;;;;23320:94;;:::i;1969:145:56:-;1534:37148:86;2045:8:56;1534:37148:86;2036:4:56;2028:25;2024:84;;1969:145::o;2024:84::-;2076:21;;;;;;1534:37148:86;;;;;;;;;;;;;;;:::o;22796:155::-;22891:53;22796:155;1534:37148;-1:-1:-1;1534:37148:86;22891:8;1534:37148;;22920:24;1534:37148;;-1:-1:-1;1534:37148:86;;;22920:24;;:::i;:::-;22891:53;;:::i;30244:1515::-;1534:37148;;;30366:11;;30362:94;;30537:29;;;:::i;:::-;1534:37148;;;30660:25;;;;30656:132;;30969:18;30950:45;30969:26;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;30950:45;-1:-1:-1;30946:166:86;;1534:37148;31693:59;31139:18;31601:49;1534:37148;31139:25;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;31189:18;;1534:37148;31189:24;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;31392:36;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;31392:18;:36;1534:37148;;;;;;;;;;;;;;31392:36;1534:37148;;;;;;;;;;31392:36;31495:22;;1534:37148;;;;12914:15;1534:37148;;;;;;;31495:22;1534:37148;;;;;;31601:49;:::i;:::-;1534:37148;;;;;;;;;;;;;;31693:59;;;;30244:1515::o;30946:166::-;31018:83;31066:18;;:26;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;31066:26;31018:83;;30376:1;31018:83;1534:37148;;;;;;;30708:69;1534:37148;;;;;;;;30656:132;30708:69;30376:1;30708:69;;1534:37148;;;;;;;;;;;;;-1:-1:-1;15263:27:10;30362:94:86;30400:45;30376:1;30400:45;4204:46;1534:37148;;;;-1:-1:-1;15263:27:10;29449:691:86;1534:37148;-1:-1:-1;1534:37148:86;29550:8;1534:37148;;;29550:31;1534:37148;-1:-1:-1;1534:37148:86;29550:31;1534:37148;;;;;29584:15;1534:37148;;29550:49;29546:162;;29869:10;-1:-1:-1;29869:10:86;;:::i;:::-;30007:25;29550:31;30007:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;30007:25;5824:16:10;;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;5824:16:10;30100:22:86;29924:209;1534:37148;30100:22;;;:::i;:::-;1534:37148;;;;;;;;;;;;;;;29924:209;;;;29449:691::o;29546:162::-;29665:18;:31;29550;29665:18;29622:75;29665:18;1534:37148;;2591:8:87;1534:37148:86;;;;;;;29665:31;29622:75;-1:-1:-1;29622:75:86;;1534:37148;;;;;;;;;;;31863:563;1534:37148;-1:-1:-1;1534:37148:86;31984:8;1534:37148;;;-1:-1:-1;1534:37148:86;;;;31980:128;;32292:13;;;;:::i;:::-;1534:37148;;;;;;;;;32393:10;;32352:67;;1534:37148;;32352:67;31863:563::o;31980:128::-;32053:44;-1:-1:-1;32053:44:86;;1534:37148;;-1:-1:-1;32053:44:86;28584:761;1534:37148;;;28708:11;;28704:95;;28718:1;1534:37148;;;28824:8;1534:37148;;;;;28824:24;;;1534:37148;;;;28905:18;1534:37148;;;;;;;;;;;;;;;29126:78;28905:36;;;1534:37148;;;;;;;;;;;28905:36;29028:22;;1534:37148;;;;12914:15;1534:37148;;;;;;;29028:22;1534:37148;;;;;;29181:4;29157:10;;29126:78;;:::i;:::-;1534:37148;;;;;;;;29157:10;;29248:90;;1534:37148;;;;29248:90;1534:37148;28704:95;28742:46;;28718:1;28742:46;;1534:37148;;28718:1;28742:46;1618:188:9;;;;1534:37148:86;1745:53:9;1618:188;1534:37148:86;;;1745:53:9;1534:37148:86;1745:53:9;;;;1534:37148:86;1745:53:9;;;1534:37148:86;;;;;;;;;;;1745:53:9;;;;;;:::i;:::-;;:::i;1534:37148:86:-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25859:2621::-;;;;;1534:37148;;;26162:20;;;26158:96;;1534:37148;;;;;26339:11;1534:37148;;;;;;;;;26321:29;;26317:116;;1534:37148;;;26465:41;1534:37148;26465:41;;;;;;;;;;;;;;26180:1;26465:41;;;25859:2621;1534:37148;26599:2;1534:37148;;;26583:18;26579:111;;1534:37148;26731:15;1534:37148;;;;;26849:26;;;:57;;;25859:2621;26845:139;;27091:14;;27121:29;27087:200;;27339:12;1534:37148;;;;:::i;:::-;;;;;;;26465:41;27421:359;;1534:37148;;;;;27421:359;;1534:37148;;;;27421:359;;;1534:37148;27481:4;27421:359;;;1534:37148;;;;27421:359;;;1534:37148;;27421:359;;;1534:37148;;;;27421:359;;1534:37148;;;27421:359;;;1534:37148;27421:359;;;26180:1;1534:37148;;27400:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;27400:18;1534:37148;;;;:::i;:::-;27873:8;;;;:::i;:::-;27481:4;1534:37148;;27339:12;1534:37148;;;;;;;28242:10;1534:37148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28157:316;;1534:37148;;28157:316;25859:2621::o;27087:200::-;27252:24;;27087:200;;;26845:139;26929:44;26180:1;26929:44;26465:41;26180:1;26929:44;26849:57;1534:37148;;;;26879:27;26849:57;;26579:111;26624:55;26180:1;26624:55;1534:37148;;;;;;-1:-1:-1;15263:27:10;26465:41:86;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;26317:116;26373:49;26180:1;26373:49;1534:37148;;;;;-1:-1:-1;15263:27:10;26158:96:86;26205:38;26180:1;26205:38;;26180:1;26205:38;20654:618;1534:37148;;;20755:8;1534:37148;;;;;;;;20844:12;;;20840:51;;20921:22;;;:::i;:::-;21059:19;;;21055:64;;21244:21;;;;:::i;21055:64::-;21094:14;;:::o;20840:51::-;20872:8;;1534:37148;20872:8;:::o;3564:207:55:-;1534:37148:86;3642:11:55;1534:37148:86;;3620:10:55;;:34;3616:149;;3564:207;:::o;3616:149::-;3677:77;3642:11;3677:77;;1534:37148:86;3620:10:55;1534:37148:86;;;3642:11:55;3677:77;1219:160:9;1534:37148:86;;;1328:43:9;;;;1534:37148:86;;;;;1328:43:9;;;1534:37148:86;;;;;;;;;1328:43:9;;;;;;1534:37148:86;;1328:43:9;:::i;21853:890:86:-;1534:37148;;;22015:8;1534:37148;;;22015:31;1534:37148;;;22015:31;1534:37148;;;;21967:15;;22124:30;;;22120:69;;1534:37148;;22015:8;1534:37148;;;;;;;;;;22352:18;;;22348:57;;21967:15;1534:37148;;;;;;;;;;;;;;;21853:890;:::o;1534:37148::-;;;;;;;;;;;;;:::i;24616:1139::-;24801:70;24830:41;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;24801:70;1534:37148;;;24801:70;24797:180;;25018:15;25697:18;:51;25018:15;1534:37148;25018:15;1534:37148;25132:18;1534:37148;;25132:31;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;;25132:48;25128:511;;24616:1139;25697:18;1534:37148;;2591:8:87;1534:37148:86;;;;;;;25128:511;25580:48;25224:30;;;;:::i;:::-;25350:21;25346:171;;25128:511;25580:18;25132:31;25580:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;25580:48;25128:511;;;25346:171;25444:58;:37;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;25444:58;1534:37148;;25346:171;;;24797:180;24894:72;24830:32;24894:72;;1534:37148;;;;;;-1:-1:-1;15263:27:10;23471:314:86;1534:37148;;;23574:8;1534:37148;;23631:22;1534:37148;;;;;;23631:22;;:::i;:::-;23668:19;;;;;;;1534:37148;;;;;;;23703:26;:::o;1534:37148::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;919:288:92:-;1030:2;1534:37148:86;;;1018:14:92;1014:58;;1030:2;1534:37148:86;;;1128:2:92;1534:37148:86;;919:288:92:o;1014:58::-;1048:13;4721:1:86;1048:13:92;:::o;919:288::-;;1030:2;1534:37148:86;;;1018:14:92;1014:58;;1030:2;1534:37148:86;;;1128:2:92;1534:37148:86;;;919:288:92:o;1534:37148:86:-;;;;:::o;:::-;;;;;;;;;;34534:4146;34704:147;;:33;1534:37148;34704:11;1534:37148;;;;;34704:33;34815:25;34762:33;34815:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;34815:25;1534:37148;;;34704:147;;;;;1534:37148;34704:147;;;;;1534:37148;;;;;;;;;3478:33;1534:37148;;;;;;;34704:147;;;;;;;;;;:11;:147;;;34534:4146;34880:9;;;34960:19;34956:118;;1534:37148;;;;35139:11;;;35135:96;;1534:37148;;;35299:16;;;35295:104;;5824:16:10;;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;5824:16:10;1534:37148:86;;;;35613:15;;;:75;;;;34534:4146;35609:213;;;;1534:37148;35854:32;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;;35960:30;:70;:30;;;:::i;:::-;5824:7:10;35993:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;35993:18;:37;1534:37148;35960:70;;:::i;:::-;36060:53;;;;;:::i;:::-;36188:18;:26;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;36188:26;36224;1534:37148;;;;36265:19;36261:326;36265:19;;;36406:28;36261:326;1534:37148;;;36684:27;;36680:130;;36883:42;38396:36;38358:34;38480:193;36883:42;;38178:45;36883:42;37961:24;35854:32;36883:42;;37848:36;37961:18;36883:42;1534:37148;36883:42;;;38351:82;36883:42;;38358:74;36883:42;;:::i;:::-;37235:18;5824:7:10;37235:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37235:18;:37;1534:37148;37219:53;;5824:7:10;;37292:18:86;5824:7:10;37292:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37292:18;:37;1534:37148;;;;;;37215:569;37848:36;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37848:18;1534:37148;;;;;;;;37848:36;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37961:24;38072:22;;;1534:37148;;;;12914:15;1534:37148;;;;;;;38072:22;1534:37148;;;;;;38178:45;;:::i;:::-;38370:22;;;:::i;:::-;38358:34;;:::i;:::-;38406:18;:26;:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;38358:74;;38351:82;:::i;:::-;1534:37148;;;38616:10;1534:37148;;;;;;;;;;;;;;;;;;38480:193;1534:37148;37215:569;1534:37148;5824:7:10;37572:18:86;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37572:18;:37;1534:37148;37712:57;1534:37148;37753:15;1534:37148;34762:33;37712:18;;1534:37148;;2591:8:87;1534:37148:86;;;;;;;37712:57;37215:569;;36680:130;36734:65;34704:11;36734:65;30708:69;1534:37148;;;;;;;;;;;;;-1:-1:-1;15263:27:10;36261:326:86;36555:21;;;:::i;:::-;36261:326;;35609:213;-1:-1:-1;35711:100:86;34704:11;35711:100;34704:147;1534:37148;;;;35790:10;1534:37148;;;;;;;-1:-1:-1;15263:27:10;35613:75:86;35632:56;21598:10;;;21555:75;21598:10;;21555:75;;:::i;35632:56::-;35613:75;;;;35295:104;35338:50;34704:11;35338:50;4204:46;1534:37148;;;;-1:-1:-1;15263:27:10;35135:96:86;35173:47;34704:11;35173:47;4204:46;1534:37148;;;;-1:-1:-1;15263:27:10;34956:118:86;35002:61;34704:11;35002:61;34880:9;34704:147;1534:37148;;;;-1:-1:-1;15263:27:10;34704:147:86;;;;;;;;;;;;;;:::i;:::-;;;;360:290:92;;473:2;1534:37148:86;;;461:14:92;457:58;;473:2;1534:37148:86;;;571:2:92;1534:37148:86;;;;;;;360:290:92;:::o;14794:662:10:-;15420:24;14794:662;1534:37148:86;;15420:15:10;1534:37148:86;;;;;;;15420:24:10;1534:37148:86;;;;;;14794:662:10:o;8861:795::-;1534:37148:86;-1:-1:-1;1534:37148:86;5824:7:10;1534:37148:86;;;;-1:-1:-1;1534:37148:86;;;;;;;9054:86:10;;8861:795;1534:37148:86;;;;9184:18:10;9180:256;;8861:795;9563:21;1534:37148:86;;;9450:16:10;;9446:107;;8861:795;9563:16;;1534:37148:86;;5824:7:10;1534:37148:86;;;;;;;9563:21:10;9600:27;-1:-1:-1;9600:27:10;;8861:795;:::o;9446:107::-;9510:13;;1534:37148:86;;;;9391:9:10;1534:37148:86;;;;;;;9510:13:10;9527:1;1534:37148:86;;;;;9446:107:10;;9180:256;9342:5;;;:::i;:::-;9391:15;;1534:37148:86;;;;9391:9:10;1534:37148:86;;;;;;;9391:15:10;1534:37148:86;;;;;;9180:256:10;;9054:86;7217:38;;;;;:::i;:::-;9054:86;7212:255;1534:37148:86;-1:-1:-1;1534:37148:86;;;;;7321:31:10;;-1:-1:-1;7321:31:10;;1534:37148:86;;-1:-1:-1;7321:31:10;7271:186;1534:37148:86;7398:44:10;;-1:-1:-1;7398:44:10;1534:37148:86;7398:44:10;1534:37148:86;;;;-1:-1:-1;7398:44:10;8370:720:9;;-1:-1:-1;8507:421:9;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:9;;8942:15;;1534:37148:86;;;;8960:26:9;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;1534:37148:86;9033:40:9;;-1:-1:-1;9033:40:9;1534:37148:86;9033:40:9;1534:37148:86;;-1:-1:-1;9033:40:9;8942:68;9009:1;8994:16;;8942:68;;9978:327:10;1534:37148:86;;;10045:16:10;10041:87;;1534:37148:86;10059:1:10;1534:37148:86;5824:7:10;1534:37148:86;;;;10059:1:10;1534:37148:86;;;20164:18;;:56;;;9978:327:10;20160:138:86;;20315:33;2858:47;;20315:33;10059:1:10;20315:33:86;1534:37148;20315:33;;:::i;:::-;1534:37148;;;;;;;;;;;;;;2858:47;;;;1534:37148;10203:96:10;;9978:327::o;10203:96::-;10257:31;10059:1;10257:31;10059:1;10257:31;1534:37148:86;;10059:1:10;10257:31;20164:56:86;1534:37148;;10059:1:10;1534:37148:86;20187:8;1534:37148;;;20187:33;1534:37148;10059:1:10;1534:37148:86;20187:33;1534:37148;;;;20186:34;20164:56;;9264:218:22;1534:37148:86;9344:25:22;;9340:105;;1534:37148:86;;9264:218:22;:::o;9340:105::-;9392:42;;;9423:3;9392:42;1534:37148:86;;;;9392:42:22;;21429:208:86;21555:75;21429:208;21598:10;21555:75;6401:272:10;;1534:37148:86;;;6539:21:10;;;;:127;;;;6401:272;6520:146;;;;6401:272;:::o;6539:127::-;1534:37148:86;;6577:16:10;;;;-1:-1:-1;1534:37148:86;;;;6577:52:10;;;;6539:127;6577:88;;;;;;6539:127;;;;;;;;;6577:88;1534:37148:86;;;6558:1:10;1534:37148:86;6059:15:10;1534:37148:86;;;;6558:1:10;1534:37148:86;;;6633:32:10;6577:88;;;;:52;1534:37148:86;;;;;4038:35:10;1534:37148:86;6558:1:10;1534:37148:86;4038:18:10;1534:37148:86;;;6558:1:10;1534:37148:86;;;;;;;;;;;;;4038:35:10;1534:37148:86;;6577:52:10;;;;",
    "linkReferences": {},
    "immutableReferences": { "15032": [{ "start": 15870, "length": 32 }] }
  },
  "methodIdentifiers": {
    "adjustRatePerSecond(uint256,uint128)": "a8a482a6",
    "aggregateAmount(address)": "ec01da3b",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batch(bytes[])": "1e897afb",
    "calculateMinFeeWei(uint256)": "cca138e5",
    "comptroller()": "5fe3b567",
    "coveredDebtOf(uint256)": "42e3e23d",
    "create(address,address,uint128,uint40,address,bool)": "5f2a0beb",
    "createAndDeposit(address,address,uint128,uint40,address,bool,uint128)": "36af277f",
    "depletionTimeOf(uint256)": "d4b80884",
    "deposit(uint256,uint128,address,address)": "b61f7583",
    "depositAndPause(uint256,uint128)": "bcbd019e",
    "getApproved(uint256)": "081812fc",
    "getBalance(uint256)": "1e010439",
    "getRatePerSecond(uint256)": "80448da3",
    "getRecipient(uint256)": "6d0cee75",
    "getSender(uint256)": "b971302a",
    "getSnapshotDebtScaled(uint256)": "450ac908",
    "getSnapshotTime(uint256)": "eb5710d8",
    "getStream(uint256)": "894e9a0d",
    "getToken(uint256)": "e4b50cb8",
    "getTokenDecimals(uint256)": "a7de07cd",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isStream(uint256)": "b8a3be66",
    "isTransferable(uint256)": "b2564569",
    "isVoided(uint256)": "569f4c59",
    "name()": "06fdde03",
    "nativeToken()": "e1758bd8",
    "nextStreamId()": "1e99d569",
    "nftDescriptor()": "44267570",
    "ongoingDebtScaledOf(uint256)": "7ddf9228",
    "ownerOf(uint256)": "6352211e",
    "pause(uint256)": "136439dd",
    "recover(address,address)": "648bf774",
    "refund(uint256,uint128)": "81632a86",
    "refundAndPause(uint256,uint128)": "379d871a",
    "refundMax(uint256)": "0c699624",
    "refundableAmountOf(uint256)": "1400ecec",
    "restart(uint256,uint128)": "ebb6f79a",
    "restartAndDeposit(uint256,uint128,uint128)": "1f0cce58",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setComptroller(address)": "8bad38dd",
    "setNFTDescriptor(address)": "7cad6cd1",
    "setNativeToken(address)": "6da1e102",
    "statusOf(uint256)": "ad35efd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalDebtOf(uint256)": "08b87923",
    "transferFeesToComptroller()": "78f82ce7",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferTokens(address,address,uint128)": "28f8b77d",
    "uncoveredDebtOf(uint256)": "bc7a2d6c",
    "void(uint256)": "5ea2145b",
    "withdraw(uint256,address,uint128)": "fdd46d60",
    "withdrawMax(uint256,address)": "ea5ead19",
    "withdrawableAmountOf(uint256)": "d975dfed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialComptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialNFTDescriptor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"comptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Comptrollerable_CallerNotComptroller\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"previousComptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newComptroller\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"minimalInterfaceId\",\"type\":\"bytes4\"}],\"name\":\"Comptrollerable_UnsupportedInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlowState_Null\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlowState_StreamPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlowState_StreamVoided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SablierFlowState_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"SablierFlow_CreateNativeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierFlow_CreateRatePerSecondZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_DepositAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFeeWei\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_InsufficientFeePayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"availableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"SablierFlow_InvalidCalculation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SablierFlow_InvalidTokenDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"SablierFlow_NativeTokenAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierFlow_NativeTokenZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_NewRatePerSecondZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamRecipient\",\"type\":\"address\"}],\"name\":\"SablierFlow_NotStreamRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamSender\",\"type\":\"address\"}],\"name\":\"SablierFlow_NotStreamSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_NotTransferable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"name\":\"SablierFlow_Overdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"SablierFlow_RatePerSecondNotDifferent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_RefundAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"refundAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"name\":\"SablierFlow_RefundOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SablierFlow_SenderZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_StreamBalanceZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_StreamNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"}],\"name\":\"SablierFlow_StreamPending\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SablierFlow_SurplusZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"SablierFlow_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_WithdrawAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"SablierFlow_WithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SablierFlow_WithdrawalAddressNotRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"oldRatePerSecond\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"newRatePerSecond\",\"type\":\"uint128\"}],\"name\":\"AdjustFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"name\":\"CreateFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DepositFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"PauseFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"surplus\",\"type\":\"uint256\"}],\"name\":\"Recover\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RefundFromFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"RestartFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISablierComptroller\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISablierComptroller\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"SetComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"oldNFTDescriptor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"SetNFTDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nativeToken\",\"type\":\"address\"}],\"name\":\"SetNativeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISablierComptroller\",\"name\":\"comptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TransferFeesToComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"writtenOffDebt\",\"type\":\"uint256\"}],\"name\":\"VoidFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"withdrawAmount\",\"type\":\"uint128\"}],\"name\":\"WithdrawFromFlowStream\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"newRatePerSecond\",\"type\":\"uint128\"}],\"name\":\"adjustRatePerSecond\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"aggregateAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"calculateMinFeeWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minFeeWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ISablierComptroller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"coveredDebtOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"coveredDebt\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"startTime\",\"type\":\"uint40\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"createAndDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"depletionTimeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depletionTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"depositAndPause\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRatePerSecond\",\"outputs\":[{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSnapshotDebtScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotDebtScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSnapshotTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStream\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"isStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isTransferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVoided\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"snapshotDebtScaled\",\"type\":\"uint256\"}],\"internalType\":\"struct Flow.Stream\",\"name\":\"stream\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isVoided\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDescriptor\",\"outputs\":[{\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"ongoingDebtScaledOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ongoingDebtScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"refundAndPause\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"restart\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"restartAndDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISablierComptroller\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"setComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"setNFTDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNativeToken\",\"type\":\"address\"}],\"name\":\"setNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum Flow.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"totalDebtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeesToComptroller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"uncoveredDebtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uncoveredDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"void\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"withdrawableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"AdjustFlowStream(uint256,uint256,uint128,uint128)\":{\"params\":{\"newRatePerSecond\":\"The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"oldRatePerSecond\":\"The old rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream.\",\"totalDebt\":\"The total debt at the time of the update, denoted in token's decimals.\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"CreateFlowStream(uint256,address,address,address,uint128,uint40,address,bool)\":{\"params\":{\"creator\":\"The address creating the stream.\",\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens, as well as the NFT owner.\",\"sender\":\"The address streaming the tokens, which is able to adjust and pause the stream.\",\"snapshotTime\":\"The timestamp when the stream begins accumulating debt.\",\"streamId\":\"The ID of the newly created stream.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating whether the stream NFT is transferable or not.\"}},\"DepositFlowStream(uint256,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens deposited into the stream, denoted in token's decimals.\",\"funder\":\"The address that made the deposit.\",\"streamId\":\"The ID of the stream.\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"PauseFlowStream(uint256,address,address,uint256)\":{\"params\":{\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\",\"totalDebt\":\"The amount of tokens owed by the sender to the recipient, denoted in token's decimals.\"}},\"Recover(address,address,address,uint256)\":{\"params\":{\"comptroller\":\"The address of the current comptroller.\",\"surplus\":\"The amount of surplus tokens recovered.\",\"to\":\"The address the surplus amount has been sent to.\",\"token\":\"The address of the ERC-20 token the surplus amount has been recovered for.\"}},\"RefundFromFlowStream(uint256,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens refunded to the sender, denoted in token's decimals.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\"}},\"RestartFlowStream(uint256,address,uint128)\":{\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\"}},\"SetNFTDescriptor(address,address,address)\":{\"params\":{\"comptroller\":\"The address of the current comptroller.\",\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\",\"oldNFTDescriptor\":\"The address of the old NFT descriptor contract.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"VoidFlowStream(uint256,address,address,address,uint256,uint256)\":{\"params\":{\"caller\":\"The address that performed the void, which can be the sender, recipient or an approved operator.\",\"newTotalDebt\":\"The new total debt, denoted in token's decimals.\",\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\",\"writtenOffDebt\":\"The amount of debt written off by the caller, denoted in token's decimals.\"}},\"WithdrawFromFlowStream(uint256,address,address,address,uint128)\":{\"params\":{\"caller\":\"The address that performed the withdrawal, which can be the recipient or an approved operator.\",\"streamId\":\"The ID of the stream.\",\"to\":\"The address that received the withdrawn tokens.\",\"token\":\"The contract address of the ERC-20 token that was withdrawn.\",\"withdrawAmount\":\"The amount withdrawn to the recipient, denoted in token's decimals.\"}}},\"kind\":\"dev\",\"methods\":{\"adjustRatePerSecond(uint256,uint128)\":{\"details\":\"Emits a {AdjustFlowStream} and {MetadataUpdate} event. Notes: - If the snapshot time is not in the future, it updates both the snapshot time and snapshot debt. Requirements: - Must not be delegate called. - `streamId` must not reference a null, paused, or voided stream. - `msg.sender` must be the stream's sender. - `newRatePerSecond` must be greater than zero and must be different from the current rate per second.\",\"params\":{\"newRatePerSecond\":\"The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to adjust.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batch(bytes[])\":{\"details\":\"Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.\",\"params\":{\"calls\":\"An array of inputs for each call.\"},\"returns\":{\"results\":\"An array of results from each call. Empty when the calls do not return anything.\"}},\"calculateMinFeeWei(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"constructor\":{\"params\":{\"initialComptroller\":\"The address of the initial comptroller contract.\",\"initialNFTDescriptor\":\"The address of the initial NFT descriptor.\"}},\"coveredDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"create(address,address,uint128,uint40,address,bool)\":{\"details\":\"Emits a {CreateFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `sender` must not be the zero address. - `recipient` must not be the zero address. - If `startTime` is in the future, the `ratePerSecond` must be greater than zero. - The `token` must not be the native token. - The `token`'s decimals must be less than or equal to 18.\",\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens.\",\"sender\":\"The address streaming the tokens, which is able to adjust and pause the stream. It doesn't have to be the same as `msg.sender`.\",\"startTime\":\"The timestamp when the stream starts. A sentinel value of zero means the stream will be created with the snapshot time as `block.timestamp`.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating if the stream NFT is transferable.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createAndDeposit(address,address,uint128,uint40,address,bool,uint128)\":{\"details\":\"Emits a {Transfer}, {CreateFlowStream}, {DepositFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {create} and {deposit}. Requirements: - Refer to the requirements in {create} and {deposit}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens.\",\"sender\":\"The address streaming the tokens. It doesn't have to be the same as `msg.sender`.\",\"startTime\":\"The timestamp when the stream starts. A sentinel value of zero means the stream will be created with the snapshot time as `block.timestamp`.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating if the stream NFT is transferable.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"depletionTimeOf(uint256)\":{\"details\":\"Reverts on the following conditions: - If `streamId` references a paused or a null stream. - If stream balance is zero.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"deposit(uint256,uint128,address,address)\":{\"details\":\"Emits a {Transfer}, {DepositFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `amount` must be greater than zero. - `sender` and `recipient` must match the stream's sender and recipient addresses.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream to deposit to.\"}},\"depositAndPause(uint256,uint128)\":{\"details\":\"Emits a {Transfer}, {DepositFlowStream}, {PauseFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {deposit} and {pause}. Requirements: - Refer to the requirements in {deposit} and {pause}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to deposit to, and then pause.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBalance(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRatePerSecond(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getRecipient(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSender(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSnapshotDebtScaled(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSnapshotTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getStream(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getToken(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getTokenDecimals(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isStream(uint256)\":{\"details\":\"Does not revert if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isTransferable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isVoided(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ongoingDebtScaledOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause(uint256)\":{\"details\":\"Emits a {PauseFlowStream} and {MetadataUpdate} event. Notes: - It updates snapshot debt and snapshot time. - It sets the rate per second to zero. Requirements: - Must not be delegate called. - `streamId` must not reference a null, pending or paused stream. - `msg.sender` must be the stream's sender.\",\"params\":{\"streamId\":\"The ID of the stream to pause.\"}},\"recover(address,address)\":{\"details\":\"Emits a {Recover} event. Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the comptroller contract. - The surplus amount must be greater than zero.\",\"params\":{\"to\":\"The address to send the surplus amount.\",\"token\":\"The contract address of the ERC-20 token to recover for.\"}},\"refund(uint256,uint128)\":{\"details\":\"Emits a {Transfer}, {RefundFromFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `msg.sender` must be the sender. - `amount` must be greater than zero and must not exceed the refundable amount.\",\"params\":{\"amount\":\"The amount to refund, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to refund from.\"}},\"refundAndPause(uint256,uint128)\":{\"details\":\"Emits a {Transfer}, {RefundFromFlowStream}, {PauseFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {pause}. Requirements: - Refer to the requirements in {refund} and {pause}.\",\"params\":{\"amount\":\"The amount to refund, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to refund from and then pause.\"}},\"refundMax(uint256)\":{\"details\":\"Emits a {Transfer}, {RefundFromFlowStream} and {MetadataUpdate} event. Requirements: - Refer to the requirements in {refund}.\",\"params\":{\"streamId\":\"The ID of the stream to refund from.\"},\"returns\":{\"refundedAmount\":\"The amount refunded to the stream sender, denoted in token's decimals.\"}},\"refundableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"restart(uint256,uint128)\":{\"details\":\"Emits a {RestartFlowStream} and {MetadataUpdate} event. Notes: - It updates snapshot debt and snapshot time. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream, must be paused, and must not be voided. - `msg.sender` must be the stream's sender. - `ratePerSecond` must be greater than zero.\",\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to restart.\"}},\"restartAndDeposit(uint256,uint128,uint128)\":{\"details\":\"Emits a {RestartFlowStream}, {Transfer}, {DepositFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {restart} and {deposit}. Requirements: - `amount` must be greater than zero. - Refer to the requirements in {restart}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to restart.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setComptroller(address)\":{\"details\":\"Emits a {SetComptroller} event. Requirements: - `msg.sender` must be the current comptroller. - The new comptroller must return `true` from {supportsInterface} with the comptroller's minimal interface ID which is defined as the XOR of the following function selectors: 1. {calculateMinFeeWeiFor} 2. {convertUSDFeeToWei} 3. {execute} 4. {getMinFeeUSDFor}\",\"params\":{\"newComptroller\":\"The address of the new comptroller contract.\"}},\"setNFTDescriptor(address)\":{\"details\":\"Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the comptroller contract.\",\"params\":{\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\"}},\"setNativeToken(address)\":{\"details\":\"For more information, see the documentation for {nativeToken}. Emits a {SetNativeToken} event. Requirements: - `msg.sender` must be the comptroller contract. - `newNativeToken` must not be zero address. - The native token must not be already set.\",\"params\":{\"newNativeToken\":\"The address of the native token.\"}},\"statusOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream. Integrators should exercise caution when depending on the return value of this function as streams can be paused and resumed at any moment.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"transferFeesToComptroller()\":{\"details\":\"Emits a {TransferFeesToComptroller} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferTokens(address,address,uint128)\":{\"details\":\"Emits a {Transfer} event. Requirements: - `msg.sender` must have approved this contract to spend at least `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens to transfer, denoted in token's decimals.\",\"to\":\"The address receiving the tokens.\",\"token\":\"The contract address of the ERC-20 token to be transferred.\"}},\"uncoveredDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"void(uint256)\":{\"details\":\"Emits a {VoidFlowStream} and {MetadataUpdate} event. Notes: - It sets snapshot time to the `block.timestamp`. - Voiding an insolvent stream sets the snapshot debt to the stream's balance making the uncovered debt to become zero. - Voiding a solvent stream updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. - A voided stream cannot be restarted. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `msg.sender` must either be the stream's sender, recipient or an approved third party.\",\"params\":{\"streamId\":\"The ID of the stream to void.\"}},\"withdraw(uint256,address,uint128)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromFlowStream} and {MetadataUpdate} event. Notes: - It sets the snapshot time to the `block.timestamp` if `amount` is greater than snapshot debt. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `to` must not be the zero address. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party. - `amount` must  be greater than zero and must not exceed the withdrawable amount.\",\"params\":{\"amount\":\"The amount to withdraw, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"}},\"withdrawMax(uint256,address)\":{\"details\":\"Emits a {Transfer}, {WithdrawFromFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.\",\"params\":{\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"},\"returns\":{\"withdrawnAmount\":\"The amount withdrawn to the recipient, denoted in token's decimals.\"}},\"withdrawableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"withdrawableAmount\":\"The amount that the recipient can withdraw.\"}}},\"title\":\"SablierFlow\",\"version\":1},\"userdoc\":{\"errors\":{\"Comptrollerable_CallerNotComptroller(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the comptroller.\"}],\"Comptrollerable_UnsupportedInterfaceId(address,address,bytes4)\":[{\"notice\":\"Thrown when the new comptroller does not support the minimal interface ID from the previous comptroller.\"}],\"DelegateCall()\":[{\"notice\":\"Thrown when trying to delegate call to a function that disallows delegate calls.\"}],\"SablierFlowState_Null(uint256)\":[{\"notice\":\"Thrown when the ID references a null stream.\"}],\"SablierFlowState_StreamPaused(uint256)\":[{\"notice\":\"Thrown when trying to perform a disallowed action on a paused stream.\"}],\"SablierFlowState_StreamVoided(uint256)\":[{\"notice\":\"Thrown when trying to perform a disallowed action on a voided stream.\"}],\"SablierFlowState_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"SablierFlow_CreateNativeToken(address)\":[{\"notice\":\"Thrown when trying to create a stream with the native token.\"}],\"SablierFlow_CreateRatePerSecondZero()\":[{\"notice\":\"Thrown when trying to create a pending stream with zero rate per second.\"}],\"SablierFlow_DepositAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to create a stream with a zero deposit amount.\"}],\"SablierFlow_InsufficientFeePayment(uint256,uint256)\":[{\"notice\":\"Thrown when trying to withdraw with a fee amount less than the minimum fee.\"}],\"SablierFlow_InvalidCalculation(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when an unexpected error occurs during the calculation of an amount.\"}],\"SablierFlow_InvalidTokenDecimals(address)\":[{\"notice\":\"Thrown when trying to create a stream with a token with decimals greater than 18.\"}],\"SablierFlow_NativeTokenAlreadySet(address)\":[{\"notice\":\"Thrown when trying to set the native token address when it is already set.\"}],\"SablierFlow_NativeTokenZeroAddress()\":[{\"notice\":\"Thrown when trying to set zero address as native token.\"}],\"SablierFlow_NewRatePerSecondZero(uint256)\":[{\"notice\":\"Thrown when trying to adjust the rate per second to zero.\"}],\"SablierFlow_NotStreamRecipient(address,address)\":[{\"notice\":\"Thrown when the recipient address does not match the stream's recipient.\"}],\"SablierFlow_NotStreamSender(address,address)\":[{\"notice\":\"Thrown when the sender address does not match the stream's sender.\"}],\"SablierFlow_NotTransferable(uint256)\":[{\"notice\":\"Thrown when trying to transfer Stream NFT when transferability is disabled.\"}],\"SablierFlow_Overdraw(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to withdraw an amount greater than the withdrawable amount.\"}],\"SablierFlow_RatePerSecondNotDifferent(uint256,uint128)\":[{\"notice\":\"Thrown when trying to change the rate per second with the same rate per second.\"}],\"SablierFlow_RefundAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to refund zero tokens from a stream.\"}],\"SablierFlow_RefundOverflow(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to refund an amount greater than the refundable amount.\"}],\"SablierFlow_SenderZeroAddress()\":[{\"notice\":\"Thrown when trying to create a stream with the sender as the zero address.\"}],\"SablierFlow_StreamBalanceZero(uint256)\":[{\"notice\":\"Thrown when trying to get depletion time of a stream with zero balance.\"}],\"SablierFlow_StreamNotPaused(uint256)\":[{\"notice\":\"Thrown when trying to perform a disallowed action on a non-paused stream.\"}],\"SablierFlow_StreamPending(uint256,uint40)\":[{\"notice\":\"Thrown when trying to perform a disallowed action on a pending stream.\"}],\"SablierFlow_SurplusZero(address)\":[{\"notice\":\"Thrown when trying to recover for a token with zero surplus.\"}],\"SablierFlow_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"SablierFlow_WithdrawAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to withdraw zero tokens from a stream.\"}],\"SablierFlow_WithdrawToZeroAddress(uint256)\":[{\"notice\":\"Thrown when trying to withdraw to the zero address.\"}],\"SablierFlow_WithdrawalAddressNotRecipient(uint256,address,address)\":[{\"notice\":\"Thrown when trying to withdraw to an address other than the recipient's.\"}]},\"events\":{\"AdjustFlowStream(uint256,uint256,uint128,uint128)\":{\"notice\":\"Emitted when the rate per second is updated by the sender.\"},\"CreateFlowStream(uint256,address,address,address,uint128,uint40,address,bool)\":{\"notice\":\"Emitted when a Flow stream is created.\"},\"DepositFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a stream is funded.\"},\"PauseFlowStream(uint256,address,address,uint256)\":{\"notice\":\"Emitted when a stream is paused by the sender.\"},\"Recover(address,address,address,uint256)\":{\"notice\":\"Emitted when the comptroller recovers the surplus amount of token.\"},\"RefundFromFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a sender is refunded from a stream.\"},\"RestartFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a stream is restarted by the sender.\"},\"SetComptroller(address,address)\":{\"notice\":\"Emitted when the comptroller address is set by the admin.\"},\"SetNFTDescriptor(address,address,address)\":{\"notice\":\"Emitted when the comptroller sets a new NFT descriptor contract.\"},\"SetNativeToken(address,address)\":{\"notice\":\"Emitted when the native token address is set by the comptroller.\"},\"TransferFeesToComptroller(address,uint256)\":{\"notice\":\"Emitted when the fees are transferred to the comptroller contract.\"},\"VoidFlowStream(uint256,address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a stream is voided by the sender, recipient or an approved operator.\"},\"WithdrawFromFlowStream(uint256,address,address,address,uint128)\":{\"notice\":\"Emitted when tokens are withdrawn from a stream by a recipient or an approved operator.\"}},\"kind\":\"user\",\"methods\":{\"adjustRatePerSecond(uint256,uint128)\":{\"notice\":\"Changes the stream's rate per second.\"},\"aggregateAmount(address)\":{\"notice\":\"Retrieves the aggregate amount across all streams, denoted in units of the token's decimals.\"},\"batch(bytes[])\":{\"notice\":\"Allows batched calls to self, i.e., `this` contract.\"},\"calculateMinFeeWei(uint256)\":{\"notice\":\"Calculates the minimum fee in wei required to withdraw from the given stream ID.\"},\"comptroller()\":{\"notice\":\"Retrieves the address of the comptroller contract.\"},\"coveredDebtOf(uint256)\":{\"notice\":\"Returns the amount of debt covered by the stream balance, denoted in token's decimals.\"},\"create(address,address,uint128,uint40,address,bool)\":{\"notice\":\"Creates a new Flow stream by setting the snapshot time to `startTime` and leaving the balance to zero. The stream is wrapped in an ERC-721 NFT.\"},\"createAndDeposit(address,address,uint128,uint40,address,bool,uint128)\":{\"notice\":\"Creates a new Flow stream by setting the snapshot time to `startTime` and the balance to `amount`. The stream is wrapped in an ERC-721 NFT.\"},\"depletionTimeOf(uint256)\":{\"notice\":\"Returns the time at which the total debt exceeds stream balance. If the total debt exceeds the stream balance, it returns 0.\"},\"deposit(uint256,uint128,address,address)\":{\"notice\":\"Makes a deposit in a stream.\"},\"depositAndPause(uint256,uint128)\":{\"notice\":\"Deposits tokens in a stream and pauses it.\"},\"getBalance(uint256)\":{\"notice\":\"Retrieves the balance of the stream, i.e. the total deposited amounts subtracted by the total withdrawn amounts, denoted in token's decimals.\"},\"getRatePerSecond(uint256)\":{\"notice\":\"Retrieves the rate per second of the stream, denoted as a fixed-point number where 1e18 is 1 token per second.\"},\"getRecipient(uint256)\":{\"notice\":\"Retrieves the stream's recipient.\"},\"getSender(uint256)\":{\"notice\":\"Retrieves the stream's sender.\"},\"getSnapshotDebtScaled(uint256)\":{\"notice\":\"Retrieves the snapshot debt of the stream, denoted as a fixed-point number where 1e18 is 1 token.\"},\"getSnapshotTime(uint256)\":{\"notice\":\"Retrieves the snapshot time of the stream, which is a Unix timestamp.\"},\"getStream(uint256)\":{\"notice\":\"Retrieves the stream entity.\"},\"getToken(uint256)\":{\"notice\":\"Retrieves the token of the stream.\"},\"getTokenDecimals(uint256)\":{\"notice\":\"Retrieves the token decimals of the stream.\"},\"isStream(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream exists.\"},\"isTransferable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream NFT is transferable.\"},\"isVoided(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is voided.\"},\"nativeToken()\":{\"notice\":\"Retrieves the address of the ERC-20 interface of the native token, if it exists.\"},\"nextStreamId()\":{\"notice\":\"Counter for stream ids.\"},\"nftDescriptor()\":{\"notice\":\"Contract that generates the non-fungible token URI.\"},\"ongoingDebtScaledOf(uint256)\":{\"notice\":\"Returns the amount of debt accrued since the snapshot time until now, denoted as a fixed-point number where 1e18 is 1 token. If the stream is pending, it returns zero.\"},\"pause(uint256)\":{\"notice\":\"Pauses the stream.\"},\"recover(address,address)\":{\"notice\":\"Recover the surplus amount of tokens.\"},\"refund(uint256,uint128)\":{\"notice\":\"Refunds the provided amount of tokens from the stream to the sender's address.\"},\"refundAndPause(uint256,uint128)\":{\"notice\":\"Refunds the provided amount of tokens from the stream to the sender's address.\"},\"refundMax(uint256)\":{\"notice\":\"Refunds the entire refundable amount of tokens from the stream to the sender's address.\"},\"refundableAmountOf(uint256)\":{\"notice\":\"Returns the amount that the sender can be refunded from the stream, denoted in token's decimals.\"},\"restart(uint256,uint128)\":{\"notice\":\"Restarts the stream with the provided rate per second.\"},\"restartAndDeposit(uint256,uint128,uint128)\":{\"notice\":\"Restarts the stream with the provided rate per second, and makes a deposit.\"},\"setComptroller(address)\":{\"notice\":\"Sets the comptroller to a new address.\"},\"setNFTDescriptor(address)\":{\"notice\":\"Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs.\"},\"setNativeToken(address)\":{\"notice\":\"Sets the native token address. Once set, it cannot be changed.\"},\"statusOf(uint256)\":{\"notice\":\"Returns the stream's status.\"},\"totalDebtOf(uint256)\":{\"notice\":\"Returns the total amount owed by the sender to the recipient, denoted in token's decimals.\"},\"transferFeesToComptroller()\":{\"notice\":\"Transfers the fees to the comptroller contract.\"},\"transferTokens(address,address,uint128)\":{\"notice\":\"A helper to transfer ERC-20 tokens from the caller to the provided address. Useful for paying one-time bonuses.\"},\"uncoveredDebtOf(uint256)\":{\"notice\":\"Returns the amount of debt not covered by the stream balance, denoted in token's decimals.\"},\"void(uint256)\":{\"notice\":\"Voids a stream.\"},\"withdraw(uint256,address,uint128)\":{\"notice\":\"Withdraws the provided `amount` to the provided `to` address.\"},\"withdrawMax(uint256,address)\":{\"notice\":\"Withdraws the entire withdrawable amount to the provided `to` address.\"},\"withdrawableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the recipient can withdraw from the stream, denoted in token decimals. This is an alias for `coveredDebtOf`.\"}},\"notice\":\"See the documentation in {ISablierFlow}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SablierFlow.sol\":\"SablierFlow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@sablier/=node_modules/@sablier/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05\",\"dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42\"]},\"node_modules/@prb/math/src/UD21x18.sol\":{\"keccak256\":\"0xb0176747ae9c9f329bce39730d4d315b839e73a815494ddf2de2094aa9056957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://534a82fe091627f9d01e665ac763daf56981b30b3976269f8e5c33a84a2dbebc\",\"dweb:/ipfs/QmYiiGJNr4S4ypYB4KGBPMTMiNskert8Cp4s6uf1CU3k73\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11\",\"dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab\",\"dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca\",\"dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353\",\"dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6\"]},\"node_modules/@prb/math/src/sd21x18/Casting.sol\":{\"keccak256\":\"0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2\",\"dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd\"]},\"node_modules/@prb/math/src/sd21x18/Constants.sol\":{\"keccak256\":\"0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396\",\"dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3\"]},\"node_modules/@prb/math/src/sd21x18/Errors.sol\":{\"keccak256\":\"0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee\",\"dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML\"]},\"node_modules/@prb/math/src/sd21x18/ValueType.sol\":{\"keccak256\":\"0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880\",\"dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d\",\"dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf\",\"dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462\",\"dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919\",\"dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb\"]},\"node_modules/@prb/math/src/ud21x18/Casting.sol\":{\"keccak256\":\"0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09\",\"dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL\"]},\"node_modules/@prb/math/src/ud21x18/Constants.sol\":{\"keccak256\":\"0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60\",\"dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV\"]},\"node_modules/@prb/math/src/ud21x18/Errors.sol\":{\"keccak256\":\"0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80\",\"dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq\"]},\"node_modules/@prb/math/src/ud21x18/ValueType.sol\":{\"keccak256\":\"0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af\",\"dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae\",\"dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437\",\"dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41\",\"dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780\",\"dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8\",\"dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6\",\"dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47\",\"dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n\"]},\"node_modules/@sablier/evm-utils/src/Batch.sol\":{\"keccak256\":\"0x489db1a48d7b4324aaf51ac81da759cf5cbe4926dff67aeff1eb355367a8006c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c1211c417550aee8f255f9418ad27b19ef61c652b3d9c25c7b3d4854f0a57cc9\",\"dweb:/ipfs/QmSdqBUCVVSBZwdnSRgcYG8iG7YFwBoQSqqqnt4soNm9qN\"]},\"node_modules/@sablier/evm-utils/src/Comptrollerable.sol\":{\"keccak256\":\"0x091133bb84e9002c202ae434dcf4efd5bdbf3219ea35bc9cbd68376b87dbc89c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17743ed45b9adf6216d51a4ac2ccc41bad2de9a82d54abcb4c24cea6de5b2931\",\"dweb:/ipfs/QmSRH9LBY2WbdZJSwXFNK5piELAt9VENhscNKbdBCziTMo\"]},\"node_modules/@sablier/evm-utils/src/NoDelegateCall.sol\":{\"keccak256\":\"0xd03a61ec509ad031decabcc1f4e2cb1846eebbbac78a1b18a039d19f9045fb3d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d47362745c490efa40bf33302542cdb5710cd76cca4fd3f60bc4eb5fc3431bc7\",\"dweb:/ipfs/QmNrjaHQthPJviT4j5DJeQJsEN2cSbW3hPTLqT28mZPhXm\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126\",\"dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IBatch.sol\":{\"keccak256\":\"0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758\",\"dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IComptrollerable.sol\":{\"keccak256\":\"0xdb541c2b423f15c309f6b0cff9b96897694bffb0e3ffeacab1c292e4681e6819\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d116fc3f5333621a07ffbbe79f202195dfcadf247b041a8e63e06dbc11c876cd\",\"dweb:/ipfs/QmPZxgLU4ajfNzYF3CvTDeLzrxVBDk446sNHfULcqwykQh\"]},\"node_modules/@sablier/evm-utils/src/interfaces/IRoleAdminable.sol\":{\"keccak256\":\"0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233\",\"dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi\"]},\"node_modules/@sablier/evm-utils/src/interfaces/ISablierComptroller.sol\":{\"keccak256\":\"0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b\",\"dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM\"]},\"node_modules/@sablier/evm-utils/src/libraries/Errors.sol\":{\"keccak256\":\"0xedb89cb164fc16d162ac9ee5e8e649b10c577a78a76adcd6a2934d16263fd172\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e939b25bd82858dbbe1c25f13a4bdf48c75eecd9f4dda1be26f4dfee573fb16b\",\"dweb:/ipfs/QmTci8g82qV4r6XPQtYvvxMM6Cp5fS8tq37DtA9kVB5WoX\"]},\"src/SablierFlow.sol\":{\"keccak256\":\"0x771d41f672b44777ccae5c3e7e1c31cdc2b7313c2c64ebbe5d1acc2bb0d0ec3b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://60fa30e0174705776d17862afd4aba4ee8d133798e1316f09331e759ed3f09fc\",\"dweb:/ipfs/QmSNdxohWcLtHZC855erzvYVFV9g6jHfBAo5eb1dHakmNJ\"]},\"src/abstracts/SablierFlowState.sol\":{\"keccak256\":\"0x2bb100709f269fa94fd9d657cd51d3c2ec1e0999355f788428efceef8ab3b477\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4ea7be601d673dbd87a4ee5f749c31d3df0c5afb3be92eacfddcda6a858fd340\",\"dweb:/ipfs/QmejNEMAP1jkxcGNzkcs8fBzWRqURRtefpqbEBjdErmM4z\"]},\"src/interfaces/IFlowNFTDescriptor.sol\":{\"keccak256\":\"0xdf964042ae7c74f03909d020fbb63e0ae56aeb2fa47213e3775a1e3263d00e54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0d4ede276be940185ea0b638c8f38f68232b6f4394ce0a69c2c729bc761aec82\",\"dweb:/ipfs/QmSgivdvgxrY7n6XbLQcGp645nRw1y2272iJUVhQyfnWUp\"]},\"src/interfaces/ISablierFlow.sol\":{\"keccak256\":\"0xb8384b247cbc7fac495d3ef0d43aa0bfd89bf5d2a1bb8ff201c34793e0d573fa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bf7f90880fad3e63bfd006884d984834e958db24b8a382c3ec72204082bd5918\",\"dweb:/ipfs/QmZkt1gafcbXvqbvGDXE7zmY5ac6y3zvfvEur1ZXfNNMga\"]},\"src/interfaces/ISablierFlowState.sol\":{\"keccak256\":\"0x34de979793f5ae6efea67b31f6884e469f4436c8add0dc1c7e1151926db316e3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c25ab6522693ad95750b56bd5f7b2889a9291395d77ae4f417f0c45f5f165f08\",\"dweb:/ipfs/QmZpeUNJzwriC9aSbKacojNCy3HtY7JBGthC4Vs3sWt83f\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x94634bdc4d687c2df9818597d1f0ae09211003d81a6ce69634d803c54fb8773e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6900c22b1aeb53b584e33afd21d1844aabdc1d2162ea08622f6cfcd90d693f52\",\"dweb:/ipfs/Qmf4qi3x3QbDM3mBh5L8m9PGE8J87pjpchKZTnfpeneZt6\"]},\"src/libraries/Helpers.sol\":{\"keccak256\":\"0xabe826ee4c0e9d8169f51665e1b0eb129888f62d92b2ae10deec6da6343f115a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e148c93d7c164344b45dc00202a6962efb449a068efdd0acbf26759c533c7e9\",\"dweb:/ipfs/QmcJxsaWid5XKDkHKFkGry2xjcNV8po31YfpHDGEaQ6ZFT\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0x73391073cf39bd553a0128aa4af5ea937d604a87393bbe37689727ccf10cf67f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2b32bbf9314ec331953938b36102f91fa6e899879cc450a34bd0bd397e618a9e\",\"dweb:/ipfs/QmbtxAvTVpvWBipLm3ALAdHhGXa6BoXZreBFGW9pfinoYE\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.29+commit.ab55807c" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "initialComptroller", "type": "address" },
            { "internalType": "address", "name": "initialNFTDescriptor", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "comptroller", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "Comptrollerable_CallerNotComptroller"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousComptroller", "type": "address" },
            { "internalType": "address", "name": "newComptroller", "type": "address" },
            { "internalType": "bytes4", "name": "minimalInterfaceId", "type": "bytes4" }
          ],
          "type": "error",
          "name": "Comptrollerable_UnsupportedInterfaceId"
        },
        { "inputs": [], "type": "error", "name": "DelegateCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlowState_Null"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlowState_StreamPaused"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlowState_StreamVoided"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "SablierFlowState_Unauthorized"
        },
        {
          "inputs": [{ "internalType": "address", "name": "nativeToken", "type": "address" }],
          "type": "error",
          "name": "SablierFlow_CreateNativeToken"
        },
        { "inputs": [], "type": "error", "name": "SablierFlow_CreateRatePerSecondZero" },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_DepositAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "feePaid", "type": "uint256" },
            { "internalType": "uint256", "name": "minFeeWei", "type": "uint256" }
          ],
          "type": "error",
          "name": "SablierFlow_InsufficientFeePayment"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "availableAmount", "type": "uint128" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierFlow_InvalidCalculation"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SablierFlow_InvalidTokenDecimals"
        },
        {
          "inputs": [{ "internalType": "address", "name": "nativeToken", "type": "address" }],
          "type": "error",
          "name": "SablierFlow_NativeTokenAlreadySet"
        },
        { "inputs": [], "type": "error", "name": "SablierFlow_NativeTokenZeroAddress" },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_NewRatePerSecondZero"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "recipient", "type": "address" },
            { "internalType": "address", "name": "streamRecipient", "type": "address" }
          ],
          "type": "error",
          "name": "SablierFlow_NotStreamRecipient"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "address", "name": "streamSender", "type": "address" }
          ],
          "type": "error",
          "name": "SablierFlow_NotStreamSender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_NotTransferable"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierFlow_Overdraw"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierFlow_RatePerSecondNotDifferent"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_RefundAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "refundAmount", "type": "uint128" },
            { "internalType": "uint128", "name": "refundableAmount", "type": "uint128" }
          ],
          "type": "error",
          "name": "SablierFlow_RefundOverflow"
        },
        { "inputs": [], "type": "error", "name": "SablierFlow_SenderZeroAddress" },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_StreamBalanceZero"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_StreamNotPaused"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint40", "name": "snapshotTime", "type": "uint40" }
          ],
          "type": "error",
          "name": "SablierFlow_StreamPending"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SablierFlow_SurplusZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "SablierFlow_Unauthorized"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_WithdrawAmountZero"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "type": "error",
          "name": "SablierFlow_WithdrawToZeroAddress"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "type": "error",
          "name": "SablierFlow_WithdrawalAddressNotRecipient"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "bits", "type": "uint8" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "type": "error",
          "name": "SafeCastOverflowedUintDowncast"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "uint256", "name": "totalDebt", "type": "uint256", "indexed": false },
            { "internalType": "UD21x18", "name": "oldRatePerSecond", "type": "uint128", "indexed": false },
            { "internalType": "UD21x18", "name": "newRatePerSecond", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "AdjustFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "approved", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_fromTokenId", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "_toTokenId", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "creator", "type": "address", "indexed": false },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128", "indexed": false },
            { "internalType": "uint40", "name": "snapshotTime", "type": "uint40", "indexed": false },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "transferable", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "CreateFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "funder", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "DepositFlowStream",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "_tokenId", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "totalDebt", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "PauseFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "surplus", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Recover",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "uint128", "name": "amount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "RefundFromFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "RestartFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "oldComptroller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract ISablierComptroller",
              "name": "newComptroller",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetComptroller",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "oldNFTDescriptor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetNFTDescriptor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            { "internalType": "address", "name": "nativeToken", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "SetNativeToken",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ISablierComptroller",
              "name": "comptroller",
              "type": "address",
              "indexed": true
            },
            { "internalType": "uint256", "name": "feeAmount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "TransferFeesToComptroller",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": true },
            { "internalType": "address", "name": "caller", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "newTotalDebt", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "writtenOffDebt", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "VoidFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "contract IERC20", "name": "token", "type": "address", "indexed": true },
            { "internalType": "address", "name": "caller", "type": "address", "indexed": false },
            { "internalType": "uint128", "name": "withdrawAmount", "type": "uint128", "indexed": false }
          ],
          "type": "event",
          "name": "WithdrawFromFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "UD21x18", "name": "newRatePerSecond", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "adjustRatePerSecond"
        },
        {
          "inputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregateAmount",
          "outputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "bytes[]", "name": "calls", "type": "bytes[]" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "batch",
          "outputs": [{ "internalType": "bytes[]", "name": "results", "type": "bytes[]" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateMinFeeWei",
          "outputs": [{ "internalType": "uint256", "name": "minFeeWei", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "comptroller",
          "outputs": [{ "internalType": "contract ISablierComptroller", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "coveredDebtOf",
          "outputs": [{ "internalType": "uint128", "name": "coveredDebt", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "address", "name": "recipient", "type": "address" },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" },
            { "internalType": "uint40", "name": "startTime", "type": "uint40" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            { "internalType": "bool", "name": "transferable", "type": "bool" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "create",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "address", "name": "recipient", "type": "address" },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" },
            { "internalType": "uint40", "name": "startTime", "type": "uint40" },
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            { "internalType": "bool", "name": "transferable", "type": "bool" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createAndDeposit",
          "outputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "depletionTimeOf",
          "outputs": [{ "internalType": "uint256", "name": "depletionTime", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "address", "name": "recipient", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositAndPause"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [{ "internalType": "uint128", "name": "balance", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRatePerSecond",
          "outputs": [{ "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipient",
          "outputs": [{ "internalType": "address", "name": "recipient", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSender",
          "outputs": [{ "internalType": "address", "name": "sender", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotDebtScaled",
          "outputs": [{ "internalType": "uint256", "name": "snapshotDebtScaled", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotTime",
          "outputs": [{ "internalType": "uint40", "name": "snapshotTime", "type": "uint40" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getStream",
          "outputs": [
            {
              "internalType": "struct Flow.Stream",
              "name": "stream",
              "type": "tuple",
              "components": [
                { "internalType": "uint128", "name": "balance", "type": "uint128" },
                { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" },
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "uint40", "name": "snapshotTime", "type": "uint40" },
                { "internalType": "bool", "name": "isStream", "type": "bool" },
                { "internalType": "bool", "name": "isTransferable", "type": "bool" },
                { "internalType": "bool", "name": "isVoided", "type": "bool" },
                { "internalType": "contract IERC20", "name": "token", "type": "address" },
                { "internalType": "uint8", "name": "tokenDecimals", "type": "uint8" },
                { "internalType": "uint256", "name": "snapshotDebtScaled", "type": "uint256" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenDecimals",
          "outputs": [{ "internalType": "uint8", "name": "tokenDecimals", "type": "uint8" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isStream",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransferable",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isVoided",
          "outputs": [{ "internalType": "bool", "name": "result", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeToken",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextStreamId",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDescriptor",
          "outputs": [{ "internalType": "contract IFlowNFTDescriptor", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ongoingDebtScaledOf",
          "outputs": [{ "internalType": "uint256", "name": "ongoingDebtScaled", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "tokenId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recover"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "refund"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundAndPause"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundMax",
          "outputs": [{ "internalType": "uint128", "name": "refundedAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "refundableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "refundableAmount", "type": "uint128" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "restart"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "UD21x18", "name": "ratePerSecond", "type": "uint128" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "restartAndDeposit"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [{ "internalType": "contract ISablierComptroller", "name": "newComptroller", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setComptroller"
        },
        {
          "inputs": [{ "internalType": "contract IFlowNFTDescriptor", "name": "newNFTDescriptor", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFTDescriptor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newNativeToken", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNativeToken"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "statusOf",
          "outputs": [{ "internalType": "enum Flow.Status", "name": "status", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [{ "internalType": "string", "name": "uri", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDebtOf",
          "outputs": [{ "internalType": "uint256", "name": "totalDebt", "type": "uint256" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "transferFeesToComptroller" },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            { "internalType": "contract IERC20", "name": "token", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferTokens"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "uncoveredDebtOf",
          "outputs": [{ "internalType": "uint256", "name": "uncoveredDebt", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "payable",
          "type": "function",
          "name": "void"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawMax",
          "outputs": [{ "internalType": "uint128", "name": "withdrawnAmount", "type": "uint128" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "streamId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableAmountOf",
          "outputs": [{ "internalType": "uint128", "name": "withdrawableAmount", "type": "uint128" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "adjustRatePerSecond(uint256,uint128)": {
            "details": "Emits a {AdjustFlowStream} and {MetadataUpdate} event. Notes: - If the snapshot time is not in the future, it updates both the snapshot time and snapshot debt. Requirements: - Must not be delegate called. - `streamId` must not reference a null, paused, or voided stream. - `msg.sender` must be the stream's sender. - `newRatePerSecond` must be greater than zero and must be different from the current rate per second.",
            "params": {
              "newRatePerSecond": "The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to adjust."
            }
          },
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "batch(bytes[])": {
            "details": "Since `msg.value` can be reused across calls, be VERY CAREFUL when using it. Refer to https://paradigm.xyz/2021/08/two-rights-might-make-a-wrong for more information.",
            "params": { "calls": "An array of inputs for each call." },
            "returns": { "results": "An array of results from each call. Empty when the calls do not return anything." }
          },
          "calculateMinFeeWei(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "constructor": {
            "params": {
              "initialComptroller": "The address of the initial comptroller contract.",
              "initialNFTDescriptor": "The address of the initial NFT descriptor."
            }
          },
          "coveredDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "create(address,address,uint128,uint40,address,bool)": {
            "details": "Emits a {CreateFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `sender` must not be the zero address. - `recipient` must not be the zero address. - If `startTime` is in the future, the `ratePerSecond` must be greater than zero. - The `token` must not be the native token. - The `token`'s decimals must be less than or equal to 18.",
            "params": {
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "recipient": "The address receiving the tokens.",
              "sender": "The address streaming the tokens, which is able to adjust and pause the stream. It doesn't have to be the same as `msg.sender`.",
              "startTime": "The timestamp when the stream starts. A sentinel value of zero means the stream will be created with the snapshot time as `block.timestamp`.",
              "token": "The contract address of the ERC-20 token to be streamed.",
              "transferable": "Boolean indicating if the stream NFT is transferable."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createAndDeposit(address,address,uint128,uint40,address,bool,uint128)": {
            "details": "Emits a {Transfer}, {CreateFlowStream}, {DepositFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {create} and {deposit}. Requirements: - Refer to the requirements in {create} and {deposit}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "recipient": "The address receiving the tokens.",
              "sender": "The address streaming the tokens. It doesn't have to be the same as `msg.sender`.",
              "startTime": "The timestamp when the stream starts. A sentinel value of zero means the stream will be created with the snapshot time as `block.timestamp`.",
              "token": "The contract address of the ERC-20 token to be streamed.",
              "transferable": "Boolean indicating if the stream NFT is transferable."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "depletionTimeOf(uint256)": {
            "details": "Reverts on the following conditions: - If `streamId` references a paused or a null stream. - If stream balance is zero.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "deposit(uint256,uint128,address,address)": {
            "details": "Emits a {Transfer}, {DepositFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `amount` must be greater than zero. - `sender` and `recipient` must match the stream's sender and recipient addresses.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "recipient": "The stream's recipient address.",
              "sender": "The stream's sender address.",
              "streamId": "The ID of the stream to deposit to."
            }
          },
          "depositAndPause(uint256,uint128)": {
            "details": "Emits a {Transfer}, {DepositFlowStream}, {PauseFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {deposit} and {pause}. Requirements: - Refer to the requirements in {deposit} and {pause}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "streamId": "The ID of the stream to deposit to, and then pause."
            }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getBalance(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRatePerSecond(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The ID of the stream to make the query for." }
          },
          "getRecipient(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSender(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSnapshotDebtScaled(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSnapshotTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The ID of the stream to make the query for." }
          },
          "getStream(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getToken(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The ID of the stream to make the query for." }
          },
          "getTokenDecimals(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The ID of the stream to make the query for." }
          },
          "isApprovedForAll(address,address)": { "details": "See {IERC721-isApprovedForAll}." },
          "isStream(uint256)": {
            "details": "Does not revert if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isTransferable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isVoided(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ongoingDebtScaledOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "pause(uint256)": {
            "details": "Emits a {PauseFlowStream} and {MetadataUpdate} event. Notes: - It updates snapshot debt and snapshot time. - It sets the rate per second to zero. Requirements: - Must not be delegate called. - `streamId` must not reference a null, pending or paused stream. - `msg.sender` must be the stream's sender.",
            "params": { "streamId": "The ID of the stream to pause." }
          },
          "recover(address,address)": {
            "details": "Emits a {Recover} event. Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the comptroller contract. - The surplus amount must be greater than zero.",
            "params": {
              "to": "The address to send the surplus amount.",
              "token": "The contract address of the ERC-20 token to recover for."
            }
          },
          "refund(uint256,uint128)": {
            "details": "Emits a {Transfer}, {RefundFromFlowStream} and {MetadataUpdate} event. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `msg.sender` must be the sender. - `amount` must be greater than zero and must not exceed the refundable amount.",
            "params": {
              "amount": "The amount to refund, denoted in token's decimals.",
              "streamId": "The ID of the stream to refund from."
            }
          },
          "refundAndPause(uint256,uint128)": {
            "details": "Emits a {Transfer}, {RefundFromFlowStream}, {PauseFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {pause}. Requirements: - Refer to the requirements in {refund} and {pause}.",
            "params": {
              "amount": "The amount to refund, denoted in token's decimals.",
              "streamId": "The ID of the stream to refund from and then pause."
            }
          },
          "refundMax(uint256)": {
            "details": "Emits a {Transfer}, {RefundFromFlowStream} and {MetadataUpdate} event. Requirements: - Refer to the requirements in {refund}.",
            "params": { "streamId": "The ID of the stream to refund from." },
            "returns": { "refundedAmount": "The amount refunded to the stream sender, denoted in token's decimals." }
          },
          "refundableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "restart(uint256,uint128)": {
            "details": "Emits a {RestartFlowStream} and {MetadataUpdate} event. Notes: - It updates snapshot debt and snapshot time. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream, must be paused, and must not be voided. - `msg.sender` must be the stream's sender. - `ratePerSecond` must be greater than zero.",
            "params": {
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to restart."
            }
          },
          "restartAndDeposit(uint256,uint128,uint128)": {
            "details": "Emits a {RestartFlowStream}, {Transfer}, {DepositFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {restart} and {deposit}. Requirements: - `amount` must be greater than zero. - Refer to the requirements in {restart}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to restart."
            }
          },
          "safeTransferFrom(address,address,uint256)": { "details": "See {IERC721-safeTransferFrom}." },
          "safeTransferFrom(address,address,uint256,bytes)": { "details": "See {IERC721-safeTransferFrom}." },
          "setApprovalForAll(address,bool)": { "details": "See {IERC721-setApprovalForAll}." },
          "setComptroller(address)": {
            "details": "Emits a {SetComptroller} event. Requirements: - `msg.sender` must be the current comptroller. - The new comptroller must return `true` from {supportsInterface} with the comptroller's minimal interface ID which is defined as the XOR of the following function selectors: 1. {calculateMinFeeWeiFor} 2. {convertUSDFeeToWei} 3. {execute} 4. {getMinFeeUSDFor}",
            "params": { "newComptroller": "The address of the new comptroller contract." }
          },
          "setNFTDescriptor(address)": {
            "details": "Emits a {SetNFTDescriptor} and {BatchMetadataUpdate} event. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the comptroller contract.",
            "params": { "newNFTDescriptor": "The address of the new NFT descriptor contract." }
          },
          "setNativeToken(address)": {
            "details": "For more information, see the documentation for {nativeToken}. Emits a {SetNativeToken} event. Requirements: - `msg.sender` must be the comptroller contract. - `newNativeToken` must not be zero address. - The native token must not be already set.",
            "params": { "newNativeToken": "The address of the native token." }
          },
          "statusOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream. Integrators should exercise caution when depending on the return value of this function as streams can be paused and resumed at any moment.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "supportsInterface(bytes4)": { "details": "See {IERC165-supportsInterface}." },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "totalDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "transferFeesToComptroller()": { "details": "Emits a {TransferFeesToComptroller} event." },
          "transferFrom(address,address,uint256)": { "details": "See {IERC721-transferFrom}." },
          "transferTokens(address,address,uint128)": {
            "details": "Emits a {Transfer} event. Requirements: - `msg.sender` must have approved this contract to spend at least `amount` tokens.",
            "params": {
              "amount": "The amount of tokens to transfer, denoted in token's decimals.",
              "to": "The address receiving the tokens.",
              "token": "The contract address of the ERC-20 token to be transferred."
            }
          },
          "uncoveredDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "void(uint256)": {
            "details": "Emits a {VoidFlowStream} and {MetadataUpdate} event. Notes: - It sets snapshot time to the `block.timestamp`. - Voiding an insolvent stream sets the snapshot debt to the stream's balance making the uncovered debt to become zero. - Voiding a solvent stream updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. - A voided stream cannot be restarted. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `msg.sender` must either be the stream's sender, recipient or an approved third party.",
            "params": { "streamId": "The ID of the stream to void." }
          },
          "withdraw(uint256,address,uint128)": {
            "details": "Emits a {Transfer}, {WithdrawFromFlowStream} and {MetadataUpdate} event. Notes: - It sets the snapshot time to the `block.timestamp` if `amount` is greater than snapshot debt. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `to` must not be the zero address. - `to` must be the recipient if `msg.sender` is not the stream's recipient or an approved third party. - `amount` must  be greater than zero and must not exceed the withdrawable amount.",
            "params": {
              "amount": "The amount to withdraw, denoted in token's decimals.",
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            }
          },
          "withdrawMax(uint256,address)": {
            "details": "Emits a {Transfer}, {WithdrawFromFlowStream} and {MetadataUpdate} event. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.",
            "params": {
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            },
            "returns": { "withdrawnAmount": "The amount withdrawn to the recipient, denoted in token's decimals." }
          },
          "withdrawableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": { "withdrawableAmount": "The amount that the recipient can withdraw." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adjustRatePerSecond(uint256,uint128)": { "notice": "Changes the stream's rate per second." },
          "aggregateAmount(address)": {
            "notice": "Retrieves the aggregate amount across all streams, denoted in units of the token's decimals."
          },
          "batch(bytes[])": { "notice": "Allows batched calls to self, i.e., `this` contract." },
          "calculateMinFeeWei(uint256)": {
            "notice": "Calculates the minimum fee in wei required to withdraw from the given stream ID."
          },
          "comptroller()": { "notice": "Retrieves the address of the comptroller contract." },
          "coveredDebtOf(uint256)": {
            "notice": "Returns the amount of debt covered by the stream balance, denoted in token's decimals."
          },
          "create(address,address,uint128,uint40,address,bool)": {
            "notice": "Creates a new Flow stream by setting the snapshot time to `startTime` and leaving the balance to zero. The stream is wrapped in an ERC-721 NFT."
          },
          "createAndDeposit(address,address,uint128,uint40,address,bool,uint128)": {
            "notice": "Creates a new Flow stream by setting the snapshot time to `startTime` and the balance to `amount`. The stream is wrapped in an ERC-721 NFT."
          },
          "depletionTimeOf(uint256)": {
            "notice": "Returns the time at which the total debt exceeds stream balance. If the total debt exceeds the stream balance, it returns 0."
          },
          "deposit(uint256,uint128,address,address)": { "notice": "Makes a deposit in a stream." },
          "depositAndPause(uint256,uint128)": { "notice": "Deposits tokens in a stream and pauses it." },
          "getBalance(uint256)": {
            "notice": "Retrieves the balance of the stream, i.e. the total deposited amounts subtracted by the total withdrawn amounts, denoted in token's decimals."
          },
          "getRatePerSecond(uint256)": {
            "notice": "Retrieves the rate per second of the stream, denoted as a fixed-point number where 1e18 is 1 token per second."
          },
          "getRecipient(uint256)": { "notice": "Retrieves the stream's recipient." },
          "getSender(uint256)": { "notice": "Retrieves the stream's sender." },
          "getSnapshotDebtScaled(uint256)": {
            "notice": "Retrieves the snapshot debt of the stream, denoted as a fixed-point number where 1e18 is 1 token."
          },
          "getSnapshotTime(uint256)": {
            "notice": "Retrieves the snapshot time of the stream, which is a Unix timestamp."
          },
          "getStream(uint256)": { "notice": "Retrieves the stream entity." },
          "getToken(uint256)": { "notice": "Retrieves the token of the stream." },
          "getTokenDecimals(uint256)": { "notice": "Retrieves the token decimals of the stream." },
          "isStream(uint256)": { "notice": "Retrieves a flag indicating whether the stream exists." },
          "isTransferable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream NFT is transferable."
          },
          "isVoided(uint256)": { "notice": "Retrieves a flag indicating whether the stream is voided." },
          "nativeToken()": {
            "notice": "Retrieves the address of the ERC-20 interface of the native token, if it exists."
          },
          "nextStreamId()": { "notice": "Counter for stream ids." },
          "nftDescriptor()": { "notice": "Contract that generates the non-fungible token URI." },
          "ongoingDebtScaledOf(uint256)": {
            "notice": "Returns the amount of debt accrued since the snapshot time until now, denoted as a fixed-point number where 1e18 is 1 token. If the stream is pending, it returns zero."
          },
          "pause(uint256)": { "notice": "Pauses the stream." },
          "recover(address,address)": { "notice": "Recover the surplus amount of tokens." },
          "refund(uint256,uint128)": {
            "notice": "Refunds the provided amount of tokens from the stream to the sender's address."
          },
          "refundAndPause(uint256,uint128)": {
            "notice": "Refunds the provided amount of tokens from the stream to the sender's address."
          },
          "refundMax(uint256)": {
            "notice": "Refunds the entire refundable amount of tokens from the stream to the sender's address."
          },
          "refundableAmountOf(uint256)": {
            "notice": "Returns the amount that the sender can be refunded from the stream, denoted in token's decimals."
          },
          "restart(uint256,uint128)": { "notice": "Restarts the stream with the provided rate per second." },
          "restartAndDeposit(uint256,uint128,uint128)": {
            "notice": "Restarts the stream with the provided rate per second, and makes a deposit."
          },
          "setComptroller(address)": { "notice": "Sets the comptroller to a new address." },
          "setNFTDescriptor(address)": {
            "notice": "Sets a new NFT descriptor contract, which produces the URI describing the Sablier stream NFTs."
          },
          "setNativeToken(address)": { "notice": "Sets the native token address. Once set, it cannot be changed." },
          "statusOf(uint256)": { "notice": "Returns the stream's status." },
          "totalDebtOf(uint256)": {
            "notice": "Returns the total amount owed by the sender to the recipient, denoted in token's decimals."
          },
          "transferFeesToComptroller()": { "notice": "Transfers the fees to the comptroller contract." },
          "transferTokens(address,address,uint128)": {
            "notice": "A helper to transfer ERC-20 tokens from the caller to the provided address. Useful for paying one-time bonuses."
          },
          "uncoveredDebtOf(uint256)": {
            "notice": "Returns the amount of debt not covered by the stream balance, denoted in token's decimals."
          },
          "void(uint256)": { "notice": "Voids a stream." },
          "withdraw(uint256,address,uint128)": {
            "notice": "Withdraws the provided `amount` to the provided `to` address."
          },
          "withdrawMax(uint256,address)": {
            "notice": "Withdraws the entire withdrawable amount to the provided `to` address."
          },
          "withdrawableAmountOf(uint256)": {
            "notice": "Calculates the amount that the recipient can withdraw from the stream, denoted in token decimals. This is an alias for `coveredDebtOf`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@arbitrum/=node_modules/@arbitrum/",
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@offchainlabs/=node_modules/@offchainlabs/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@prb/=node_modules/@prb/",
        "@sablier/=node_modules/@sablier/",
        "@scroll-tech/=node_modules/@scroll-tech/",
        "@zksync/=node_modules/@zksync/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": { "enabled": true, "runs": 1000000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/SablierFlow.sol": "SablierFlow" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957",
        "urls": [
          "bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f",
          "dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a",
        "urls": [
          "bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09",
          "dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
        "urls": [
          "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
          "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
        "keccak256": "0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac",
        "urls": [
          "bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24",
          "dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99",
        "urls": [
          "bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05",
          "dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD21x18.sol": {
        "keccak256": "0xb0176747ae9c9f329bce39730d4d315b839e73a815494ddf2de2094aa9056957",
        "urls": [
          "bzz-raw://534a82fe091627f9d01e665ac763daf56981b30b3976269f8e5c33a84a2dbebc",
          "dweb:/ipfs/QmYiiGJNr4S4ypYB4KGBPMTMiNskert8Cp4s6uf1CU3k73"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c",
        "urls": [
          "bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11",
          "dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8",
        "urls": [
          "bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab",
          "dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6",
        "urls": [
          "bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca",
          "dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0",
        "urls": [
          "bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353",
          "dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Casting.sol": {
        "keccak256": "0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36",
        "urls": [
          "bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2",
          "dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Constants.sol": {
        "keccak256": "0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4",
        "urls": [
          "bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396",
          "dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Errors.sol": {
        "keccak256": "0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a",
        "urls": [
          "bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee",
          "dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/ValueType.sol": {
        "keccak256": "0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092",
        "urls": [
          "bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880",
          "dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39",
        "urls": [
          "bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d",
          "dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2",
        "urls": [
          "bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf",
          "dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84",
        "urls": [
          "bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462",
          "dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d",
        "urls": [
          "bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919",
          "dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Casting.sol": {
        "keccak256": "0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65",
        "urls": [
          "bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09",
          "dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Constants.sol": {
        "keccak256": "0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601",
        "urls": [
          "bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60",
          "dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Errors.sol": {
        "keccak256": "0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415",
        "urls": [
          "bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80",
          "dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/ValueType.sol": {
        "keccak256": "0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25",
        "urls": [
          "bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af",
          "dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6",
        "urls": [
          "bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae",
          "dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd",
        "urls": [
          "bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437",
          "dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0",
        "urls": [
          "bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41",
          "dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6",
        "urls": [
          "bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780",
          "dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044",
        "urls": [
          "bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8",
          "dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc",
        "urls": [
          "bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6",
          "dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3",
        "urls": [
          "bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47",
          "dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n"
        ],
        "license": "MIT"
      },
      "node_modules/@sablier/evm-utils/src/Batch.sol": {
        "keccak256": "0x489db1a48d7b4324aaf51ac81da759cf5cbe4926dff67aeff1eb355367a8006c",
        "urls": [
          "bzz-raw://c1211c417550aee8f255f9418ad27b19ef61c652b3d9c25c7b3d4854f0a57cc9",
          "dweb:/ipfs/QmSdqBUCVVSBZwdnSRgcYG8iG7YFwBoQSqqqnt4soNm9qN"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/Comptrollerable.sol": {
        "keccak256": "0x091133bb84e9002c202ae434dcf4efd5bdbf3219ea35bc9cbd68376b87dbc89c",
        "urls": [
          "bzz-raw://17743ed45b9adf6216d51a4ac2ccc41bad2de9a82d54abcb4c24cea6de5b2931",
          "dweb:/ipfs/QmSRH9LBY2WbdZJSwXFNK5piELAt9VENhscNKbdBCziTMo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/NoDelegateCall.sol": {
        "keccak256": "0xd03a61ec509ad031decabcc1f4e2cb1846eebbbac78a1b18a039d19f9045fb3d",
        "urls": [
          "bzz-raw://d47362745c490efa40bf33302542cdb5710cd76cca4fd3f60bc4eb5fc3431bc7",
          "dweb:/ipfs/QmNrjaHQthPJviT4j5DJeQJsEN2cSbW3hPTLqT28mZPhXm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IAdminable.sol": {
        "keccak256": "0x3228d63e9b0b951030c73c42bb071e64f0ff0eadbcbeefad3f29a48366539c26",
        "urls": [
          "bzz-raw://acc90ad2bec0e84349b56611b35b56bfb75a5930fd1babb2bd638fbbb15bd126",
          "dweb:/ipfs/QmSLnHx6bo4BQeBKYferfEhZo1Z4xCXdDF1bzJoHUafHt4"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IBatch.sol": {
        "keccak256": "0x6d3aab84cb0529afc1e8b4a2ad4f89feb15c76b6a515a14fdf4b98887d856ae4",
        "urls": [
          "bzz-raw://77e68471ec663dda763ac40bb7c35d47b2a87e262461dad9a2f03377f928e758",
          "dweb:/ipfs/QmdvAq7XyNAUA8uLhnFrWuBgZAjNjoq6BaY5AyjFKvC8Xh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IComptrollerable.sol": {
        "keccak256": "0xdb541c2b423f15c309f6b0cff9b96897694bffb0e3ffeacab1c292e4681e6819",
        "urls": [
          "bzz-raw://d116fc3f5333621a07ffbbe79f202195dfcadf247b041a8e63e06dbc11c876cd",
          "dweb:/ipfs/QmPZxgLU4ajfNzYF3CvTDeLzrxVBDk446sNHfULcqwykQh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/IRoleAdminable.sol": {
        "keccak256": "0x9fb77d7cfe69d0612514d9ce87377b34b5cab37d011ddfe8299d4da6568f7148",
        "urls": [
          "bzz-raw://6fdef13e46066763f8496a3b940dd464ee13edf85592e4c45c4b27e78a564233",
          "dweb:/ipfs/QmUcknJPPm9KEnAUrgoY1mrSUcQmwokbu8K5SUaB1rU1fi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/interfaces/ISablierComptroller.sol": {
        "keccak256": "0x510664025dc3ca300105f58d6e2e0714ad494bfa3064f31f12d7cbea1daf80e9",
        "urls": [
          "bzz-raw://38a8374ac5ca248df00bba9c33f65befd05e413b94726be4ce19fd2346e28e2b",
          "dweb:/ipfs/QmQvYdgBmA5e4PDWJKNFY1Nbn3pj8pqEsTE2oAE5KKEvFM"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@sablier/evm-utils/src/libraries/Errors.sol": {
        "keccak256": "0xedb89cb164fc16d162ac9ee5e8e649b10c577a78a76adcd6a2934d16263fd172",
        "urls": [
          "bzz-raw://e939b25bd82858dbbe1c25f13a4bdf48c75eecd9f4dda1be26f4dfee573fb16b",
          "dweb:/ipfs/QmTci8g82qV4r6XPQtYvvxMM6Cp5fS8tq37DtA9kVB5WoX"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/SablierFlow.sol": {
        "keccak256": "0x771d41f672b44777ccae5c3e7e1c31cdc2b7313c2c64ebbe5d1acc2bb0d0ec3b",
        "urls": [
          "bzz-raw://60fa30e0174705776d17862afd4aba4ee8d133798e1316f09331e759ed3f09fc",
          "dweb:/ipfs/QmSNdxohWcLtHZC855erzvYVFV9g6jHfBAo5eb1dHakmNJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/SablierFlowState.sol": {
        "keccak256": "0x2bb100709f269fa94fd9d657cd51d3c2ec1e0999355f788428efceef8ab3b477",
        "urls": [
          "bzz-raw://4ea7be601d673dbd87a4ee5f749c31d3df0c5afb3be92eacfddcda6a858fd340",
          "dweb:/ipfs/QmejNEMAP1jkxcGNzkcs8fBzWRqURRtefpqbEBjdErmM4z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IFlowNFTDescriptor.sol": {
        "keccak256": "0xdf964042ae7c74f03909d020fbb63e0ae56aeb2fa47213e3775a1e3263d00e54",
        "urls": [
          "bzz-raw://0d4ede276be940185ea0b638c8f38f68232b6f4394ce0a69c2c729bc761aec82",
          "dweb:/ipfs/QmSgivdvgxrY7n6XbLQcGp645nRw1y2272iJUVhQyfnWUp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierFlow.sol": {
        "keccak256": "0xb8384b247cbc7fac495d3ef0d43aa0bfd89bf5d2a1bb8ff201c34793e0d573fa",
        "urls": [
          "bzz-raw://bf7f90880fad3e63bfd006884d984834e958db24b8a382c3ec72204082bd5918",
          "dweb:/ipfs/QmZkt1gafcbXvqbvGDXE7zmY5ac6y3zvfvEur1ZXfNNMga"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ISablierFlowState.sol": {
        "keccak256": "0x34de979793f5ae6efea67b31f6884e469f4436c8add0dc1c7e1151926db316e3",
        "urls": [
          "bzz-raw://c25ab6522693ad95750b56bd5f7b2889a9291395d77ae4f417f0c45f5f165f08",
          "dweb:/ipfs/QmZpeUNJzwriC9aSbKacojNCy3HtY7JBGthC4Vs3sWt83f"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x94634bdc4d687c2df9818597d1f0ae09211003d81a6ce69634d803c54fb8773e",
        "urls": [
          "bzz-raw://6900c22b1aeb53b584e33afd21d1844aabdc1d2162ea08622f6cfcd90d693f52",
          "dweb:/ipfs/Qmf4qi3x3QbDM3mBh5L8m9PGE8J87pjpchKZTnfpeneZt6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Helpers.sol": {
        "keccak256": "0xabe826ee4c0e9d8169f51665e1b0eb129888f62d92b2ae10deec6da6343f115a",
        "urls": [
          "bzz-raw://6e148c93d7c164344b45dc00202a6962efb449a068efdd0acbf26759c533c7e9",
          "dweb:/ipfs/QmcJxsaWid5XKDkHKFkGry2xjcNV8po31YfpHDGEaQ6ZFT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0x73391073cf39bd553a0128aa4af5ea937d604a87393bbe37689727ccf10cf67f",
        "urls": [
          "bzz-raw://2b32bbf9314ec331953938b36102f91fa6e899879cc450a34bd0bd397e618a9e",
          "dweb:/ipfs/QmbtxAvTVpvWBipLm3ALAdHhGXa6BoXZreBFGW9pfinoYE"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 86
}
